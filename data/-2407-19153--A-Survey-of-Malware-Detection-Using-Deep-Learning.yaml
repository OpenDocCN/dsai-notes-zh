- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '类别: 未分类'
- en: 'date: 2024-09-06 19:31:00'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '日期: 2024-09-06 19:31:00'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: '[2407.19153] A Survey of Malware Detection Using Deep Learning'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[2407.19153] 深度学习恶意软件检测综述'
- en: 来源：[https://ar5iv.labs.arxiv.org/html/2407.19153](https://ar5iv.labs.arxiv.org/html/2407.19153)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://ar5iv.labs.arxiv.org/html/2407.19153](https://ar5iv.labs.arxiv.org/html/2407.19153)
- en: \cormark
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: \cormark
- en: '[1] \cortext[cor1]Corresponding author:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] \cortext[cor1]通讯作者:'
- en: A Survey of Malware Detection Using Deep Learning
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深度学习恶意软件检测综述
- en: Ahmed Bensaoud abensaou@uccs.edu    Jugal Kalita jkalita@uccs.edu Deptarment
    of Computer Science, University of Colorado Colorado Springs, CO, USA    Mahmoud
    Bensaoud mbensao2@uccs.edu
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Ahmed Bensaoud abensaou@uccs.edu    Jugal Kalita jkalita@uccs.edu 科罗拉多大学科罗拉多斯普林斯分校计算机科学系，美国科罗拉多州科罗拉多斯普林斯
       Mahmoud Bensaoud mbensao2@uccs.edu
- en: Abstract
  id: totrans-10
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 摘要
- en: The problem of malicious software (malware) detection and classification is
    a complex task, and there is no perfect approach. There is still a lot of work
    to be done. Unlike most other research areas, standard benchmarks are difficult
    to find for malware detection. This paper aims to investigate recent advances
    in malware detection on MacOS, Windows, iOS, Android, and Linux using deep learning
    (DL) by investigating DL in text and image classification, the use of pre-trained
    and multi-task learning models for malware detection approaches to obtain high
    accuracy and which the best approach if we have a standard benchmark dataset.
    We discuss the issues and the challenges in malware detection using DL classifiers
    by reviewing the effectiveness of these DL classifiers and their inability to
    explain their decisions and actions to DL developers presenting the need to use
    Explainable Machine Learning (XAI) or Interpretable Machine Learning (IML) programs.
    Additionally, we discuss the impact of adversarial attacks on deep learning models,
    negatively affecting their generalization capabilities and resulting in poor performance
    on unseen data. We believe there is a need to train and test the effectiveness
    and efficiency of the current state-of-the-art deep learning models on different
    malware datasets. We examine eight popular DL approaches on various datasets.
    This survey will help researchers develop a general understanding of malware recognition
    using deep learning.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意软件检测和分类是一个复杂的任务，目前尚无完美的方法，仍有许多工作要做。与大多数其他研究领域不同，恶意软件检测的标准基准很难找到。本文旨在调查在MacOS、Windows、iOS、Android和Linux上使用深度学习（DL）进行恶意软件检测的最新进展，探讨文本和图像分类中的DL，使用预训练和多任务学习模型的恶意软件检测方法，以获得高准确率，并在拥有标准基准数据集的情况下确定最佳方法。我们讨论了使用DL分类器进行恶意软件检测中的问题和挑战，通过回顾这些DL分类器的有效性以及它们无法向DL开发者解释其决策和行动，提出了使用可解释机器学习（XAI）或可解释机器学习（IML）程序的需求。此外，我们讨论了对抗攻击对深度学习模型的影响，这些攻击负面影响了模型的泛化能力，并导致在未见数据上的性能较差。我们认为需要在不同的恶意软件数据集上训练和测试当前最先进的深度学习模型的有效性和效率。我们考察了八种流行的DL方法在各种数据集上的表现。这项综述将帮助研究人员建立对使用深度学习进行恶意软件识别的总体理解。
- en: 'keywords:'
  id: totrans-12
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '关键词:'
- en: Malware Detection \sepMulti-task Learning \sepMalware Image \sepGenerative Adversarial
    Networks \sepMobile Malware \sepConvolutional Neural Network
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意软件检测 \sep 多任务学习 \sep 恶意软件图像 \sep 生成对抗网络 \sep 移动恶意软件 \sep 卷积神经网络
- en: 1 Introduction
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1 引言
- en: Operating systems such as Windows, Android, Linux, and MacOS are updated every
    few weeks to protect against critical vulnerabilities. On the other hand, malware
    authors are also always looking for new ways to finesse their malicious code to
    overwhelm the new operating system updates. Every operating system is vulnerable.
    In addition, since operating systems run on desktops and servers, and even on
    routers, security cameras, drones and other devices, the biggest problem is diversity
    of systems to protect because all these devices are very different.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 像Windows、Android、Linux和MacOS这样的操作系统每隔几周就会更新一次，以保护免受关键漏洞的威胁。另一方面，恶意软件作者也总是在寻找新的方法来改进其恶意代码，以击败新的操作系统更新。每个操作系统都有其脆弱性。此外，由于操作系统运行在桌面和服务器上，甚至在路由器、安全摄像头、无人机等设备上，最大的挑战是保护系统的多样性，因为所有这些设备都非常不同。
- en: Most every day, there is a new story about malicious software in the news. For
    example, in Oct 2022, cyberattacks coming from a Russia-based hacker group known
    as Killnet targeted the government services of the state of Colorado, Alabama,
    Alaska, Delaware, Connecticut, Florida, Mississippi, and Kansas websites¹¹1https://www.nbcnews.com/tech/security/colorado-state-websites-struggle-russian-hackers-vow-attack-rcna51012.
    Again in 2022, hackers working on behalf of the Chinese government stole $20 million
    from covid relief benefits²²2https://www.nbcnews.com/tech/security/china-hacked-least-six-us-state-governments-report-says-rcna19255.
    The increase in the vulnerability of sensitive data due to cyber-attacks, cyber-threats,
    cyber-crimes, and malware needs to be countered. In 2023, Fig.  [1](#S1.F1 "Figure
    1 ‣ 1 Introduction ‣ A Survey of Malware Detection Using Deep Learning") shows
    countries that have been attacked by malware and the top origins of these malware
    ³³3https://attackmap.sonicwall.com/live-attack-map.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 每天几乎都有关于恶意软件的新故事。例如，在2022年10月，来自一个俄罗斯黑客组织Killnet的网络攻击目标是科罗拉多州、阿拉巴马州、阿拉斯加州、特拉华州、康涅狄格州、佛罗里达州、密西西比州和堪萨斯州的政府服务网站¹¹1https://www.nbcnews.com/tech/security/colorado-state-websites-struggle-russian-hackers-vow-attack-rcna51012。在2022年，再次有黑客代表中国政府偷取了2000万美元的COVID救助金²²2https://www.nbcnews.com/tech/security/china-hacked-least-six-us-state-governments-report-says-rcna19255。由于网络攻击、网络威胁、网络犯罪和恶意软件带来的敏感数据脆弱性增加，需要采取应对措施。在2023年，图[1](#S1.F1
    "Figure 1 ‣ 1 Introduction ‣ A Survey of Malware Detection Using Deep Learning")显示了遭受恶意软件攻击的国家以及这些恶意软件的主要来源³³3https://attackmap.sonicwall.com/live-attack-map。
- en: '![Refer to caption](img/2f0386bd35ae6a1f8eca66ddce1f2e1b.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/2f0386bd35ae6a1f8eca66ddce1f2e1b.png)'
- en: 'Figure 1: Worldwide attacks'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图1：全球攻击
- en: Researchers have used deep learning to classify malware samples since it generalizes
    well to unseen data. Our survey focuses on static, dynamic and hybrid malware
    detection methods in Windows, Android, Linux, MacOS, and iOS. We describe the
    strengths and weaknesses of deep learning models for malware detection. Most recent
    research uses deep neural networks (DNNs) for malware classification and achieves
    high success. State-of-the-art DNN models have been developed against modern malware
    such as Zeus, Fleeceware, RaaS, Mount Locker, REvil, LockBit, Cryptesla, Snugy,
    and Shlayer.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 研究人员使用深度学习来分类恶意软件样本，因为它对未见数据具有很好的泛化能力。我们的调查重点是Windows、Android、Linux、MacOS和iOS中的静态、动态和混合恶意软件检测方法。我们描述了深度学习模型在恶意软件检测中的优缺点。最新的研究使用深度神经网络（DNNs）进行恶意软件分类，并取得了高成功率。最先进的DNN模型已针对现代恶意软件如Zeus、Fleeceware、RaaS、Mount
    Locker、REvil、LockBit、Cryptesla、Snugy和Shlayer进行了开发。
- en: 'The contributions of this paper are as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 本文的贡献如下：
- en: •
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: It gives the big picture of how hackers attack (Sections 2,3,4,5).
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 概述了黑客攻击的全貌（第2、3、4、5节）。
- en: •
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: It presents how to generate images form malware files (Section 6).
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 介绍了如何生成恶意软件文件的图像（第6节）。
- en: •
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: It discusses deep learning models for malware image classification (Section
    7).
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 讨论了用于恶意软件图像分类的深度学习模型（第7节）。
- en: •
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: It describes feature reduction that can improve performance (Section 8).
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 描述了可以提升性能的特征减少方法（第8节）。
- en: •
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: It discusses transfer learning approaches in the classification of malware and
    what needs to improve for better performance (Section 9).
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 讨论了在恶意软件分类中转移学习方法及其改进空间（第9节）。
- en: •
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: It reviews the use of natural language processing in malware classification
    (Section 10).
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 回顾了自然语言处理在恶意软件分类中的应用（第10节）。
- en: •
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: It presents the deep learning models for cryptographer ransomware (Section 11).
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 介绍了加密勒索软件的深度学习模型（第11节）。
- en: •
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: It shows how we know if we can trust the results of a DL model using Explainable
    Artificial Intelligence, XAI (Section 12).
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 展示了如何使用可解释人工智能（XAI）来验证深度学习模型结果的可信度（第12节）。
- en: •
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: It discusses significant challenge for the reliability and security pozed by
    adversarial attacks on deep learning models (Section 13).
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 讨论了深度学习模型面临的对抗攻击所带来的可靠性和安全性挑战（第13节）。
- en: The rest of this paper, we discuss avenues for future research and we examine
    the Efficientnet B0, B1, B2, B3, B4, B5, B6, and B7 models on malware images datasets
    for classification.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 文章的其余部分讨论了未来研究的方向，并对Efficientnet B0、B1、B2、B3、B4、B5、B6和B7模型在恶意软件图像数据集上的分类进行了检验。
- en: 2 Mechanics of Malware Attacts
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2 恶意软件攻击的机制
- en: The hacker has one goal, which is to get malware installed onto a victim’s computer.
    Because most computers are protected by some type of firewall, direct attacks
    are difficult to impossible to perform. Therefore, attackers attempt to trick
    the computer into running the malicious code. The most common way to do this is
    by using documents or executable files. For instance, a hacker may send an email
    or a phish to the victim with a malicious document attachment or a link to a website
    where the malicious document is located. Once the victim opens the document, embedded
    exploits or scripts run and download or extract more malware. This is the real
    malware the hacker wants to run on the victim’s system and is often something
    like a backdoor or ransomware. However, malicious documents are usually not the
    final piece of malware in an attack, but are one of the compromised vectors used
    by the hacker to get on the system. As an example, below we discuss how a PDF
    document can be used to initiate an attack.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客的目标只有一个，那就是将恶意软件安装到受害者的计算机上。因为大多数计算机都受到某种类型的防火墙保护，直接攻击难以进行。因此，攻击者尝试欺骗计算机运行恶意代码。最常见的方式是使用文档或可执行文件。例如，黑客可能会向受害者发送一封包含恶意文档附件的电子邮件或钓鱼邮件，或者链接到恶意文档所在的网站。一旦受害者打开文档，嵌入的漏洞或脚本将运行并下载或提取更多恶意软件。这才是黑客真正想在受害者系统上运行的恶意软件，通常是像后门或勒索软件这样的东西。然而，恶意文档通常不是攻击中的最终恶意软件，而是黑客用来进入系统的受损向量之一。下面我们将讨论如何利用PDF文档发起攻击。
- en: 2.1 PDF and Document Files
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.1 PDF和文档文件
- en: 'When analyzing PDF, we find three things: Object, which is the structure of
    the PDF, Keywords which control how the PDF works, and Data stored or encoded
    within a PDF.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在分析PDF时，我们发现三件事：对象，即PDF的结构；关键词，控制PDF的工作方式；以及存储或编码在PDF中的数据。
- en: •
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: Objects are the building blocks of a PDFs. Every PDF starts with a Header which
    needs to be present in the first 1024 bytes of the documents. Some hackers take
    advantage of this by putting unrelated data within the first 1024 bytes. This
    is a very simple technique to try to avoid signature-based detection. PDFs are
    composed of objects; each section has specific data within the document or performs
    a specific function. Each object starts with two numbers, followed by the keyword
    obj, and ends with endobj. There are many kinds of objects, such as font objects,
    image objects, and even objects that contain metadata.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对象是PDF的构建块。每个PDF都以头部开始，头部需要出现在文档的前1024字节中。一些黑客利用这一点，在前1024字节中放置无关的数据。这是一种非常简单的技术，试图避免基于签名的检测。PDF由对象组成；每个部分在文档中包含特定数据或执行特定功能。每个对象以两个数字开始，后跟关键词obj，并以endobj结束。对象有许多种类，如字体对象、图像对象，甚至包含元数据的对象。
- en: •
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: There are many keywords that begin with a /and describe how the PDF works. Some
    of the keywords related to malicious activity include /OpenAction, or its abbreviation
    /AA, both of which indicate an automatic action to be performed when the document
    is viewed⁴⁴4https://blog.didierstevens.com/programs/pdf-tools/. This keyword points
    to another object that automatically gets opened or executed when the PDF is opened.
    Malicious PDFs have /OpenAction pointing to some malicious JavaScript, or an object
    containing an export; whenever one opens the document, the system is automatically
    compromised. /JavaScript or /JS keyword indicate the presence of JavaScript code.
    Malicious PDFs usually contain malicious JavaScript to launch an exploit or download
    additional malware. Some objects can be referred to as /Name instead of their
    number. Some PDFs have the ability to have files embedded with keyword /EmbeddedFile,
    /URL or /SubmitForm. /URL is accessed or downloaded when the object is loaded.
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有许多以/开头的关键词描述PDF的工作原理。一些与恶意活动相关的关键词包括/OpenAction，或其缩写/AA，这些都表示在查看文档时要执行的自动操作⁴⁴4https://blog.didierstevens.com/programs/pdf-tools/。这个关键词指向另一个对象，当PDF被打开时，该对象会自动被打开或执行。恶意PDF文档的/OpenAction指向某些恶意JavaScript，或包含导出的对象；每当打开文档时，系统就会自动被侵入。/JavaScript或/JS关键词表示JavaScript代码的存在。恶意PDF通常包含恶意JavaScript来启动漏洞或下载额外的恶意软件。一些对象可以用/Name而不是其编号来引用。一些PDF具有嵌入文件的能力，关键词为/EmbeddedFile、/URL或/SubmitForm。/URL在对象加载时被访问或下载。
- en: •
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'PDFs can encode data in multiple ways, which is very flexible and can store
    data in a number of ways. Hackers can encode and hide their data. For example,
    names are case sensitive, but can be fully or partially hex encoded. More precisely,
    the # sign followed by two hex characters represents hex encoded data. Data also
    can be octal encoded or represented by their base eight number. The octal encoded
    character has a $\displaystyle\backslash$ followed by three digits between 0 and
    7\. However, the hackers can mix hex, octal, and ASCII data all together, which
    makes it possible to hide data such as JavaScript code or URLs.'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: PDFs 可以以多种方式编码数据，这非常灵活，并且可以以多种方式存储数据。黑客可以编码并隐藏他们的数据。例如，名称区分大小写，但可以完全或部分以十六进制编码。更精确地说，`#`
    符号后跟两个十六进制字符表示十六进制编码的数据。数据也可以以八进制编码，或以其八进制数表示。八进制编码字符有一个 `\` 符号，后面跟着三个介于 0 和 7
    之间的数字。然而，黑客可以将十六进制、八进制和 ASCII 数据混合在一起，这使得隐藏例如 JavaScript 代码或 URL 成为可能。
- en: The names and strings can be encoded, but data streams can be modified and encoded
    further using filters. Filters are algorithms that are applied to the data to
    encode or compress within the PDF. There are multiple filters that can be used
    in PDFs, such as /ASCiiHexDecode, Hex encoding of characters; /LZWDecode, LZW
    compression algorithm; /FlateDecode, Zlib compression; /ASCii85Decode, ASCII base-85
    representation; and /Crypt, various encryption algorithms. For example, in Fig.
     [2](#S2.F2 "Figure 2 ‣ 2.1 PDF and Document Files ‣ 2 Mechanics of Malware Attacts
    ‣ A Survey of Malware Detection Using Deep Learning"), we have a PDF document
    with three objects. Object 1 is a catalog that has OpenAction and is referring
    to version 0 of object 2, which means as soon as the document is opened, Object
    2 will be run. Object 2 contains a JavaScript keyword, but we do not see any JavaScript
    code in this object because the JavaScript keyword refers to another object which
    is Object 3\. Object 3 is a stream object as indicated by the stream keyword and
    has been ASCiiHex encoded and compressed with the Zlib compression algorithm.
    However, we have been able to determine that as soon as the PDF opens, JavaScript
    will be executed, and we do not know what the JavaScript’s goal is. If this is
    a malicious PDF, it can cause problems. In Fig.  [3](#S2.F3 "Figure 3 ‣ 2.1 PDF
    and Document Files ‣ 2 Mechanics of Malware Attacts ‣ A Survey of Malware Detection
    Using Deep Learning"), the JavaScript code references the two hosts’ names, performs
    an HTTP GET request to each, saves an executable file, and finally runs it.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 名称和字符串可以被编码，但数据流可以使用过滤器进行修改和进一步编码。过滤器是应用于数据的算法，用于在 PDF 中编码或压缩。有多种过滤器可以在 PDF
    中使用，例如 /ASCiiHexDecode，字符的十六进制编码；/LZWDecode，LZW 压缩算法；/FlateDecode，Zlib 压缩；/ASCii85Decode，ASCII
    base-85 表示；和 /Crypt，各种加密算法。例如，在图 [2](#S2.F2 "图 2 ‣ 2.1 PDF 和文档文件 ‣ 2 恶意攻击的机制 ‣
    使用深度学习进行恶意软件检测的调查") 中，我们有一个包含三个对象的 PDF 文档。对象 1 是一个目录，具有 OpenAction，并引用了对象 2 的版本
    0，这意味着文档一打开，对象 2 将会被运行。对象 2 包含一个 JavaScript 关键字，但我们在这个对象中没有看到任何 JavaScript 代码，因为
    JavaScript 关键字指向另一个对象，即对象 3。对象 3 是一个流对象，如流关键字所示，并且已经使用 ASCiiHex 编码并通过 Zlib 压缩算法进行了压缩。然而，我们已经确定，一旦
    PDF 打开，JavaScript 将被执行，我们不知道 JavaScript 的目标是什么。如果这是一个恶意 PDF，它可能会造成问题。在图 [3](#S2.F3
    "图 3 ‣ 2.1 PDF 和文档文件 ‣ 2 恶意攻击的机制 ‣ 使用深度学习进行恶意软件检测的调查") 中，JavaScript 代码引用了两个主机的名称，向每个主机执行
    HTTP GET 请求，保存一个可执行文件，最后运行它。
- en: '![Refer to caption](img/4d3a97e8592d50da7c884617db731369.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/4d3a97e8592d50da7c884617db731369.png)'
- en: 'Figure 2: PDF format example.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2：PDF 格式示例。
- en: Is malicious JavaScript used only in documents? The answer is everywhere. Malicious
    JavaScript is used in web pages that are created by web attack kits that perform
    drive-by downloads. The user opens the website that has been compromised or loads
    a malicious ad, which then loads malicious JavaScript. Without JavaScript, it
    is difficult for hackers to get their exploit to work.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意 JavaScript 仅在文档中使用吗？答案是无处不在。恶意 JavaScript 被用于由网络攻击工具包创建的网页，这些工具包会执行驱动下载。用户打开了被破坏的网站或加载了恶意广告，然后恶意
    JavaScript 被加载。如果没有 JavaScript，黑客很难使他们的漏洞利用生效。
- en: '![Refer to caption](img/016fe454c7d2f904390bc8330a8fd785.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/016fe454c7d2f904390bc8330a8fd785.png)'
- en: 'Figure 3: Malicious JavaScript code'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3：恶意 JavaScript 代码
- en: Most hackers try to hide what their script is doing using obfuscation techniques.
    Most techniques used to obfuscate script can be broken down into four different
    categories. How the format of a program is obfuscated is shown in Fig.  [4](#S2.F4
    "Figure 4 ‣ 2.1 PDF and Document Files ‣ 2 Mechanics of Malware Attacts ‣ A Survey
    of Malware Detection Using Deep Learning"); approaches include adding extra lines
    of code, obfuscating the data, and substituting variable names.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数黑客尝试使用混淆技术隐藏其脚本的行为。用于混淆脚本的技术大致可以分为四类。程序的混淆格式如图[4](#S2.F4 "Figure 4 ‣ 2.1
    PDF and Document Files ‣ 2 Mechanics of Malware Attacts ‣ A Survey of Malware
    Detection Using Deep Learning")所示；方法包括添加额外的代码行、混淆数据和替换变量名。
- en: '![Refer to caption](img/c6983df8390a79ba725431a6d0472473.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/c6983df8390a79ba725431a6d0472473.png)'
- en: 'Figure 4: Obfuscated malicious JavaScript code.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图4：混淆的恶意JavaScript代码。
- en: 3 Nature of Malware Code
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3 恶意软件代码的性质
- en: 'The nature of malware code encompasses various characteristics and behaviors
    that define its purpose and functionality. Malware, short for malicious software,
    refers to any code or program designed with malicious intent to compromise systems,
    steal information, or disrupt normal operations. The nature of malware code can
    vary depending on its specific type and objectives, but some common attributes
    include:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意软件代码的性质包括定义其目的和功能的各种特征和行为。恶意软件，即恶意软件的简称，指的是任何设计有恶意意图的代码或程序，用于破坏系统、窃取信息或干扰正常操作。恶意软件代码的性质可能因其具体类型和目标而异，但一些常见属性包括：
- en: 3.1 Obfuscation
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.1 混淆
- en: Obfuscation is an attempt by an author of a piece of code to obscure the meaning,
    to make something unclear, or make it very difficult to analyze. It may use encryption
    or compression to hide its true intentions or to evade signature-based detection
    by security software.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 混淆是代码作者试图模糊其含义、使其不清晰或难以分析的一种尝试。它可能使用加密或压缩来隐藏其真正意图，或避开基于签名的安全软件检测。
- en: 3.2 Payload Delivery
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.2 有效载荷传递
- en: Malware code typically carries a payload, which is the malicious action it intends
    to execute. This can range from stealing sensitive information (e.g., financial
    data, login credentials ) to launching distributed denial-of-service (DDoS) attacks,
    encrypting files for ransom (ransomware), or providing backdoor access for remote
    control.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意软件代码通常携带有效载荷，即它打算执行的恶意操作。这可以包括窃取敏感信息（例如，财务数据、登录凭据）、发起分布式拒绝服务（DDoS）攻击、加密文件以索要赎金（勒索软件）或提供用于远程控制的后门访问。
- en: 3.3 Command and Control (C&C)
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.3 命令与控制（C&C）
- en: Many malware strains establish communication channels with remote servers or
    command-and-control infrastructure. This allows attackers to remotely control
    and manage the infected systems, update the malware, and receive stolen data.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 许多恶意软件变种建立与远程服务器或命令与控制基础设施的通信通道。这使得攻击者能够远程控制和管理感染的系统、更新恶意软件并接收窃取的数据。
- en: 3.4 Self-Replication
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.4 自我复制
- en: Many malware strains possess the ability to self-replicate, allowing them to
    spread across networks, devices, or files. This replication can occur through
    various means, such as attaching to exploiting vulnerabilities, legitimate files,
    or utilizing network resources.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 许多恶意软件变种具备自我复制的能力，使其能够在网络、设备或文件间传播。这种复制可以通过多种方式实现，例如附加到漏洞、合法文件上，或利用网络资源。
- en: 3.5 Exploitation
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.5 利用
- en: Malware leverages vulnerabilities and weaknesses in software, operating systems,
    or user behavior to gain unauthorized access or control. It can exploit security
    flaws, network vulnerabilities, or social engineering techniques to compromise
    systems and execute malicious actions.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意软件利用软件、操作系统或用户行为中的漏洞和弱点来获得未经授权的访问或控制。它可以利用安全漏洞、网络漏洞或社会工程技术来破坏系统并执行恶意操作。
- en: 3.6 Polymorphism
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.6 多态性
- en: Some malware utilizes polymorphic or metamorphic techniques to dynamically change
    its code structure or appearance while preserving its functionality. This makes
    it more challenging for antivirus software to detect and block.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 一些恶意软件使用多态或变形技术来动态改变其代码结构或外观，同时保留其功能。这使得杀毒软件更难以检测和阻止。
- en: 3.7 Ransomware
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.7 勒索软件
- en: A ransomware usually combines cryptography with malware. How does it work? The
    hacker sends the file to an unknowing victim. When the victim opens the file,
    it executes the malware’s payload and encrypts victim data such as photos, documents,
    multimedia, files, and even confidential records. The hacker offten forces the
    victim to pay in cryptocurrency, in most cases Bitcoin.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 勒索软件通常将加密技术与恶意软件结合起来。它是如何工作的？黑客将文件发送给一个不知情的受害者。当受害者打开文件时，它会执行恶意软件的负载并加密受害者的数据，如照片、文档、多媒体文件，甚至机密记录。黑客通常会迫使受害者以加密货币支付赎金，在大多数情况下是比特币。
- en: Ransomware has worm-like properties and has names such as WannaCrypt, WanaCrypt0r,
    WCRY, WanaDecrypt0r, and WCrypt. Each encrypted file is locked by a different
    key and encrypted with the RSA algorithm, which makes the file unaccessible to
    the owner who does not have the keys. The WannaCry virus can encrypt a large number
    of file types. An exhaustive list is given in Appendix A.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 勒索软件具有蠕虫-like的属性，并有如WannaCrypt、WanaCrypt0r、WCRY、WanaDecrypt0r和WCrypt等名称。每个加密文件都由不同的密钥锁定，并使用RSA算法加密，这使得没有密钥的文件所有者无法访问文件。WannaCry病毒可以加密大量的文件类型。详细列表见附录A。
- en: The ransomware replaces the desktop wallpaper with the ransom note file by modifying
    Windows registry. It holds all files hostage to demand ransom payments of $300
    and later $600 in the Bitcoin cryptocurrency as shown in Fig.  [5](#S3.F5 "Figure
    5 ‣ 3.7 Ransomware ‣ 3 Nature of Malware Code ‣ A Survey of Malware Detection
    Using Deep Learning").
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 勒索软件通过修改Windows注册表将桌面壁纸替换为赎金通知文件。它将所有文件扣押，要求支付300美元，后来增加到600美元的比特币赎金，如图[5](#S3.F5
    "图5 ‣ 3.7 勒索软件 ‣ 3 恶意软件代码的性质 ‣ 使用深度学习的恶意软件检测调查")所示。
- en: '![Refer to caption](img/8efc64d037a5cfb240d6659f4ca365e7.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![参考说明](img/8efc64d037a5cfb240d6659f4ca365e7.png)'
- en: 'Figure 5: Oops, your files have been encrypted!'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图5：哎呀，你的文件已被加密！
- en: As an example, on May 11, 2022, Costa Rica’s newly elected president had to
    declare a state of national emergency due to a ransomware attack carried out by
    the Conti ransomware gang. They requested $10 million, but the demand changed
    to $20 million after Costa Rica refused to pay⁵⁵5https://securityintelligence.com/news/costa-rica-state-emergency-ransomware/.
    As another example, in october 2022, ransomware gang accessed data on 270,000
    patients from Louisiana hospital system ⁶⁶6https://www.cnn.com/2022/12/28/politics/hackers-access-data-louisiana-hospital-system-ransomware/index.html.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，2022年5月11日，哥斯达黎加新当选的总统由于Conti勒索软件团伙的攻击被迫宣布国家紧急状态。他们要求1000万美元，但在哥斯达黎加拒绝支付后，要求金额变为2000万美元⁵⁵5https://securityintelligence.com/news/costa-rica-state-emergency-ransomware/。另一个例子是，2022年10月，勒索软件团伙访问了路易斯安那州医院系统270,000名患者的数据⁶⁶6https://www.cnn.com/2022/12/28/politics/hackers-access-data-louisiana-hospital-system-ransomware/index.html。
- en: Understanding the nature of malware code is crucial for developing effective
    defense mechanisms and mitigating its impact. It enables security professionals
    to develop robust detection methods, implement security best practices, and respond
    promptly to evolving threats.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 理解恶意软件代码的性质对开发有效的防御机制和减轻其影响至关重要。这使得安全专业人员能够开发出稳健的检测方法，实施安全最佳实践，并迅速应对不断变化的威胁。
- en: 4 Overview & Malware Detection
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4 概述与恶意软件检测
- en: 'Malware detection methods are divided into three types: static, dynamic, and
    hybrid [[1](#bib.bib1)]. Static methods inspect an executable file without running
    it, while dynamic methods must run the executable file and analyze its behaviors
    inside a controlled environment. In hybrid methods, the information is collected
    regarding malware from static as well as dynamic analysis.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意软件检测方法分为三种类型：静态、动态和混合[[1](#bib.bib1)]。静态方法在不运行可执行文件的情况下检查它，而动态方法必须运行可执行文件并在受控环境中分析其行为。在混合方法中，静态和动态分析的信息都被用来收集有关恶意软件的数据。
- en: Some security researchers use static features by decompiling the target file.
    Naik et al. [[2](#bib.bib2)] proposed a fuzzy-import hashing technique based on
    static analysis for malware detection. Mohamad et al. [[3](#bib.bib3)] proposed
    machine learning classifiers based on permission-based features for static analysis
    to detect Android malware.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 一些安全研究人员通过反编译目标文件使用静态特征。Naik等人[[2](#bib.bib2)]提出了一种基于静态分析的模糊导入哈希技术用于恶意软件检测。Mohamad等人[[3](#bib.bib3)]提出了基于权限特征的机器学习分类器，用于静态分析以检测Android恶意软件。
- en: Compared to static analysis, dynamic analysis includes system dynamic behavior
    monitoring, snapshot, debugging, etc. Kim et al. [[4](#bib.bib4)] presented a
    new encoding technique for dynamic features to identify anomalous events using
    Convolutional Neural Networks (CNNs).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 相较于静态分析，动态分析包括系统动态行为监控、快照、调试等。Kim等人[[4](#bib.bib4)]提出了一种新的动态特征编码技术，通过卷积神经网络（CNNs）来识别异常事件。
- en: Security researchers have also extracted combined features from different parts
    of malware files. Bai et al. [[5](#bib.bib5)] extracted features from static and
    dynamic analysis of Android apps and applied a deep learning technique. Chaulagain
    et al. [[6](#bib.bib6)] presented a deep learning-based hybrid analysis technique
    by collecting different artifacts during static and dynamic analysis to train
    the deep learning models.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 安全研究人员还从恶意软件文件的不同部分提取了组合特征。Bai等人[[5](#bib.bib5)]从Android应用程序的静态和动态分析中提取特征，并应用深度学习技术。Chaulagain等人[[6](#bib.bib6)]通过收集静态和动态分析中的不同文物来训练深度学习模型，提出了一种基于深度学习的混合分析技术。
- en: 5 Data for Malware Detection
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5 恶意软件检测的数据
- en: Numerous system logs of activities of machines such as phones, tablets, laptops,
    and other devices are generated by the operating system and other infrastructure
    software. The data are created and stored on the local device and sent to remote
    servers. Analyzing log data, we can not only detect breaches or suspicious activity,
    but we can track behavior through the network. Log data allow us to track security
    events, troubleshoot the infrastructure, and optimize the environment and the
    machines. Log data can take many different forms like syslog, authentication logs,
    local security event logs, network asset logs, and system logs. One of goals in
    malware detection is to be able to read, search, and analyze the data efficiently
    and effectively.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 许多系统日志记录了如手机、平板电脑、笔记本电脑及其他设备的活动。这些数据由操作系统和其他基础软件生成、存储在本地设备上，并发送到远程服务器。通过分析日志数据，我们不仅能检测到漏洞或可疑活动，还能追踪网络中的行为。日志数据使我们能够追踪安全事件、排除基础设施故障以及优化环境和机器。日志数据可以有多种形式，如syslog、认证日志、本地安全事件日志、网络资产日志和系统日志。恶意软件检测的一个目标是能够高效、有效地读取、搜索和分析数据。
- en: Table 1 contains some information that is useful from syslog and windows logs.
    Both kinds of logs have many components in different format that helps us in the
    investigation.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 表1包含了一些对syslog和Windows日志有用的信息。这两种日志都具有不同格式的许多组件，有助于调查。
- en: 'Table 1: Syslog and Windows log'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 表1：Syslog和Windows日志
- en: '| Syslog | Windows Logs |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| Syslog | Windows日志 |'
- en: '| IETF standard | Event log |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| IETF标准 | 事件日志 |'
- en: '| Timestamp | Contains source, event ID, and log level |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| 时间戳 | 包含来源、事件ID和日志级别 |'
- en: '| Standard for network equipment logging | Logs Application, security, network
    events from a machine or server |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| 网络设备日志标准 | 从机器或服务器记录应用程序、安全性、网络事件 |'
- en: '|'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '&#124; Device-ID, severity level, message number, &#124;'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 设备ID、严重性等级、消息编号、&#124;'
- en: '&#124; message text &#124;'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 消息文本 &#124;'
- en: '| Timestamp, user, computer, and process ID |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| 时间戳、用户、计算机和进程ID |'
- en: '|'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '&#124; Can be customized on network equipment &#124;'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 可在网络设备上自定义 &#124;'
- en: '&#124; for different events and severity levels &#124;'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 不同事件和严重性等级的日志 &#124;'
- en: '| Used in most enterprise environments running Windows |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| 在大多数运行Windows的企业环境中使用 |'
- en: 6 Generating Malware Images for Deep Learning
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6 生成深度学习用恶意软件图像
- en: Several tools can visualize and edit a binary file in hexadecimal or ASCII formats
    such as IDA Pro⁷⁷7https://hex-rays.com/ida-pro, x32/x64 Debugger⁸⁸8https://x64dbg.com/#start,
    HxD⁹⁹9https://mh-nexus.de/en/hxd, PE-bear^(10)^(10)10https://hshrzd.wordpress.com/pe-bear,
    Yara^(11)^(11)11https://yara.readthedocs.io/en/stable, Fiddler^(12)^(12)12https://www.telerik.com/purchase/fiddler,
    Metadata^(13)^(13)13https://www.malwarebytes.com/glossary/metadata, XOR analysis^(14)^(14)14https://eternal-todo.com/var/scripts/xorbruteforcer,
    and Embedded strings^(15)^(15)15https://virustotal.github.io/yara/.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 一些工具可以以十六进制或ASCII格式可视化和编辑二进制文件，如IDA Pro⁷⁷7https://hex-rays.com/ida-pro, x32/x64调试器⁸⁸8https://x64dbg.com/#start,
    HxD⁹⁹9https://mh-nexus.de/en/hxd, PE-bear^(10)^(10)10https://hshrzd.wordpress.com/pe-bear,
    Yara^(11)^(11)11https://yara.readthedocs.io/en/stable, Fiddler^(12)^(12)12https://www.telerik.com/purchase/fiddler,
    Metadata^(13)^(13)13https://www.malwarebytes.com/glossary/metadata, XOR分析^(14)^(14)14https://eternal-todo.com/var/scripts/xorbruteforcer,
    和嵌入字符串^(15)^(15)15https://virustotal.github.io/yara/。
- en: Malware file or code can be used to generate an image by converting the binary,
    octal, hexadecimal or decimal into a two dimensional matrix of pixels. The image
    can be grayscale or RGB. In greyscale, pixels are black and white values in the
    range [0-255] where 0 represents black, and 255 represents white.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意软件文件或代码可以通过将二进制、八进制、十六进制或十进制转换为二维像素矩阵来生成图像。图像可以是灰度图像或 RGB 图像。在灰度图像中，像素是黑白值，范围为
    [0-255]，其中 0 代表黑色，255 代表白色。
- en: 'Gray image feature: The machine stores images in a matrix of numbers. These
    numbers, or the pixel values, denote the intensity or brightness of the pixel.
    Smaller numbers (close to zero) represent black, and larger numbers (closer to
    255) denote white (see Fig.  [6](#S6.F6 "Figure 6 ‣ 6 Generating Malware Images
    for Deep Learning ‣ A Survey of Malware Detection Using Deep Learning")).'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 灰度图像特征：机器将图像存储在一个数字矩阵中。这些数字或像素值表示像素的强度或亮度。较小的数字（接近零）表示黑色，较大的数字（接近 255）表示白色（见图
    [6](#S6.F6 "图 6 ‣ 6 生成恶意软件图像用于深度学习 ‣ 使用深度学习检测恶意软件的调查")）。
- en: '![Refer to caption](img/e98d6d535955054239b9656394cc2488.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/e98d6d535955054239b9656394cc2488.png)'
- en: 'Figure 6: Malware feature representation in grayscale image'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6：恶意软件在灰度图像中的特征表示
- en: 'RGB images: There are three matrices or channels (Red, Green, Blue), where
    each matrix has values between $\displaystyle 0-255$. These three colors are combined
    together in various ways to represent one of 16,777,216 possible colors (see Fig.
     [7](#S6.F7 "Figure 7 ‣ 6 Generating Malware Images for Deep Learning ‣ A Survey
    of Malware Detection Using Deep Learning")).'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: RGB 图像：有三个矩阵或通道（红色、绿色、蓝色），每个矩阵的值在 $\displaystyle 0-255$ 之间。这三种颜色以各种方式组合在一起，表示
    16,777,216 种可能的颜色之一（见图 [7](#S6.F7 "图 7 ‣ 6 生成恶意软件图像用于深度学习 ‣ 使用深度学习检测恶意软件的调查")）。
- en: '![Refer to caption](img/7806073a371415e64d727a2c639052e0.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/7806073a371415e64d727a2c639052e0.png)'
- en: 'Figure 7: Malware feature representation in RGB image'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7：恶意软件在 RGB 图像中的特征表示
- en: 'Malware can be converted to images in different ways. Yuan et al. [[7](#bib.bib7)]
    converted malware binaries into Markov images by computing transfer probability
    of bytes where each pixel is generated by equation [1](#S6.E1 "In 6 Generating
    Malware Images for Deep Learning ‣ A Survey of Malware Detection Using Deep Learning"):'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意软件可以通过不同方式转换为图像。Yuan 等人 [[7](#bib.bib7)] 通过计算字节的转移概率，将恶意软件二进制文件转换为马尔可夫图像，其中每个像素由方程
    [1](#S6.E1 "在 6 生成恶意软件图像用于深度学习 ‣ 使用深度学习检测恶意软件的调查") 生成：
- en: '|  | $p_{m,n}=P(n&#124;m)=\frac{f(m,n)}{\displaystyle\sum_{n=0}^{255}f(m,n)}\quad
    m,n\in\{0,1,...,255\}.\\ $ |  | (1) |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '|  | $p_{m,n}=P(n\vert m)=\frac{f(m,n)}{\displaystyle\sum_{n=0}^{255}f(m,n)}\quad
    m,n\in\{0,1,...,255\}.\\ $ |  | (1) |'
- en: Mohammed et al. [[8](#bib.bib8)] used a vector of 16-bit signed hexadecimal
    numbers to represent a $\displaystyle 256\times 256$ image. Then, they computed
    bi-gram frequency counts which they used as pixel intensity values. Full-frame
    Discrete Cosine Transform (DCT) [[9](#bib.bib9)] was computed to de-sparsify,
    and the bigram-DCT was used to represent the output image. Euh et al. [[10](#bib.bib10)]
    proposed Window Entropy Map (WEM) to visualize malware as an image. They calculated
    the entropy for each byte to measure the degree of uncertainty. Ni et al. [[11](#bib.bib11)]
    converted malware code into gray images using SimHash [[12](#bib.bib12)] and then
    encoded them. They mapped SimHash values to pixels and then converted them to
    grayscale images.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: Mohammed 等人 [[8](#bib.bib8)] 使用 16 位有符号十六进制数字的向量来表示一个 $\displaystyle 256\times
    256$ 图像。然后，他们计算了二元频率计数，并将其用作像素强度值。计算了全帧离散余弦变换（DCT） [[9](#bib.bib9)] 以去稀疏化，bigram-DCT
    被用来表示输出图像。Euh 等人 [[10](#bib.bib10)] 提出了窗口熵图（WEM）以将恶意软件可视化为图像。他们计算了每个字节的熵，以衡量不确定程度。Ni
    等人 [[11](#bib.bib11)] 使用 SimHash [[12](#bib.bib12)] 将恶意软件代码转换为灰度图像，然后对其进行编码。他们将
    SimHash 值映射到像素，然后转换为灰度图像。
- en: 7 Image Classification for Malware Detection
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 7 恶意软件检测的图像分类
- en: Deep learning can solve diverse "vision" problems, including malware image classification
    tasks. Deep learning can extract features automatically obviating manual feature
    extraction. The content of the malware executable file is first converted into
    a digital image. Nataraj et al. [[13](#bib.bib13)] visualized the byte codes of
    samples from 25 malware families as grayscale images. Several visualization techniques
    have been used for malware classification. The basic idea used in these methods
    is to explore the distinguishing patterns in malware images. In addition, the
    visualization techniques help find the correlations among different malware families.
    Some existing approaches generate grayscale images and others generate RGB images.
    Most existing approaches use global features to generate malware image.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 深度学习可以解决多种“视觉”问题，包括恶意软件图像分类任务。深度学习可以自动提取特征，避免手动特征提取。恶意软件可执行文件的内容首先被转换为数字图像。Nataraj
    et al. [[13](#bib.bib13)] 将来自25个恶意软件家族的样本字节码可视化为灰度图像。已经使用了几种可视化技术进行恶意软件分类。这些方法的基本思想是探索恶意软件图像中的区分模式。此外，可视化技术有助于发现不同恶意软件家族之间的关联。一些现有方法生成灰度图像，而其他方法生成RGB图像。大多数现有方法使用全局特征生成恶意软件图像。
- en: Yuan et al. [[7](#bib.bib7)] proposed a method based on Markov images according
    to the byte transmission probability matrix. They used a CNN to classify Markov
    malware images without scaling. Narayanan and Davuluru [[14](#bib.bib14)] proposed
    an ensemble approach using RNN and CNN architectures for malware image classification.
    Images were generated from assembly compiled files and classified using CNNs.
    Zhu et al. [[15](#bib.bib15)] proposed a Task-Aware Meta Learning-based Siamese
    Neural Network to classify obfuscated malware images. Their model showed high
    effectiveness on unique malware signature detection to classify obfuscated malware.
    Chauhan et al. [[16](#bib.bib16)] visualized malware files in different color
    modes, RGB, HSV, greyscale, and BGR. They used a support vector machine (SVM)
    to classify these malware images, with accuracy of 96% in all modes. Darem et al.
    [[17](#bib.bib17)] designed a semi-supervised method based on malware image and
    feature engineering for obfuscated malware detection. The model achieved 99.12%
    accuracy on obfuscated malware detection. Asam et al. [[18](#bib.bib18)] proposed
    two malware image classification approaches called Deep Feature Space-based Malware
    classification (DFS-MC) and Deep Boosted Feature Space-based Malware classification
    (DBFS-MC). The approach achieved a good accuracy of 98.61% on the MalImg malware
    dataset.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: Yuan et al. [[7](#bib.bib7)] 提出了一个基于Markov图像的方法，依据字节传输概率矩阵。他们使用CNN对Markov恶意软件图像进行分类，无需缩放。Narayanan和Davuluru
    [[14](#bib.bib14)] 提出了一个结合RNN和CNN架构的集成方法，用于恶意软件图像分类。图像是从汇编编译文件中生成的，并使用CNN进行分类。Zhu
    et al. [[15](#bib.bib15)] 提出了一个基于任务感知元学习的Siamese神经网络，以分类混淆恶意软件图像。他们的模型在唯一恶意软件签名检测上显示出高效性。Chauhan
    et al. [[16](#bib.bib16)] 以不同颜色模式（RGB、HSV、灰度和BGR）可视化恶意软件文件。他们使用支持向量机（SVM）对这些恶意软件图像进行分类，各模式的准确率均为96%。Darem
    et al. [[17](#bib.bib17)] 设计了一种基于恶意软件图像和特征工程的半监督方法，用于混淆恶意软件检测。该模型在混淆恶意软件检测上达到了99.12%的准确率。Asam
    et al. [[18](#bib.bib18)] 提出了两种恶意软件图像分类方法，称为深度特征空间恶意软件分类（DFS-MC）和深度增强特征空间恶意软件分类（DBFS-MC）。该方法在MalImg恶意软件数据集上取得了98.61%的良好准确率。
- en: Xiao et al. [[19](#bib.bib19)] presented a visualization method called Colored
    Label boxes (CoLab) to specify each section in a PE file and convert it to malware
    image. The authors built a composed CoLab image,cand used VGG16, and Support vector
    machine for classification. The model was applied on two datasets, VX-Heaven^(16)^(16)16https://archive.org/download/vxheavens-2010-05-18
    and BIG-2015, with 96.59% and 98.94% average accuracies, respectively. A comparison
    of reviewed malware images classification is discussed in Table 2.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Xiao et al. [[19](#bib.bib19)] 提出了一个称为Colored Label boxes (CoLab)的可视化方法，以指定PE文件中的每个部分并将其转换为恶意软件图像。作者构建了一个组合的CoLab图像，并使用VGG16和支持向量机进行分类。该模型在两个数据集VX-Heaven^(16)^(16)16https://archive.org/download/vxheavens-2010-05-18
    和BIG-2015上应用，分别取得了96.59%和98.94%的平均准确率。表2讨论了恶意软件图像分类的比较结果。
- en: 'Table 2: Comparative performance summary of Transfer Learning models for malware
    image classification.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 表2：转移学习模型在恶意软件图像分类中的比较性能总结。
- en: '| Reference | Features | Model | Files | Accuracy | Dataset |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| 参考文献 | 特征 | 模型 | 文件 | 准确率 | 数据集 |'
- en: '| Çayır et al. [[20](#bib.bib20)] | gray-scale images | CapsNet | PE | 98.63%
    | Malimg |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| Çayır et al. [[20](#bib.bib20)] | 灰度图像 | CapsNet | PE | 98.63% | Malimg |'
- en: '| Çayır et al. [[20](#bib.bib20)] | gray-scale images | RCNF | PE | 98.72%
    | Malimg |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| Çayır 等 [[20](#bib.bib20)] | 灰度图像 | RCNF | PE | 98.72% | Malimg |'
- en: '| Go et al. [[21](#bib.bib21)] | gray-scale images | ResNeXt | PE | 98.32%
    | Malimg |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| Go 等 [[21](#bib.bib21)] | 灰度图像 | ResNeXt | PE | 98.32% | Malimg |'
- en: '| Bensaoud et al. [[22](#bib.bib22)] | gray-scale images | Inception V3 | PE
    | 99.24% | Malimg |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| Bensaoud 等 [[22](#bib.bib22)] | 灰度图像 | Inception V3 | PE | 99.24% | Malimg
    |'
- en: '| El-Shafai et al. [[23](#bib.bib23)] | gray-scale images | VGG16 | PE | 99.97%
    | Malimg |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| El-Shafai 等 [[23](#bib.bib23)] | 灰度图像 | VGG16 | PE | 99.97% | Malimg |'
- en: '| Hemalatha et al. [[24](#bib.bib24)] | gray-scale images | DenseNet | PE |
    98.23% | Malimg |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| Hemalatha 等 [[24](#bib.bib24)] | 灰度图像 | DenseNet | PE | 98.23% | Malimg |'
- en: '| Hemalatha et al. [[24](#bib.bib24)] | gray-scale images | DenseNet | PE |
    98.46% | BIG 2015 |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| Hemalatha 等 [[24](#bib.bib24)] | 灰度图像 | DenseNet | PE | 98.46% | BIG 2015
    |'
- en: '| Lo et al. [[25](#bib.bib25)] | gray-scale images | Xception | PE | 99.03%
    | Malimg |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| Lo 等 [[25](#bib.bib25)] | 灰度图像 | Xception | PE | 99.03% | Malimg |'
- en: '| Lo et al. [[25](#bib.bib25)] | gray-scale images | Xception | PE | 99.17%
    | BIG 2015 |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| Lo 等 [[25](#bib.bib25)] | 灰度图像 | Xception | PE | 99.17% | BIG 2015 |'
- en: 8 Feature Reduction for Efficient Malware Detection
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8 高效恶意软件检测的特征缩减
- en: Feature Reduction reduces the number of variables or features in the representation
    of a data example. Approaches to feature reduction can be divided into two subcategories
    called a) Feature Selection which includes methods such as Wrappers, Filters,
    and Embedded, and b) Feature Extraction, which includes methods such as Principal
    Components Analysis [[26](#bib.bib26)]. How does Feature Reduction improve performance?
    It does by reducing the number of features that are considered for analysis.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 特征缩减（Feature Reduction）减少了数据示例表示中的变量或特征数量。特征缩减的方法可以分为两个子类别：a) 特征选择（Feature Selection），包括诸如包装器（Wrappers）、过滤器（Filters）和嵌入式方法（Embedded）等方法，以及
    b) 特征提取（Feature Extraction），包括主成分分析（Principal Components Analysis）等方法[[26](#bib.bib26)]。特征缩减如何提高性能？它通过减少考虑用于分析的特征数量来实现。
- en: In feature extraction, we start with $\displaystyle n$ features <math alttext="\displaystyle
    x_{1},x_{2},x_{3}\\
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在特征提取中，我们从 $\displaystyle n$ 个特征开始 <math alttext="\displaystyle x_{1},x_{2},x_{3}\\
- en: ',....,x_{n}" display="inline"><semantics ><mrow ><msub ><mi >x</mi><mn >1</mn></msub><mo
    >,</mo><msub ><mi >x</mi><mn >2</mn></msub><mo >,</mo><msub ><mi >x</mi><mn >3</mn></msub><mo
    >,</mo><mi mathvariant="normal" >…</mi><mo lspace="0em" rspace="0.167em" >.</mo><mo
    >,</mo><msub ><mi >x</mi><mi >n</mi></msub></mrow><annotation encoding="application/x-tex"
    >\displaystyle x_{1},x_{2},x_{3}\\ ,....,x_{n}</annotation></semantics></math>,
    which we map to a lower dimensional space to get the new features $\displaystyle
    z_{1},z_{2},z_{3},....,z_{m}$ where $\displaystyle m<n$. Each of the new features
    is usually linear a combination of the original feature set $\displaystyle x_{1},x_{2},x_{3},....,x_{n}$.
    Thus, each new feature is obtained as a function F(X) of the original feature
    set X. This makes a projection of a higher dimensional feature space to a lower
    dimensional feature space, so that the smaller dimensional feature set may lead
    to better classification or faster classification (see equation [2](#S8.E2 "In
    8 Feature Reduction for Efficient Malware Detection ‣ A Survey of Malware Detection
    Using Deep Learning")).'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: ',....,x_{n}" display="inline"><semantics ><mrow ><msub ><mi >x</mi><mn >1</mn></msub><mo
    >,</mo><msub ><mi >x</mi><mn >2</mn></msub><mo >,</mo><msub ><mi >x</mi><mn >3</mn></msub><mo
    >,</mo><mi mathvariant="normal" >…</mi><mo lspace="0em" rspace="0.167em" >.</mo><mo
    >,</mo><msub ><mi >x</mi><mi >n</mi></msub></mrow><annotation encoding="application/x-tex"
    >\displaystyle x_{1},x_{2},x_{3}\\ ,....,x_{n}</annotation></semantics></math>，我们将其映射到较低维空间以获取新的特征
    $\displaystyle z_{1},z_{2},z_{3},....,z_{m}$，其中 $\displaystyle m<n$。每个新特征通常是原始特征集
    $\displaystyle x_{1},x_{2},x_{3},....,x_{n}$ 的线性组合。因此，每个新特征作为原始特征集 X 的函数 F(X)
    获得。这将高维特征空间投影到低维特征空间，从而较小维度的特征集可能导致更好的分类或更快的分类（参见方程 [2](#S8.E2 "在8中高效恶意软件检测的特征缩减
    ‣ 使用深度学习的恶意软件检测综述")）。'
- en: '|  | $\begin{bmatrix}z_{1}\ldots z_{m}\end{bmatrix}^{\intercal}\ =F\left(\begin{bmatrix}x_{1}\ldots
    x_{n}\end{bmatrix}^{\intercal}\right)$ |  | (2) |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '|  | $\begin{bmatrix}z_{1}\ldots z_{m}\end{bmatrix}^{\intercal}\ =F\left(\begin{bmatrix}x_{1}\ldots
    x_{n}\end{bmatrix}^{\intercal}\right)$ |  | (2) |'
- en: 'In feature selection, we choose a subset of the features, in contrast to feature
    extraction where we map the original features to a lower dimensional space. The
    smaller dimensional feature set can help produce better as well as faster classification.
    To do that, we need to find a projection matrix $\displaystyle W\ni\bar{Z}=W^{T}\bar{X}$.
    We expect from such a projection that the new features are uncorrelated and cannot
    be reduced further and are non redundant. Next, we need features to have large
    variance: Why? Because if a feature takes similar values for all the instances,
    that feature cannot be used as a discriminator.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在特征选择中，我们选择特征的一个子集，这与特征提取不同，后者是将原始特征映射到一个较低维度的空间。较小维度的特征集可以帮助产生更好且更快的分类结果。为此，我们需要找到一个投影矩阵
    $\displaystyle W\ni\bar{Z}=W^{T}\bar{X}$。我们期望这样的投影使得新特征不相关，无法进一步减少，并且没有冗余。接下来，我们需要特征具有较大的方差：为什么？因为如果一个特征对所有实例的取值都很相似，那么该特征就不能作为区分器。
- en: Feature extraction methods such as a Principal Component Analysis (PCA) [[26](#bib.bib26)],
    GIST [[27](#bib.bib27)], Hu Moments [[28](#bib.bib28)], Color Histogram [[29](#bib.bib29)],
    Haralick texture [[30](#bib.bib30)], Discrete Wavelet Transform (DWT) [[31](#bib.bib31)],
    Independent Component Analysis (ICA) [[32](#bib.bib32)], Linear discriminant analysis
    (LDA) [[33](#bib.bib33)], Oriented Fast and Rotated BRIEF (ORB) [[34](#bib.bib34)],
    Speeded Up Robust Feature (SURF) [[35](#bib.bib35)], Scale Invariant Feature Transform
    (SIFT) [[36](#bib.bib36)], Dense Scale Invariant Feature Transform (D-SIFT) [[36](#bib.bib36)],
    Local Binary Patterns (LBPs) [[37](#bib.bib37)], KAZE [[38](#bib.bib38)] have
    been combined with machine learning including deep learning. These methods successfully
    filter the characteristics of malware files.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 特征提取方法，如主成分分析（PCA）[[26](#bib.bib26)], GIST [[27](#bib.bib27)], Hu矩 [[28](#bib.bib28)],
    颜色直方图 [[29](#bib.bib29)], Haralick纹理 [[30](#bib.bib30)], 离散小波变换（DWT）[[31](#bib.bib31)],
    独立成分分析（ICA）[[32](#bib.bib32)], 线性判别分析（LDA）[[33](#bib.bib33)], 定向快速和旋转BRIEF（ORB）[[34](#bib.bib34)],
    加速稳健特征（SURF）[[35](#bib.bib35)], 尺度不变特征变换（SIFT）[[36](#bib.bib36)], 密集尺度不变特征变换（D-SIFT）[[36](#bib.bib36)],
    局部二值模式（LBPs）[[37](#bib.bib37)], KAZE [[38](#bib.bib38)]，已经与包括深度学习在内的机器学习相结合。这些方法成功地过滤了恶意软件文件的特征。
- en: Azad et al. [[39](#bib.bib39)] proposed a method named DEEPSEL (Deep Feature
    Selection) to identify malicious codes of 39 unique malware families. Their model
    achieved an accuracy of 83.6% and an F-measure of 82.5%. Tobiyama et al. [[40](#bib.bib40)]
    proposed feature extraction based on system calls. Recurrent Neural Network was
    used to extract features and Convolutional Neural Network to classify these features.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: Azad等人[[39](#bib.bib39)]提出了一种名为DEEPSEL（深度特征选择）的方法，用于识别39个独特恶意软件家族的恶意代码。他们的模型实现了83.6%的准确率和82.5%的F-measure。Tobiyama等人[[40](#bib.bib40)]提出了基于系统调用的特征提取方法。使用递归神经网络来提取特征，卷积神经网络来分类这些特征。
- en: 9 Deep Transfer Leaning models for Malware detection
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9 种深度迁移学习模型用于恶意软件检测
- en: Transfer learning takes place if we have a source model which has some pre-trained
    knowledge and this knowledge is needed as the foundation to build a new model
    [[41](#bib.bib41)]. For example, using a very large pre-trained convolutional
    neural network usually involves saving a network that was previously trained on
    some large dataset, typically on a large-scale image classification task, using
    a dataset like ImageNet [[42](#bib.bib42)]. After training a network on the ImageNet
    dataset, we can re-purpose this trained network. Research papers have discussed
    applying these pre-trained networks to malware image datasets [[43](#bib.bib43),
    [44](#bib.bib44), [45](#bib.bib45), [46](#bib.bib46)] that are generated form
    PE and APK malware files, which are quite different from each other.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 迁移学习发生在我们有一个源模型，该模型具有一些预训练的知识，这些知识作为构建新模型的基础[[41](#bib.bib41)]。例如，使用一个非常大的预训练卷积神经网络通常涉及保存一个之前在一些大型数据集上训练过的网络，通常是大型图像分类任务，使用像ImageNet这样的数据集[[42](#bib.bib42)]。在ImageNet数据集上训练一个网络后，我们可以重新利用这个训练好的网络。研究论文讨论了将这些预训练网络应用于由PE和APK恶意软件文件生成的恶意软件图像数据集[[43](#bib.bib43),
    [44](#bib.bib44), [45](#bib.bib45), [46](#bib.bib46)]，这些文件彼此差异很大。
- en: Malware image datasets are very different from ImageNet, which is normally used
    to pre-train the model. The ImageNet dataset and a malware image dataset represent
    visually completely different images. However, pre-trained still seems to help.
    Training a machine learning algorithm on large datasets can be done in two ways,
    as discussed below.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意软件图像数据集与通常用于预训练模型的 ImageNet 大相径庭。ImageNet 数据集和恶意软件图像数据集代表了视觉上完全不同的图像。然而，预训练似乎仍然有帮助。对大数据集训练机器学习算法有两种方法，如下所述。
- en: 9.1 Using feature extraction
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.1 使用特征提取
- en: Feature extraction discussed earlier is a practical and common, and low resource-intensive
    way of using pre-trained networks. It takes the convolutional base of a previously
    trained network and runs the malware data through it, and then trains a new classifier
    on top of the output. As shown in Fig.  [8](#S9.F8 "Figure 8 ‣ 9.1 Using feature
    extraction ‣ 9 Deep Transfer Leaning models for Malware detection ‣ A Survey of
    Malware Detection Using Deep Learning"), we can choose a network such as VGG16
    [[47](#bib.bib47)] that has been trained on ImageNet, as an example. The input
    fed at the bottom, goes up to the trained convolutional base, representing the
    CNN region of the VGG16\. The trained classifier resides in the dense region and
    the prediction is made by this dense region at the end. Usually, we have $\displaystyle
    1000$ neurons at the end to predict the actual ImageNet classes. We take this
    ImageNet trained model as base, and remove the classifier layer, keeping the convolutional
    layers of the pre-trained model, along with their weights. In the next step, we
    attach a new classifier that has new dense layers for malware classification on
    top. The weights of the base are frozen, which means that the malware input passes
    through convolutional layers which have their prior weights, during training.
    However, all dense layers are randomly initialized, and the interconnection weights
    for these layers are learned during the new training process for detecting malware.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 之前讨论的特征提取是一种实用且常见的、低资源消耗的方法来使用预训练网络。它利用之前训练好的网络的卷积基础，将恶意软件数据通过它，然后在输出的基础上训练一个新的分类器。如图
    [8](#S9.F8 "图 8 ‣ 9.1 使用特征提取 ‣ 9 深度迁移学习模型用于恶意软件检测 ‣ 基于深度学习的恶意软件检测综述")所示，我们可以选择一个如
    VGG16 [[47](#bib.bib47)] 这样已经在 ImageNet 上训练过的网络作为示例。输入从底部传入，经过训练好的卷积基础，这代表了 VGG16
    的 CNN 区域。训练好的分类器位于密集区域，最终由这个密集区域进行预测。通常，我们在末尾有 $\displaystyle 1000$ 个神经元来预测实际的
    ImageNet 类别。我们将这个在 ImageNet 上训练的模型作为基础，移除分类器层，保留预训练模型的卷积层及其权重。在下一步中，我们在顶部附加一个新的分类器，该分类器具有用于恶意软件分类的新密集层。基础部分的权重被冻结，这意味着恶意软件输入在训练过程中通过具有其之前权重的卷积层。然而，所有密集层都是随机初始化的，这些层的互联权重在新的训练过程中用于检测恶意软件时被学习。
- en: Why remove the original dense layers? What has been observed is that the representations
    learned by the convolutional base are generic and therefore reusable for a variety
    of tasks.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么要移除原始的密集层？观察到卷积基础学习到的表示是通用的，因此可以用于各种任务。
- en: '![Refer to caption](img/7d2b67e3cfb70113b8d2f855c845eb36.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![参考说明](img/7d2b67e3cfb70113b8d2f855c845eb36.png)'
- en: 'Figure 8: Feature Extraction for Transfer Learning'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '图 8: 迁移学习的特征提取'
- en: 9.2 Using fine tuning
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.2 使用微调
- en: Fine-tuning involves changing some of the convolutional layers by learning new
    weights. In Fig.  [9](#S9.F9 "Figure 9 ‣ 9.2 Using fine tuning ‣ 9 Deep Transfer
    Leaning models for Malware detection ‣ A Survey of Malware Detection Using Deep
    Learning"), we have a network divided into three regions. The yellow region is
    a pre-trained model. The green region represents our dense layers for which we
    need to learn the weights. During training using a library such as Keras [[48](#bib.bib48)]
    and Tensorflow [[49](#bib.bib49)], we can select certain layers and freeze the
    weights of those layers.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 微调涉及通过学习新权重来改变一些卷积层。如图 [9](#S9.F9 "图 9 ‣ 9.2 使用微调 ‣ 9 深度迁移学习模型用于恶意软件检测 ‣ 基于深度学习的恶意软件检测综述")所示，我们有一个分为三个区域的网络。黄色区域是预训练模型。绿色区域代表我们需要学习权重的密集层。在使用诸如
    Keras [[48](#bib.bib48)] 和 Tensorflow [[49](#bib.bib49)] 的库进行训练时，我们可以选择某些层并冻结这些层的权重。
- en: For example, we can select convolutional block one and then freeze all the weights
    of the convolutional layers, in this block only. This means that during training,
    everything else will change, but the weights of the convolutional layers in this
    block will not change. Similarly, we can keep frozen the convolutional layers
    of the next block as well as blocks three and four if we so wish. Then, we can
    fine-tune the convolutional layers that are closer to the dense layer. As a result,
    the initial layers of representation are kept constant, but new representations
    are learned by later layers (yellow region) as their weights change, evolve and
    get updated.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以选择卷积块一，然后仅冻结该块中的所有卷积层的权重。这意味着在训练过程中，其他所有部分都会改变，但该块中卷积层的权重不会改变。类似地，我们也可以选择冻结下一个块的卷积层，以及第三和第四块的卷积层。然后，我们可以微调接近密集层的卷积层。结果是，表示的初始层保持不变，但后续层（黄色区域）通过权重的变化、演变和更新来学习新的表示。
- en: Thus, fine-tuning means unfreezing a few of the top layers of a frozen model
    base used for feature extraction. What we simply do is jointly train the newly
    added top part of the model (green region) consisting of dense layers, and the
    top convolutional layers (yellow region), for which we have unfrozen the weights.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，微调意味着解冻用于特征提取的冻结模型基座的几个顶层。我们所做的简单操作是共同训练模型的新顶层部分（绿色区域），包括密集层，以及我们已解冻权重的顶层卷积层（黄色区域）。
- en: Why fine-tune in this manner? Because, we slightly adjust the more abstract
    representations of the model being reused to make them more relevant for the problem
    at hand. Sudhakar and Kumar [[50](#bib.bib50)] redesigned ResNet50 [[51](#bib.bib51)]
    by changing the last layer with a fully connected dense layer to detect unknown
    malware samples without feature engineering. Go et al. [[52](#bib.bib52)] proposed
    a visualization approach to classify the malware families by using a ResNeXt50
    pre-trained model. The model achieved 98.86% accuracy on the Malimg dataset [[13](#bib.bib13)].
    Çayır et al. [[20](#bib.bib20)] built an ensemble pre-trained capsule network
    (CapsNet) [[53](#bib.bib53)] based on the bootstrap aggregating approach. The
    model was trained and tested on two public datasets, Malimg, and BIG2015\. Their
    model achieved F-Score 96.6% on the Malimg dataset [[13](#bib.bib13)] and 98.20%
    on the BIG2015 dataset^(17)^(17)17https://www.kaggle.com/c/malware-classification.
    Bensaoud et al. [[22](#bib.bib22)] used six convolutional neural network models
    for malware classification. Comparison among these models shows that the transfer
    learning model called Inception-V3 [[54](#bib.bib54)] achieved the current state-of-the-art
    in malware classification. Khan et al. [[55](#bib.bib55)] evaluated ResNet and
    GoogleNet [[56](#bib.bib56)] models for malware detection by converting an APK
    bytecode into grayscale image. Table 3 summarizes the most transfer learning models
    for malware classification. We conclude that CNN transfer learning models can
    be fine-tuned to specific image sizes that are robust enough and accurate to use
    malware image classification.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么以这种方式进行微调？因为我们稍微调整了模型中更抽象的表示，以使其与当前问题更加相关。Sudhakar 和 Kumar [[50](#bib.bib50)]
    通过用一个全连接的密集层替换最后一层，重新设计了 ResNet50 [[51](#bib.bib51)]，以检测未知的恶意软件样本，而无需特征工程。Go 等人
    [[52](#bib.bib52)] 提出了一种可视化方法，通过使用预训练的 ResNeXt50 模型来对恶意软件家族进行分类。该模型在 Malimg 数据集
    [[13](#bib.bib13)] 上达到了 98.86% 的准确率。Çayır 等人 [[20](#bib.bib20)] 基于自举聚合方法构建了一个集成预训练的胶囊网络
    (CapsNet) [[53](#bib.bib53)]。该模型在两个公共数据集 Malimg 和 BIG2015 上进行了训练和测试。他们的模型在 Malimg
    数据集 [[13](#bib.bib13)] 上达到了 F-Score 96.6% 和在 BIG2015 数据集^(17)^(17)17https://www.kaggle.com/c/malware-classification
    上达到了 98.20%。Bensaoud 等人 [[22](#bib.bib22)] 使用了六种卷积神经网络模型进行恶意软件分类。这些模型的比较显示，名为
    Inception-V3 [[54](#bib.bib54)] 的迁移学习模型在恶意软件分类中达到了当前的最先进水平。Khan 等人 [[55](#bib.bib55)]
    通过将 APK 字节码转换为灰度图像来评估 ResNet 和 GoogleNet [[56](#bib.bib56)] 模型用于恶意软件检测。表 3 总结了最常见的恶意软件分类迁移学习模型。我们得出结论，CNN
    迁移学习模型可以针对特定的图像尺寸进行微调，这些尺寸足够稳健且准确地用于恶意软件图像分类。
- en: 'Table 3: Fine-tuned pre-trained models applied on different malware image datasets.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 表 3：应用于不同恶意软件图像数据集的微调预训练模型。
- en: '| Setting | Average Accuracy | Our Dataset |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| 设置 | 平均准确率 | 我们的数据集 |'
- en: '| Pre-trained Model | Samples | Resize image | Epoch | Malimg | Microsoft Challenge
    | Drebin | Accuracy |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| 预训练模型 | 样本 | 图像大小调整 | 训练轮次 | Malimg | Microsoft Challenge | Drebin | 准确率
    |'
- en: '| EffNet B0 | 30,000 | 224 | 200 | 92.72% | 90.45% | 87.23% | 94.59% |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| EffNet B0 | 30,000 | 224 | 200 | 92.72% | 90.45% | 87.23% | 94.59% |'
- en: '| EffNet B1 | 30,000 | 240 | 200 | 95.64% | 93.65% | 88.91% | 95.89% |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| EffNet B1 | 30,000 | 240 | 200 | 95.64% | 93.65% | 88.91% | 95.89% |'
- en: '| EffNet B2 | 20,000 | 260 | 200 | 93.84% | 91.78% | 86.82% | 94.12% |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| EffNet B2 | 20,000 | 260 | 200 | 93.84% | 91.78% | 86.82% | 94.12% |'
- en: '| EffNet B3 | 15,000 | 300 | 400 | 90.32% | 94.19% | 89.35% | 95.73% |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| EffNet B3 | 15,000 | 300 | 400 | 90.32% | 94.19% | 89.35% | 95.73% |'
- en: '| EffNet B4 | 20,000 | 380 | 400 | 95.63% | 96.68% | 90.59% | 97.98% |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| EffNet B4 | 20,000 | 380 | 400 | 95.63% | 96.68% | 90.59% | 97.98% |'
- en: '| EffNet B5 | 25,000 | 456 | 400 | 80.19% | 87.54% | 84.23% | 94.68% |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| EffNet B5 | 25,000 | 456 | 400 | 80.19% | 87.54% | 84.23% | 94.68% |'
- en: '| EffNet B6 | 40,000 | 528 | 400 | 85.67% | 83.82% | 85.43% | 93.54% |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| EffNet B6 | 40,000 | 528 | 400 | 85.67% | 83.82% | 85.43% | 93.54% |'
- en: '| EffNet B7 | 30,000 | 600 | 1000 | 82.76% | 80.76% | 90.57% | 88.45% |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| EffNet B7 | 30,000 | 600 | 1000 | 82.76% | 80.76% | 90.57% | 88.45% |'
- en: '| Inception V4 | 20,000 | 229 | 300 | 95.98% | 93.21% | 88.93% | 96.39% |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| Inception V4 | 20,000 | 229 | 300 | 95.98% | 93.21% | 88.93% | 96.39% |'
- en: '| Xception | 20,000 | 229 | 200 | 89.50% | 90.84% | 84.39% | 93.53% |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| Xception | 20,000 | 229 | 200 | 89.50% | 90.84% | 84.39% | 93.53% |'
- en: '| CapsNet | 3,000 | 256 | 100 | 88.64% | 72.69% | 78.68% | 92.65% |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| CapsNet | 3,000 | 256 | 100 | 88.64% | 72.69% | 78.68% | 92.65% |'
- en: '![Refer to caption](img/19893baff79b11b63cadee7be6cc53cf.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![参见标题](img/19893baff79b11b63cadee7be6cc53cf.png)'
- en: 'Figure 9: Fine Tuning of Transfer Learning'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9：迁移学习的微调
- en: Fig.  [10](#S9.F10 "Figure 10 ‣ 9.2 Using fine tuning ‣ 9 Deep Transfer Leaning
    models for Malware detection ‣ A Survey of Malware Detection Using Deep Learning")
    shows how to train the model on an image dataset. We randomly initialize the model,
    and then train the model on dataset X, which is a large-scale image dataset. This
    is the pre-training step. Next, we train the model on dataset Y; this dataset
    is typically smaller than dataset X. This is the fine-tuning step.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图 [10](#S9.F10 "图 10 ‣ 9.2 使用微调 ‣ 9 深度迁移学习模型用于恶意软件检测 ‣ 使用深度学习的恶意软件检测调查") 显示了如何在图像数据集上训练模型。我们随机初始化模型，然后在数据集
    X 上训练模型，这个数据集是一个大规模图像数据集。这是预训练步骤。接下来，我们在数据集 Y 上训练模型；该数据集通常比数据集 X 小。这是微调步骤。
- en: '![Refer to caption](img/f36b592e7c323d43cea4a42f12a5c7ca.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![参见标题](img/f36b592e7c323d43cea4a42f12a5c7ca.png)'
- en: 'Figure 10: Transfer Learning steps'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10：迁移学习步骤
- en: State-of-the-art transfer learning models we have trained and evaluated for
    malware classification are EffNet B0, B1, B2, B3, B4, B5, B6, and B7 [[57](#bib.bib57)];
    Inception-V4 [[58](#bib.bib58)], Xception [[59](#bib.bib59)], and CapsNet [[60](#bib.bib60)]
    as shown in Table 3\. The datasets used are our RGB malware image dataset and
    two other datasets, namely Malimg Dataset [[13](#bib.bib13)] and Microsoft Malware
    Dataset [[61](#bib.bib61)]. The accuracy and loss curve plots for EffNet B1, B2,
    B3, B4, B5, B6, and B7 are shown in Appendix B and EffNet B0 shows in Fig.  [11](#S9.F11
    "Figure 11 ‣ 9.2 Using fine tuning ‣ 9 Deep Transfer Leaning models for Malware
    detection ‣ A Survey of Malware Detection Using Deep Learning").
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 我们训练和评估的最先进的迁移学习模型用于恶意软件分类的是 EffNet B0、B1、B2、B3、B4、B5、B6 和 B7 [[57](#bib.bib57)];
    Inception-V4 [[58](#bib.bib58)]、Xception [[59](#bib.bib59)] 和 CapsNet [[60](#bib.bib60)]，如表
    3 所示。使用的数据集是我们的 RGB 恶意软件图像数据集和另外两个数据集，即 Malimg 数据集 [[13](#bib.bib13)] 和 Microsoft
    恶意软件数据集 [[61](#bib.bib61)]。EffNet B1、B2、B3、B4、B5、B6 和 B7 的准确率和损失曲线图见附录 B，而 EffNet
    B0 的图示见图 [11](#S9.F11 "图 11 ‣ 9.2 使用微调 ‣ 9 深度迁移学习模型用于恶意软件检测 ‣ 使用深度学习的恶意软件检测调查")。
- en: '![Refer to caption](img/89861764118781e315856fd11b66a5a6.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![参见标题](img/89861764118781e315856fd11b66a5a6.png)'
- en: 'Figure 11: Training and testing for accuracy and loss of EfficientnetB0'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11：EfficientnetB0 的训练和测试准确率及损失
- en: We found that the Inception-V4 model is most effective in classifying malware
    images among the ten models. In addition, the training times for each model increases
    with increase in the size of input images since the number of network cells grows
    quickly in GPU RAM.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 我们发现 Inception-V4 模型在十个模型中对恶意软件图像分类的效果最好。此外，随着输入图像大小的增加，每个模型的训练时间也增加，因为网络单元的数量在
    GPU 内存中迅速增长。
- en: 9.3 Analysis of Transfer Learning for Malware Classification
  id: totrans-173
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.3 恶意软件分类的迁移学习分析
- en: We found that transfer learning based image classification, with a small number
    of parameters to retrain successfully to classify malware images. On the other
    hand, we argue that scaled up wider and deeper transfer models with more parameters
    builds a new model that may improve performance. Inception-V3 and Inception-V4
    for malware detection and classification avoid the inefficiencies in classifying
    unknown malware grayscale and RGB images among transfer learning classification
    model. There are many transfer learning models techniques such as batch normalization
    [[62](#bib.bib62)], skip connections [[63](#bib.bib63)] that are designed to help
    in training, but the accuracy still needs to improve. For instance, ResNet-101
    and ResNet-50 have similar accuracies in terms of malware detection even though
    they have very different deep networks [[64](#bib.bib64)].
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们发现，基于迁移学习的图像分类，通过少量参数成功地重新训练以分类恶意软件图像。另一方面，我们认为，扩大规模的更宽更深的迁移模型，具有更多参数，可以建立一个新的模型，从而可能提升性能。Inception-V3
    和 Inception-V4 在恶意软件检测和分类中，避免了在迁移学习分类模型中对未知恶意软件灰度图像和RGB图像分类的低效性。虽然有许多迁移学习模型技术，如批量归一化[[62](#bib.bib62)]、跳跃连接[[63](#bib.bib63)]，旨在帮助训练，但准确性仍需提高。例如，尽管
    ResNet-101 和 ResNet-50 在恶意软件检测中有着相似的准确率，但它们的深度网络却大相径庭[[64](#bib.bib64)]。
- en: 10 Natural Language Processing for Malware Classification
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 10 自然语言处理用于恶意软件分类
- en: Natural Language Processing (NLP) extracts valuable information so that a program
    is able to read, understand and derive meaning from human language text or speech.
    Malware data contain executable files, Microsoft Word files, macro files, logs
    from different operating systems, emails, network activities, etc. Many of these
    files contain extensive amounts of text; some others contain snippets of text
    mixed with code and other information. NLP can be used to enhance malware classification
    due to the extensive use of text or text-like content within malware. A critical
    requirement for malware text classification is using effective text representation
    in the form text encoding. The initial step in text encoding is preprocessing
    by removing a redundant opcode or API fragments, discarding unnecessary text.
    After tokenization, there are different types of non-sequential text representations
    [[65](#bib.bib65)] such as Bag of Words (BoW), Term Frequency Inverse document
    frequency matrices (TFIDF), Term document matrices (TDM), n-grams, One hot encoding,
    ASCII representations, and modren word embedding such as Word2vec [[66](#bib.bib66)]
    and Sent2vec [[67](#bib.bib67)]. Table 4 presents text representation methods
    used in malware classification. Current word embeddings, when used in malware
    classification, do not carry much semantic and contextual significance. Bensaoud
    and Kalita [[68](#bib.bib68)] proposed a novel model for malware classification
    using API calls and opcodes, incorporating a combined Convolutional Neural Network
    and Long Short-Term Memory architecture. By transforming features into N-gram
    sequences and experimenting with various deep learning architectures, including
    Swin-T and Sequencer2D-L, the method achieves a high accuracy of 99.91%, surpassing
    state-of-the-art performance. Mimura and Ito [[69](#bib.bib69)] designed NLP-based
    malware detection by using printable ASCII strings. The model can detect effectively
    packed malware and anti-debugging. Sequence to Sequence neural models are commonly
    used for natural languages processing and therefore used for malware detection
    as well.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 自然语言处理（NLP）提取有价值的信息，以便程序能够读取、理解并从人类语言文本或语音中推导意义。恶意软件数据包含可执行文件、Microsoft Word
    文件、宏文件、来自不同操作系统的日志、电子邮件、网络活动等。许多这些文件包含大量文本；一些文件包含与代码和其他信息混合的文本片段。由于恶意软件中广泛使用文本或类似文本的内容，因此可以使用NLP来增强恶意软件分类。恶意软件文本分类的一个关键要求是使用有效的文本表示形式，即文本编码。文本编码的初步步骤是通过删除冗余的操作码或API片段，丢弃不必要的文本进行预处理。分词后，有不同类型的非顺序文本表示方式[[65](#bib.bib65)]，如词袋模型（BoW）、词频逆文档频率矩阵（TFIDF）、词文档矩阵（TDM）、n-gram、独热编码、ASCII表示，以及现代词嵌入如Word2vec
    [[66](#bib.bib66)] 和Sent2vec [[67](#bib.bib67)]。表4展示了用于恶意软件分类的文本表示方法。目前的词嵌入在用于恶意软件分类时并未携带太多的语义和上下文意义。Bensaoud
    和 Kalita [[68](#bib.bib68)] 提出了一个新颖的恶意软件分类模型，使用API调用和操作码，结合了卷积神经网络和长短期记忆网络架构。通过将特征转化为N-gram序列，并尝试各种深度学习架构，包括Swin-T和Sequencer2D-L，该方法达到了99.91%的高准确率，超过了最先进的性能。Mimura
    和 Ito [[69](#bib.bib69)] 设计了基于NLP的恶意软件检测，使用可打印的ASCII字符串。该模型能够有效检测打包的恶意软件和防调试技术。序列到序列神经模型通常用于自然语言处理，因此也用于恶意软件检测。
- en: 'Table 4: The steps of encoding the domain by NLP.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 表4：通过NLP对域进行编码的步骤。
- en: '| Domain | Notes |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| 域 | 备注 |'
- en: '| www.uccs.edu | Start with domain |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| www.uccs.edu | 从域开始 |'
- en: '| uccs | Extract second level |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| uccs | 提取第二级 |'
- en: '| ["u","c","c","s"] | Convert to sequence |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| ["u","c","c","s"] | 转换为序列 |'
- en: '| [21,3,3,18] |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| [21,3,3,18] |'
- en: '&#124; Translate character to &#124;'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 将字符翻译为 &#124;'
- en: '&#124; numeric values &#124;'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 数值 &#124;'
- en: '|'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| [0,0,0,….,0,21,3,3,18] | Pad sequence |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| [0,0,0,….,0,21,3,3,18] | 填充序列 |'
- en: 10.1 Sequence to Sequence Neural Models
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 10.1 序列到序列神经模型
- en: Attention mechanism [[70](#bib.bib70)] has achieved high performance in sequential
    learning applications such as machine translation [[71](#bib.bib71)], image recognition
    [[72](#bib.bib72)], text summarization [[73](#bib.bib73)], and text classification
    [[74](#bib.bib74)]. Attention mechanism was designed to improve the performance
    of the encoder-decoder machine translation approach [[75](#bib.bib75)]. The encoder
    and decoder are usually many stacked RNN layers such as LSTM as shown in Fig.
     [12](#S10.F12 "Figure 12 ‣ 10.1 Sequence to Sequence Neural Models ‣ 10 Natural
    Language Processing for Malware Classification ‣ A Survey of Malware Detection
    Using Deep Learning"). The encoder converts the text into a fixed-length vector
    while the decoder generates the translation text from this vector. The sequence
    {$\displaystyle x_{1},x_{2},...,x_{n}$} can either be a representation of text
    or image as shown in Fig.  [13](#S10.F13 "Figure 13 ‣ 10.1 Sequence to Sequence
    Neural Models ‣ 10 Natural Language Processing for Malware Classification ‣ A
    Survey of Malware Detection Using Deep Learning"). In case of sequences, Recurrent
    Neural Networks (RNNs) can take two sequences with the same or arbitrary lengths.
    In Fig.  [14](#S10.F14 "Figure 14 ‣ 10.1 Sequence to Sequence Neural Models ‣
    10 Natural Language Processing for Malware Classification ‣ A Survey of Malware
    Detection Using Deep Learning"), the encoder creates a compressed representation
    called context vector of the input, while the decoder gets the context vector
    to generate the output sequence. In this approach, the network is incapable of
    remembering dependencies in long sentences. This is because the context vector
    needs to handle potentially long sentences, and a shoot overall representation
    does not have the especially to store many potential dependencies.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 注意力机制 [[70](#bib.bib70)] 在序列学习应用中取得了高性能，如机器翻译 [[71](#bib.bib71)]、图像识别 [[72](#bib.bib72)]、文本摘要
    [[73](#bib.bib73)] 和文本分类 [[74](#bib.bib74)]。注意力机制旨在提高编码器-解码器机器翻译方法 [[75](#bib.bib75)]
    的性能。编码器和解码器通常是许多堆叠的 RNN 层，如图 [12](#S10.F12 "图 12 ‣ 10.1 序列到序列神经模型 ‣ 10 恶意软件分类的自然语言处理
    ‣ 基于深度学习的恶意软件检测综述") 所示。编码器将文本转换为固定长度的向量，而解码器从该向量生成翻译文本。序列 {$\displaystyle x_{1},x_{2},...,x_{n}$}
    可以是文本或图像的表示，如图 [13](#S10.F13 "图 13 ‣ 10.1 序列到序列神经模型 ‣ 10 恶意软件分类的自然语言处理 ‣ 基于深度学习的恶意软件检测综述")
    所示。在序列的情况下，递归神经网络（RNN）可以处理长度相同或任意长度的两个序列。在图 [14](#S10.F14 "图 14 ‣ 10.1 序列到序列神经模型
    ‣ 10 恶意软件分类的自然语言处理 ‣ 基于深度学习的恶意软件检测综述") 中，编码器创建了一个称为上下文向量的压缩表示输入，而解码器使用上下文向量生成输出序列。在这种方法中，网络无法记住长句中的依赖关系。这是因为上下文向量需要处理潜在的长句，而简要的整体表示没有特别的能力来存储许多潜在的依赖关系。
- en: 'Attention in encoder-decoder: Bahdanau et al. [[76](#bib.bib76)] proposed an
    encoder-decoder attention mechanism framework for machine translation. A single
    fixed context vector is created by an RNN by encoding the input sequence. Rather
    than using just the fixed vector, we can also use each state of the encoder along
    with the current decoder state to generate a dynamic context vector. There are
    two benefits; the first benefit is encoding information contained in a sequence
    of vectors not just in one single context vector. The second benefit is to choose
    a subset of these vectors adaptively while decoding the translation.'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在编码器-解码器中：Bahdanau 等人 [[76](#bib.bib76)] 提出了一个用于机器翻译的编码器-解码器注意力机制框架。通过对输入序列进行编码，RNN
    创建一个固定的上下文向量。我们不仅可以使用固定向量，还可以结合编码器的每个状态和当前解码器状态来生成一个动态上下文向量。这样有两个好处；第一个好处是将信息编码在多个向量序列中，而不仅仅是一个固定的上下文向量。第二个好处是在解码翻译时可以自适应地选择这些向量的一个子集。
- en: '![Refer to caption](img/3e97fdde9b73a8c8fd87658397e69a5c.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![参考说明](img/3e97fdde9b73a8c8fd87658397e69a5c.png)'
- en: 'Figure 12: Encoder and decoder'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12：编码器和解码器
- en: '![Refer to caption](img/e89130f94a06a05c69b481868bf2d2cc.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![参考说明](img/e89130f94a06a05c69b481868bf2d2cc.png)'
- en: 'Figure 13: Encoder and decoder include RNNs'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13：编码器和解码器包括 RNN
- en: '![Refer to caption](img/b0e9952889442decedc722cfec46ba50.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![参考说明](img/b0e9952889442decedc722cfec46ba50.png)'
- en: 'Figure 14: Encoder and decoder include RNNs with attention mechanism'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14：编码器和解码器包括带有注意力机制的 RNN
- en: An attention mechanism is another Lego block that can be used in any deep learning
    model. Vaswani et al. [[77](#bib.bib77)] showed that an attention mechanism is
    apparently the only Lego block one needs. It improved the performance of a language
    translation model by dynamically choosing important parts of the input sequence
    that matter at a certain point in the output sequence. We can entirely replace
    traditional Recurrent Neural Network (RRN) blocks by an attention mechanism block.
    When dealing with sequential data, the attention mechanisms allow models to not
    only perform better but also train faster.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 注意力机制是任何深度学习模型中都可以使用的另一个积木块。Vaswani等人 [[77](#bib.bib77)] 表明，注意力机制显然是唯一需要的积木块。它通过动态选择在输出序列的某一点上重要的输入序列部分，来提高语言翻译模型的性能。我们可以完全用注意力机制块替换传统的递归神经网络（RRN）块。在处理顺序数据时，注意力机制不仅使模型性能更好，而且训练更快。
- en: 'Applying attention mechanism in malware classification: Or-Meir et al. [[78](#bib.bib78)]
    added an attention mechanism to an LSTM model, which improved accuracy in malware
    classification. Yakura et al. [[79](#bib.bib79)] proposed a method by using Convolutional
    Neural Network with Attention Mechanism for malware image classification. Mimura
    and Ohminami [[80](#bib.bib80)] proposed a sliding local attention mechanism model
    (SLAM) based on API execution sequence. Ma et al. [[81](#bib.bib81)] proposed
    a malware classification framework (ACNN) based on two sections within the malware
    text, the assembly code and binary code, and converted them into multi-dimensional
    features. A CNN with attention mechanism for classification has a higher malware
    image classification accuracy than conventional methods [[79](#bib.bib79)]. To
    build predictive models using LSTM and attention mechanism for malware classification,
    we need to add an embedding layer followed by an LSTM layer and dense layers .
    This approach is superior to capturing a long sequence of Windows API call sequences
    and using them directly [[82](#bib.bib82)] (see Fig.  [15](#S10.F15 "Figure 15
    ‣ 10.1 Sequence to Sequence Neural Models ‣ 10 Natural Language Processing for
    Malware Classification ‣ A Survey of Malware Detection Using Deep Learning")).
    Malware’s longer sequence can be addressed by attention mechanisms that can help
    detect short repeating patterns and other dependencies [[83](#bib.bib83)]. While
    attention mechanism improves accuracy, it suffers from the heavy computation.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在恶意软件分类中应用注意力机制：Or-Meir等人 [[78](#bib.bib78)] 在LSTM模型中添加了注意力机制，提高了恶意软件分类的准确率。Yakura等人
    [[79](#bib.bib79)] 提出了一种使用卷积神经网络和注意力机制进行恶意软件图像分类的方法。Mimura和Ohminami [[80](#bib.bib80)]
    提出了基于API执行序列的滑动局部注意力机制模型（SLAM）。Ma等人 [[81](#bib.bib81)] 提出了一个恶意软件分类框架（ACNN），基于恶意软件文本中的两个部分，即汇编代码和二进制代码，并将它们转换为多维特征。具有注意力机制的CNN在分类时的恶意软件图像分类准确率高于传统方法
    [[79](#bib.bib79)]。为了构建使用LSTM和注意力机制的预测模型用于恶意软件分类，我们需要添加一个嵌入层，随后是LSTM层和全连接层。这种方法优于捕捉Windows
    API调用序列的长序列并直接使用它们 [[82](#bib.bib82)]（见图[15](#S10.F15 "图15 ‣ 10.1 序列到序列神经模型 ‣
    10 自然语言处理用于恶意软件分类 ‣ 基于深度学习的恶意软件检测综述")）。恶意软件的长序列可以通过注意力机制解决，注意力机制可以帮助检测短重复模式和其他依赖关系
    [[83](#bib.bib83)]。虽然注意力机制提高了准确性，但它也面临着计算量大的问题。
- en: '![Refer to caption](img/10e53b09aeb1434c73ecb712c7b20833.png)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![参见标题](img/10e53b09aeb1434c73ecb712c7b20833.png)'
- en: 'Figure 15: LSTM with attention mechanism for malware classification'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 图15：用于恶意软件分类的LSTM与注意力机制
- en: 'Table 5: State-of-the-art deep learning models.'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 表5：最先进的深度学习模型。
- en: '| Ref | Deep Learning Approach | OS | Features | Accuracy |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| 参考 | 深度学习方法 | 操作系统 | 特征 | 准确率 |'
- en: '| Kim et al. [[84](#bib.bib84)] | MAPAS | Android | API call graphs | 91.27%
    |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| Kim等人 [[84](#bib.bib84)] | MAPAS | Android | API调用图 | 91.27% |'
- en: '| Onwuzurike et al. [[85](#bib.bib85)] | MaMaDroid | Android | API calls |
    84.99% |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| Onwuzurike等人 [[85](#bib.bib85)] | MaMaDroid | Android | API调用 | 84.99% |'
- en: '| Kim and Cho [[86](#bib.bib86)] | Deep Generative Model | Android |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
  zh: '| Kim和Cho [[86](#bib.bib86)] | 深度生成模型 | Android |'
- en: '&#124; Dalvik code, &#124;'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; Dalvik代码，&#124;'
- en: '&#124; API call, &#124;'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; API调用，&#124;'
- en: '&#124; Malware images, &#124;'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 恶意软件图像，&#124;'
- en: '&#124; developers’ signature &#124;'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 开发者签名 &#124;'
- en: '| 97.47% |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| 97.47% |'
- en: '| Olani et al. [[87](#bib.bib87)] | DeepWare | Windows/Linux | HPC | 96.8%
    |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| Olani等人 [[87](#bib.bib87)] | DeepWare | Windows/Linux | HPC | 96.8% |'
- en: '| Lian et al. [[88](#bib.bib88)] | Multi-Modal Deep Learning | Windows |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| Lian等人 [[88](#bib.bib88)] | 多模态深度学习 | Windows |'
- en: '&#124; Grayscale image, &#124;'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 灰度图像，&#124;'
- en: '&#124; Byte/Entropy &#124;'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 字节/熵 &#124;'
- en: '&#124; Histogram &#124;'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 直方图 &#124;'
- en: '| 97.01% |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| 97.01% |'
- en: '| Bensaoud and Kalita [[89](#bib.bib89)] |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| Bensaoud 和 Kalita [[89](#bib.bib89)] |'
- en: '&#124; Deep multi-task &#124;'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 深度多任务 &#124;'
- en: '&#124; learning &#124;'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 学习 &#124;'
- en: '|'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '&#124; Windows &#124;'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; Windows &#124;'
- en: '&#124; Android &#124;'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 安卓 &#124;'
- en: '&#124; Linux &#124;'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; Linux &#124;'
- en: '&#124; MacOS &#124;'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; MacOS &#124;'
- en: '|'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '&#124; Grayscale &#124;'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 灰度 &#124;'
- en: '&#124; color image &#124;'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '&#124; 彩色图像 &#124;'
- en: '| 99.97% |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| 99.97% |'
- en: Table 5 shows various approaches and their corresponding accuracies. The methods
    presented, including MAPAS, MaMaDroid, Deep Generative Model, DeepWare, Multi-Modal
    Deep Learning, and Deep Multi-Task Learning, employ diverse techniques such as
    API call graph analysis, static analysis, and hybrid deep generative models. Particularly,
    these methods are evaluated on distinct datasets, indicating that the comparisons
    are not based on the same dataset. The authors aim to convey the effectiveness
    of these models in detecting malware across different datasets and scenarios.
    However, a comprehensive overview of the comparative performance of these methods
    is needed, highlighting their strengths and capabilities in addressing the challenges
    of malware detection.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 表 5 显示了各种方法及其相应的准确率。所呈现的方法，包括 MAPAS、MaMaDroid、Deep Generative Model、DeepWare、Multi-Modal
    Deep Learning 和 Deep Multi-Task Learning，采用了多种技术，如 API 调用图分析、静态分析和混合深度生成模型。特别是，这些方法在不同的数据集上进行了评估，表明比较不是基于相同的数据集。作者旨在传达这些模型在不同数据集和场景下检测恶意软件的有效性。然而，需要对这些方法的比较性能进行全面的概述，突出它们在应对恶意软件检测挑战中的优势和能力。
- en: 11 Deep Learning for Cryptographic Ransomware
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 11 深度学习与加密勒索软件
- en: Cryptography has been used traditionally for military and government use, to
    keep secrets from the enemy. Today most of us use cryptography when we use commercial
    websites or services. For example, we use it to protect our emails. A lot of countries
    try to control the export of cryptography to make sure that good cryptographic
    algorithms are not in the hands of criminals, enemies, or adversaries. This is
    the idea behind export administration, and regulations as codified in International
    Traffic in Arms Regulations (ITAR)^(18)^(18)18https://csrc.nist.gov/glossary/term/itar.
    In addition, we have various agreements like the Wassenaar Arrangement^(19)^(19)19https://www.federalregister.gov/documents/2022/08/15/2022-17125/implementation-of-certain-2021-wassenaar-arrangement-decisions-on-four-section-1758-technologies,
    where a number of countries got together and developed an agreement for what cryptographic
    elements can be exported and imported without any type of restrictions. This agreement
    allows publicly available cryptographic algorithms to be distributed freely. Cryptography
    provides various security capabilities for us.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 密码学传统上用于军事和政府用途，以保护秘密免受敌人获取。今天，我们大多数人在使用商业网站或服务时都会使用密码学。例如，我们用它来保护我们的电子邮件。许多国家试图控制密码学的出口，以确保优秀的密码算法不会落入罪犯、敌人或对手之手。这就是出口管理的理念，以及《国际武器贸易条例》(ITAR)^(18)^(18)18https://csrc.nist.gov/glossary/term/itar
    中规定的内容。此外，我们有各种协议，如瓦森纳安排^(19)^(19)19https://www.federalregister.gov/documents/2022/08/15/2022-17125/implementation-of-certain-2021-wassenaar-arrangement-decisions-on-four-section-1758-technologies，许多国家联合制定了有关密码元素的出口和进口协议，无任何限制。该协议允许公开可用的密码算法自由分发。密码学为我们提供了多种安全能力。
- en: •
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Confidentiality: To protect our intellectual property from somebody else being
    able to get hold of it.'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 保密性：保护我们的知识产权不被他人获取。
- en: •
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Non-repudiation: To repudiate is to deny. For example, if we use digital signatures,
    we can provide proof that the message came from the person who signed. We can
    link the signed document to a trusted person, which gives us trust or assurance
    in the world of e-contracts and e-commerce. The signer cannot repudiate or deny
    being the source of the document.'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不可否认性：否认就是拒绝。例如，如果我们使用数字签名，我们可以提供证明，证明消息来自签名者。我们可以将签署的文档与可信的人联系起来，这为电子合同和电子商务世界中的信任提供了保障。签署者不能否认或拒绝是文档的来源。
- en: •
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Integrity: Hashing provides integrity, to know that a message was not changed
    either accidentally or intentionally as it was transmitted or stored. Integrity
    is built into implementation of electronic communication services today using
    such as SHA algorithms^(20)^(20)20https://csrc.nist.gov/glossary/term/sha and
    MD5^(21)^(21)21https://csrc.nist.gov/glossary/term/md5.'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完整性：哈希提供完整性，以确保消息在传输或存储过程中没有被意外或故意更改。完整性通过电子通信服务的实现来构建，例如使用 SHA 算法^(20)^(20)20https://csrc.nist.gov/glossary/term/sha
    和 MD5^(21)^(21)21https://csrc.nist.gov/glossary/term/md5。
- en: •
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Proof-of-Origin: Cryptography can be used to prove where a message came from,
    the idea of Proof-of-Origin.'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 来源证明：加密可以用于证明消息的来源，这是来源证明的概念。
- en: •
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Authenticity: The idea is to ensure that communication is with the intended
    person. For example, if we go to a bank’s website, then we want to be sure that
    the website is truly of that bank, not that of an impostor or somebody else masquerading
    as that bank.'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 真实性：这个概念是确保通信是与预定的人进行的。例如，如果我们访问银行的网站，那么我们要确保这个网站确实是那家银行的，而不是冒充银行的其他人。
- en: 11.1 Operations of Cryptography
  id: totrans-241
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.1 加密操作
- en: 'Cryptographic algorithms come in three basic flavors: Symmetric, Asymmetric,
    and Hash algorithms. Each of these different types of algorithms serves a different
    purpose, but all work together in a cryptography system.'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 加密算法有三种基本类型：对称加密、非对称加密和哈希算法。这些不同类型的算法各自有不同的用途，但在加密系统中都协同工作。
- en: Cryptography is a key to keeping communicated information secret by converting
    it into an unreadable code that is hard to break. To encrypt or encipher is to
    take a plaintext message and convert it into something unreadable to anyone who
    does not have a key. To decrypt or decipher is the reverse step.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 加密是保持通信信息秘密的关键，通过将其转换为难以破解的不可读代码。加密或编码是将明文消息转换为对没有密钥的人不可读的内容。解密或解码是反向步骤。
- en: In Fig.  [16](#S11.F16 "Figure 16 ‣ 11.1 Operations of Cryptography ‣ 11 Deep
    Learning for Cryptographic Ransomware ‣ A Survey of Malware Detection Using Deep
    Learning"), the basic action includes plaintext being fed into a cryptosystem.
    This process is used to encrypt and decrypt a message. It contains an algorithm
    that uses a mathematical process to convert a message from plaintext to ciphertext
    and then back again. The algorithm includes a key or a cryptovariable. The variable
    is used by the algorithm during the encryption and decryption processes. Typically
    the key is a secret password, passphrase, or PIN chosen either by the person or
    by the tool that encrypts the message. This combination of the key (or a cryptovariable)
    and the algorithm in the cryptosystem produces a unique ciphertext.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在图 [16](#S11.F16 "Figure 16 ‣ 11.1 Operations of Cryptography ‣ 11 Deep Learning
    for Cryptographic Ransomware ‣ A Survey of Malware Detection Using Deep Learning")中，基本操作包括将明文输入加密系统。这个过程用于加密和解密消息。它包含一个使用数学过程将消息从明文转换为密文然后再转换回来的算法。该算法包括一个密钥或加密变量。该变量在加密和解密过程中被算法使用。通常，密钥是由个人或加密消息的工具选择的秘密密码、密码短语或PIN码。密钥（或加密变量）与算法的组合在加密系统中产生唯一的密文。
- en: '![Refer to caption](img/f0a5f394beeaebcd3c4fa0d2ba2e24c7.png)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/f0a5f394beeaebcd3c4fa0d2ba2e24c7.png)'
- en: 'Figure 16: Crypto Action'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16：加密操作
- en: In the symmetric algorithm family, a symmetric key is one that is a shared secret
    between the sender and receiver of the information. The same key used for encryption
    is also used for decryption. It is not safe to send a copy of the key along with
    the message that it encrypts. We need to use another mode of communication to
    transmit the key. For example, Ahmed sends the symmetric key to Bryan using a
    certain secure node of communication. Once Bryan has the key, Ahmed can encrypt
    the plaintext message into ciphertext and send it over a public network to Bryan
    with confidence that it will remain encrypted until Bryan decides to decrypt with
    the received key.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 在对称算法家族中，对称密钥是发送方和接收方之间共享的秘密。用于加密的密钥也用于解密。将密钥的副本与加密的消息一起发送是不安全的。我们需要使用另一种通信方式来传输密钥。例如，Ahmed
    使用某个安全通信节点将对称密钥发送给 Bryan。一旦 Bryan 拥有密钥，Ahmed 就可以将明文消息加密为密文，并通过公共网络发送给 Bryan，确信它在
    Bryan 决定用收到的密钥解密之前会保持加密状态。
- en: Multiple attacks, such as a man-in-middle attack, brute force attack, biclique
    attack, ciphertext only attack, known plaintext attack, chosen plaintext attack,
    chosen ciphertext attack, and chosen text attack can discover the key to find
    the plaintext. Attackers know the mathematical relationship of the keys for some
    algorithms, such as Advanced Encryption Standard (AES) [[90](#bib.bib90)], Triple
    DES [[91](#bib.bib91)], Blowfish [[92](#bib.bib92)], and Rivest-Shamir-Adleman
    (RSA) [[93](#bib.bib93)]. We perform cryptanalysts using statistical measures
    to try to get the cipher type, but a cryptanalyst can only test as many solvers
    via trial and error to test if the ciphertext was encrypted using a specific cipher.
    Machine learning can tell us what type a cipher is [[94](#bib.bib94)]. The cipher
    type detection problem is a classification problem. We can use statistical values
    as features for machine learning.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 多种攻击，如中间人攻击、暴力破解攻击、双击攻击、仅密文攻击、已知明文攻击、选择明文攻击、选择密文攻击和选择文本攻击，可以发现密钥以找到明文。攻击者知道某些算法的密钥数学关系，如高级加密标准(AES)
    [[90](#bib.bib90)]、三重DES [[91](#bib.bib91)]、Blowfish [[92](#bib.bib92)] 和 Rivest-Shamir-Adleman
    (RSA) [[93](#bib.bib93)]。我们使用统计措施执行密码分析，试图获取密码类型，但密码分析师只能通过试错方法测试密文是否使用了特定的密码。机器学习可以告诉我们密码的类型[[94](#bib.bib94)]。密码类型检测问题是一个分类问题。我们可以使用统计值作为机器学习的特征。
- en: 11.2 Connection Between Deep Learning and Cryptography
  id: totrans-249
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.2 深度学习与密码学的关系
- en: '![Refer to caption](img/88471287e8869fe28a07cd9ff1506f60.png)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/88471287e8869fe28a07cd9ff1506f60.png)'
- en: 'Figure 17: Cryptocurrency malware detection using machine learning'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17：使用机器学习检测加密货币恶意软件
- en: A neural network can deal with the complexity of computation applied to perform
    cryptography. Instead of giving an image to a neural network, we can give ciphertext
    to the neural network to classify the kind of algorithm that was used to obtain
    the ciphertext, as shown in Fig.  [17](#S11.F17 "Figure 17 ‣ 11.2 Connection Between
    Deep Learning and Cryptography ‣ 11 Deep Learning for Cryptographic Ransomware
    ‣ A Survey of Malware Detection Using Deep Learning"). To build a machine learning
    model, we can represent different features of the cipher, which cryptanalysts
    usually use to identify them. We need to put an intermediate layer between the
    network and ciphertext that computes the features, such as Unigram frequencies,
    Bigram frequencies, Index of Coincidence IoC, HasDoubleLetters, etc., and then
    we can train the network with millions of ciphertext and all American Cryptogram
    Association (ACA) cipher types. For example, in Fig.  [18](#S11.F18 "Figure 18
    ‣ 11.2 Connection Between Deep Learning and Cryptography ‣ 11 Deep Learning for
    Cryptographic Ransomware ‣ A Survey of Malware Detection Using Deep Learning"),
    the three blue neural networks are given the frequencies of N-grams (1-grams,
    2-grams, 3-grams, 4-grams, etc.), and the green neural network computes HasDoubleLetters.
    Then we have a hidden layer that connects the input and output layers. Finally,
    in this case the designed neural network shows 90% Seriated Playfair, and the
    green neural network shows 10% Bazeries. Baksi [[95](#bib.bib95)] designed a machine-learning
    model for differential attacks on the non-Markov 8-round GIMLI cipher and GIMLI
    hash. They applied multi-layer perceptron (MLP), Convolutional Neural Networks
    (CNN), and Long Short-Term Memory (LSTM).
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 神经网络可以处理用于执行密码学的计算复杂性。我们可以将密文输入神经网络，来分类用于获取该密文的算法类型，如图[17](#S11.F17 "图 17 ‣
    11.2 深度学习与密码学的关系 ‣ 11 深度学习在密码勒索软件中的应用 ‣ 使用深度学习的恶意软件检测调查")所示。为了构建机器学习模型，我们可以表示密码的不同特征，密码分析师通常使用这些特征来识别密码。我们需要在网络和密文之间放置一个中间层，该层计算特征，如Unigram频率、Bigram频率、Coincidence指数IoC、HasDoubleLetters等，然后我们可以用数百万个密文和所有美国密码协会(ACA)密码类型来训练网络。例如，在图[18](#S11.F18
    "图 18 ‣ 11.2 深度学习与密码学的关系 ‣ 11 深度学习在密码勒索软件中的应用 ‣ 使用深度学习的恶意软件检测调查")中，三个蓝色神经网络接收N-gram（1-gram,
    2-gram, 3-gram, 4-gram等）的频率，而绿色神经网络计算HasDoubleLetters。然后我们有一个隐藏层连接输入层和输出层。最后，在这个案例中，设计的神经网络显示90%的Seriated
    Playfair，而绿色神经网络显示10%的Bazeries。Baksi [[95](#bib.bib95)] 设计了一个机器学习模型用于对非马尔可夫8轮GIMLI密码和GIMLI哈希的差分攻击。他们应用了多层感知器(MLP)、卷积神经网络(CNN)和长短期记忆网络(LSTM)。
- en: '![Refer to caption](img/db306ed00ebaaa2e73b49263d9ead4e0.png)'
  id: totrans-253
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/db306ed00ebaaa2e73b49263d9ead4e0.png)'
- en: 'Figure 18: Detect the Cipher Type With Neural Networks'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18：使用神经网络检测密码类型
- en: The ransomware families to encrypt data and force the victim to make payment
    via cryptocurrency include WannaCry, Locky, Stop, CryptoJoker, CrypoWall, TeslaCrypt,
    Dharma, Locker, Cerber, and GandCrab. Recently, deep learning algorithms have
    been used for cryptography [[96](#bib.bib96)]. Ding et al. [[97](#bib.bib97)]
    proposed DeepEDN to fulfill the process of encrypting and decrypting medical images.
    Kim et al. [[98](#bib.bib98)] proposed detection of cryptographic ransomware using
    Convolutional Neural Network. Their model prevents crypto-ransomware infection
    by detecting a block cipher algorithm. Sharmeen et al. [[99](#bib.bib99)] proposed
    an approach to extract the intrinsic attack characteristics of unlabeled ransomware
    samples using a deep learning-based unsupervised learned model. Fischer et al.
    [[100](#bib.bib100)] designed a tool to detect security vulnerabilities of cryptographic
    APIs in Android by achieving an average AUC-ROC of 99.2%.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 加密数据并迫使受害者通过加密货币付款的勒索软件家族包括WannaCry、Locky、Stop、CryptoJoker、CrypoWall、TeslaCrypt、Dharma、Locker、Cerber和GandCrab。最近，深度学习算法已被用于密码学
    [[96](#bib.bib96)]。丁等 [[97](#bib.bib97)] 提出了DeepEDN来完成加密和解密医学图像的过程。金等 [[98](#bib.bib98)]
    提出了使用卷积神经网络检测加密勒索软件。他们的模型通过检测块密码算法来防止加密勒索软件感染。Sharmeen等 [[99](#bib.bib99)] 提出了使用基于深度学习的无监督学习模型提取未标记的勒索软件样本的内在攻击特征的方法。Fischer等
    [[100](#bib.bib100)] 设计了一种工具，通过实现99.2%的平均AUC-ROC来检测Android中加密API的安全漏洞。
- en: '![Refer to caption](img/983cbf0bd82d741aec1c32408401c4b4.png)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
  zh: '![参见标题](img/983cbf0bd82d741aec1c32408401c4b4.png)'
- en: 'Figure 19: Using explainable artificial intelligence in deep learning'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19：在深度学习中使用可解释人工智能
- en: 12 Explainable Artificial Intelligence (XAI)
  id: totrans-258
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 12 可解释人工智能（XAI）
- en: Explainable Artificial Intelligence (XAI) is a rapidly emerging field that focuses
    on creating transparent and interpretable models (see Fig.  [19](#S11.F19 "Figure
    19 ‣ 11.2 Connection Between Deep Learning and Cryptography ‣ 11 Deep Learning
    for Cryptographic Ransomware ‣ A Survey of Malware Detection Using Deep Learning")).
    In the context of malware detection, XAI can help security experts and analysts
    understand how a machine learning model arrived at its decisions, making it easier
    to identify and understand false positives and false negatives. By applying XAI
    techniques, such as Local Interpretable Model-Agnostic Explanations (LIME) [[101](#bib.bib101)]
    or Deep Learning Important Features (DeepLIFT) [[102](#bib.bib102)], security
    teams can gain insights into the most important features and decision-making processes
    of the model. This can help them identify areas where the model may be vulnerable
    to evasion or identify new malware strains that the model may have missed. Ultimately,
    XAI can improve the trustworthiness and reliability of machine learning models
    for malware detection, enabling more effective threat detection and response.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 可解释人工智能（XAI）是一个快速发展的领域，专注于创建透明和可解释的模型（参见图 [19](#S11.F19 "图 19 ‣ 11.2 深度学习与密码学的关系
    ‣ 11 深度学习在加密勒索软件中的应用 ‣ 使用深度学习进行恶意软件检测的调查")）。在恶意软件检测的背景下，XAI可以帮助安全专家和分析师理解机器学习模型如何得出其决策，从而更容易识别和理解假阳性和假阴性。通过应用XAI技术，例如局部可解释模型无关解释（LIME）
    [[101](#bib.bib101)] 或深度学习重要特征（DeepLIFT） [[102](#bib.bib102)]，安全团队可以获得关于模型最重要特征和决策过程的见解。这可以帮助他们识别模型可能在逃避方面的脆弱点，或识别模型可能遗漏的新型恶意软件变种。最终，XAI可以提高机器学习模型在恶意软件检测中的可信度和可靠性，从而实现更有效的威胁检测和响应。
- en: 'Nadeem et al. [[103](#bib.bib103)] provided a comprehensive survey and analysis
    of the current state of research on explainable machine learning (XAI) techniques
    for computer security applications. The paper highlights the challenges and opportunities
    for adopting XAI in the security domain and discusses several approaches for designing
    and evaluating explainable machine learning models. Vivek et al. [[104](#bib.bib104)]
    proposed an approach for detecting ATM fraud using explainable artificial intelligence
    (XAI) and causal inference techniques. They presented a detailed analysis of the
    proposed method and highlighted its effectiveness in improving the accuracy and
    interpretability of ATM fraud detection systems. Kinkead et al. [[105](#bib.bib105)]
    proposed an approach that uses LIME to identify important locations in the opcode
    sequence that are deemed significant by the Convolutional Neural Network (CNN).
    McLaughlin et al. [[106](#bib.bib106)] used LRP [[107](#bib.bib107)] and DeepLift
    [[102](#bib.bib102)] methods to identify the opcode sequences for most malware
    families, and they demonstrated that the CNN, while using the DAMD dataset, learned
    patterns from the underlying op-code representation. Hooker et al. [[108](#bib.bib108)]
    proposed a method to remove relevant features detected by an XAI approach and
    verify the accuracy degradation. Lin et al. [[109](#bib.bib109)] presented seven
    different XAI methods and automated the evaluation of the correctness of explanation
    techniques. The first four XAI methods are white-box approaches to determine the
    importance of input features: Backpropagation (BP), Guided Backpropagation (GBP),
    Gradient-weighted Class Activation Mapping (GCAM), and Guided GCAM (GGCAM). The
    last three are black-box approaches that observe an essential feature in the output
    probability using perturbed samples of the input: Occlusion Sensitivity (OCC),
    Feature Ablation (FA), and Local Interpretable Model-Agnostic Explanations (LIME).'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: Nadeem 等人 [[103](#bib.bib103)] 提供了对计算机安全应用领域中可解释机器学习（XAI）技术现状的全面调查和分析。论文强调了在安全领域采用
    XAI 的挑战与机遇，并讨论了设计和评估可解释机器学习模型的几种方法。Vivek 等人 [[104](#bib.bib104)] 提出了一个使用可解释人工智能（XAI）和因果推断技术检测
    ATM 欺诈的方法。他们详细分析了所提方法，并强调了其在提高 ATM 欺诈检测系统的准确性和可解释性方面的有效性。Kinkead 等人 [[105](#bib.bib105)]
    提出了一个使用 LIME 方法来识别在操作码序列中被卷积神经网络（CNN）认为重要的位置的方法。McLaughlin 等人 [[106](#bib.bib106)]
    使用了 LRP [[107](#bib.bib107)] 和 DeepLift [[102](#bib.bib102)] 方法来识别大多数恶意软件家族的操作码序列，并展示了在使用
    DAMD 数据集时，CNN 从底层操作码表示中学习到的模式。Hooker 等人 [[108](#bib.bib108)] 提出了一个方法，通过去除 XAI
    方法检测到的相关特征来验证准确性下降。Lin 等人 [[109](#bib.bib109)] 提出了七种不同的 XAI 方法，并自动化了对解释技术正确性的评估。前四种
    XAI 方法是白盒方法，用于确定输入特征的重要性：反向传播（BP）、引导反向传播（GBP）、梯度加权类别激活映射（GCAM）和引导 GCAM（GGCAM）。后三种是黑盒方法，通过使用输入的扰动样本观察输出概率中的关键特征：遮挡敏感性（OCC）、特征消融（FA）和局部可解释模型无关解释（LIME）。
- en: Guo et al. [[110](#bib.bib110)] proposed an approach called Explaining Deep
    Learning based Security Applications (LEMNA) for security applications, which
    generates interpretable features to explain how input samples are classified.
    Kuppa and Le-Khac [[111](#bib.bib111)] presented a comprehensive analysis of the
    vulnerability of XAI methods to adversarial attacks in the context of cybersecurity,
    discussing potential risks associated with deploying XAI models in real-world
    applications, and proposing a framework for designing robust and secure XAI systems.
    Rao and Mane [[112](#bib.bib112)] proposed an approach to protect and analyze
    systems against the alarm-flooding problem using the NSL-KDD dataset. They included
    a Security Information and Event Management (SIEM) system to generate a zero-shot
    method for detecting alarm labels specific to adversarial attacks. Although explainable
    artificial intelligence (XAI) has gained significant attention, its effectiveness
    in malware detection still requires further investigation to fully comprehend
    its performance.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: Guo 等人 [[110](#bib.bib110)] 提出了一个名为 Explaining Deep Learning based Security
    Applications (LEMNA) 的方法，用于安全应用，该方法生成可解释的特征以解释输入样本如何被分类。Kuppa 和 Le-Khac [[111](#bib.bib111)]
    对 XAI 方法在网络安全中的脆弱性进行了全面分析，讨论了在实际应用中部署 XAI 模型可能面临的风险，并提出了一个设计稳健和安全 XAI 系统的框架。Rao
    和 Mane [[112](#bib.bib112)] 提出了一个利用 NSL-KDD 数据集来保护和分析系统免受警报泛滥问题的方法。他们引入了一个安全信息与事件管理
    (SIEM) 系统，以生成针对对抗性攻击的零样本检测方法。尽管可解释人工智能 (XAI) 已引起广泛关注，但其在恶意软件检测中的有效性仍需进一步调查，以充分理解其性能。
- en: 13 Adversarial Attack on Deep Neural Networks
  id: totrans-262
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 13 深度神经网络上的对抗攻击
- en: Adversarial examples refer to maliciously crafted inputs to machine learning
    models designed to deceive the model into making incorrect predictions. Deep detection
    in this context refers to the use of deep learning models for detecting and classifying
    objects or patterns in the input data. Adversarial examples can be specifically
    crafted to evade deep detection models and cause them to misclassify or miss the
    target objects or patterns. Therefore, adversarial examples can be seen as a type
    of attack on deep detection models. Adversarial examples can be generated using
    a variety of techniques, including optimization-based approaches and perturbation-based
    approaches, and can be used for various objectives, including evasion attacks
    and poisoning attacks. Zhong et al. [[113](#bib.bib113)] proposed a novel adversarial
    malware example generation method called Malfox, which uses conditional generative
    adversarial networks (conv-GANs) to generate camouflaged adversarial examples
    against black-box detectors. The presented method was evaluated on two real-world
    malware detection systems, and the results showed that Malfox achieved high attack
    success rates while maintaining low detection rates. Zhao et al. [[114](#bib.bib114)]
    proposed a new method called SAGE for steering the adversarial generation of examples
    with accelerations. The technique combines the advantages of gradient-based and
    gradient-free methods to generate more effective and efficient adversarial examples.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 对抗性样本指的是恶意制作的输入数据，用于欺骗机器学习模型，使其产生错误预测。在这种情况下，深度检测指的是使用深度学习模型来检测和分类输入数据中的对象或模式。对抗性样本可以特别设计以避开深度检测模型，使其错误分类或遗漏目标对象或模式。因此，对抗性样本可以被视为对深度检测模型的一种攻击。对抗性样本可以通过多种技术生成，包括基于优化的方法和基于扰动的方法，并且可以用于多种目标，包括规避攻击和中毒攻击。Zhong
    等人 [[113](#bib.bib113)] 提出了一种新的对抗性恶意软件样本生成方法，名为 Malfox，该方法使用条件生成对抗网络（conv-GANs）生成针对黑箱检测器的伪装对抗样本。该方法在两个实际恶意软件检测系统上进行了评估，结果表明，Malfox
    实现了高攻击成功率，同时保持了低检测率。Zhao 等人 [[114](#bib.bib114)] 提出了一种名为 SAGE 的新方法，用于加速对抗性样本生成。该技术结合了基于梯度和无梯度方法的优点，以生成更有效和高效的对抗性样本。
- en: The development of defense mechanisms against adversarial attacks is a computationally
    expensive process, which can potentially affect the performance of the deep learning
    model. In addition, adversarial examples can impact the generalization ability
    of deep learning models, resulting in poor performance on new and unseen data.
    Moreover, generating adversarial examples can be computationally intensive, especially
    for large datasets and complex models, which can hinder the practical deployment
    of deep learning models in real-world applications. Thus, further research is
    required to improve the efficiency and effectiveness of defense mechanisms, as
    well as the generalization ability and robustness of deep learning models to adversarial
    attacks.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 对抗攻击防御机制的开发是一个计算成本高昂的过程，这可能影响深度学习模型的性能。此外，对抗样本可以影响深度学习模型的泛化能力，导致在新数据和未见数据上的表现较差。此外，生成对抗样本可能计算量巨大，尤其是对于大数据集和复杂模型，这可能阻碍深度学习模型在实际应用中的部署。因此，需要进一步研究以提高防御机制的效率和效果，以及深度学习模型对对抗攻击的泛化能力和鲁棒性。
- en: Hu and Tan [[115](#bib.bib115)] proposed a method to generate adversarial malware
    examples using Generative Adversarial Networks (GANs) for black-box attacks. Their
    results show that the generated adversarial malware samples can evade detection
    by existing machine learning models while maintaining high similarity to the original
    malware. Ling et al. [[116](#bib.bib116)] conducted a survey of the state-of-the-art
    in adversarial attacks against Windows PE malware detection, covering various
    types of attacks and defense mechanisms. The authors also provided insights on
    potential future research directions in this area. Xu et al. [[117](#bib.bib117)]
    proposed a semi-black-box adversarial sample attack framework called Ofei that
    can generate adversarial samples against Android apps deployed on a DLAAS platform.
    The framework utilizes a multi-objective optimization algorithm to generate robust
    and stealthy adversarial samples. Qiao et al. [[118](#bib.bib118)] proposed an
    adversarial detection method for ELF malware using model interpretation and show
    that their method can effectively identify adversarial ELF malware with high accuracy.
    The proposed approach combines random forests and LIME to identify the most important
    features and thus improve the interpretability and robustness of the model. Meenakshi
    and Maragatham [[119](#bib.bib119)] proposed a defensive technique using Curvelet
    transform to recognize adversarial iris images, optimizing the image classification
    accuracy. The designed method was shown to be effective against several existing
    adversarial attacks on iris recognition systems. Pintor et al. [[120](#bib.bib120)]
    introduced a method for debugging and improving the optimization of adversarial
    examples by identifying and analyzing the indicators of attack failure. The proposed
    method can help to improve the robustness of deep learning models against adversarial
    attacks.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 胡和谭[[115](#bib.bib115)]提出了一种利用生成对抗网络（GANs）生成对抗性恶意软件样本的方法，以进行黑箱攻击。他们的结果显示，生成的对抗性恶意软件样本能够绕过现有机器学习模型的检测，同时保持与原始恶意软件的高相似度。Ling等人[[116](#bib.bib116)]对针对Windows
    PE恶意软件检测的最先进对抗攻击进行了调查，涵盖了各种攻击类型和防御机制。作者们还提供了该领域潜在的未来研究方向。Xu等人[[117](#bib.bib117)]提出了一种名为Ofei的半黑箱对抗样本攻击框架，该框架能够生成针对部署在DLAAS平台上的Android应用的对抗样本。该框架利用多目标优化算法生成稳健且隐蔽的对抗样本。Qiao等人[[118](#bib.bib118)]提出了一种用于ELF恶意软件的对抗检测方法，利用模型解释，并展示了他们的方法能够以高准确率有效识别对抗性ELF恶意软件。所提出的方法结合了随机森林和LIME，以识别最重要的特征，从而提高模型的可解释性和鲁棒性。Meenakshi和Maragatham[[119](#bib.bib119)]提出了一种利用Curvelet变换识别对抗性虹膜图像的防御技术，优化了图像分类准确性。所设计的方法已被证明在针对虹膜识别系统的若干现有对抗攻击中有效。Pintor等人[[120](#bib.bib120)]介绍了一种调试和改进对抗样本优化的方法，通过识别和分析攻击失败的指标来实现。所提出的方法有助于提高深度学习模型对对抗攻击的鲁棒性。
- en: 14 Conclusion
  id: totrans-266
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 14 结论
- en: Machine learning has started to gain the attention of malware detection researchers,
    notably in malware image classification and cipher cryptanalysis. However, more
    experimentation is required to understand the capabilities and limitations of
    deep learning when used to detect/classify malware. Deep learning can reduce the
    need for static and dynamic analysis and discover suspicious patterns. In the
    future, researchers may consider developing more accurate, robust, scalable, and
    efficient deep learning models for malware detection systems for various operating
    systems. Finally, multi-task learning and transfer learning can provide valuable
    results in classifying all types of malware. Furthermore, we show that the significant
    challenges of deep learning approaches that need to be considered are hyperparameters
    optimization, fine-tuning, and size and quality of datasets when features are
    overweighted or overrepresented. We also illustrate the opportunities and challenges
    of XAI in deep learning as well as future research directions in the context of
    malware detection. Finally, we presented the idea of adversarial attacks on deep
    neural networks by introducing small, carefully crafted perturbations to input
    data in order to cause misclassification or reduce model performance.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习已经开始引起恶意软件检测研究者的关注，尤其是在恶意软件图像分类和密码分析方面。然而，仍需更多实验以了解深度学习在检测/分类恶意软件时的能力和局限性。深度学习可以减少对静态和动态分析的需求，并发现可疑的模式。未来，研究人员可能会考虑开发更准确、稳健、可扩展和高效的深度学习模型，用于各种操作系统的恶意软件检测系统。最后，多任务学习和迁移学习可以在分类所有类型的恶意软件时提供有价值的结果。此外，我们展示了深度学习方法面临的重大挑战，包括超参数优化、微调以及当特征被过度加权或过度表示时数据集的大小和质量。我们还阐述了
    XAI 在深度学习中的机遇和挑战，以及在恶意软件检测背景下的未来研究方向。最后，我们介绍了对深度神经网络的对抗性攻击的想法，通过对输入数据进行小而精心设计的扰动，以引起错误分类或降低模型性能。
- en: References
  id: totrans-268
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: Damodaran et al. [2017] A. Damodaran, F. Di Troia, C. A. Visaggio, T. H. Austin,
    M. Stamp, A comparison of static, dynamic, and hybrid analysis for malware detection,
    Journal of Computer Virology and Hacking Techniques 13 (2017) 1–12.
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Damodaran et al. [2017] A. Damodaran, F. Di Troia, C. A. Visaggio, T. H. Austin,
    M. Stamp，静态、动态和混合分析在恶意软件检测中的比较，计算机病毒与黑客技术杂志 13 (2017) 1–12。
- en: 'Naik et al. [2021] N. Naik, P. Jenkins, N. Savage, L. Yang, T. Boongoen, N. Iam-On,
    Fuzzy-import hashing: A static analysis technique for malware detection, Forensic
    Science International: Digital Investigation 37 (2021) 301139.'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Naik et al. [2021] N. Naik, P. Jenkins, N. Savage, L. Yang, T. Boongoen, N.
    Iam-On，模糊导入哈希：一种用于恶意软件检测的静态分析技术，法医学国际：数字调查 37 (2021) 301139。
- en: Mohamad et al. [2021] Mohamad, J. Arif, M. F. Ab Razak, S. Awang, S. R. Tuan Mat,
    N. S. N. Ismail, A. Firdaus, A static analysis approach for android permission-based
    malware detection systems, PloS one 16 (2021) e0257968.
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mohamad et al. [2021] Mohamad, J. Arif, M. F. Ab Razak, S. Awang, S. R. Tuan
    Mat, N. S. N. Ismail, A. Firdaus，一种用于 Android 权限基础恶意软件检测系统的静态分析方法，PloS one 16
    (2021) e0257968。
- en: 'Kim et al. [2018] T. Kim, S. C. Suh, H. Kim, J. Kim, J. Kim, An encoding technique
    for cnn-based network anomaly detection, in: 2018 IEEE International Conference
    on Big Data (Big Data), 2018, pp. 2960–2965\. doi:[10.1109/BigData.2018.8622568](https:/doi.org/10.1109/BigData.2018.8622568).'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kim et al. [2018] T. Kim, S. C. Suh, H. Kim, J. Kim, J. Kim, 一种用于基于 CNN 的网络异常检测的编码技术，发表于：2018
    IEEE 国际大数据会议（Big Data），2018，第 2960–2965 页。doi：[10.1109/BigData.2018.8622568](https:/doi.org/10.1109/BigData.2018.8622568)。
- en: Bai et al. [2021] Y. Bai, Z. Xing, D. Ma, X. Li, Z. Feng, Comparative analysis
    of feature representations and machine learning methods in android family classification,
    Computer Networks 184 (2021) 107639.
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bai et al. [2021] Y. Bai, Z. Xing, D. Ma, X. Li, Z. Feng，Android 家族分类中的特征表示和机器学习方法的比较分析，计算机网络
    184 (2021) 107639。
- en: 'Chaulagain et al. [2020] D. Chaulagain, P. Poudel, P. Pathak, S. Roy, D. Caragea,
    G. Liu, X. Ou, Hybrid analysis of android apps for security vetting using deep
    learning, in: 2020 IEEE Conference on Communications and Network Security (CNS),
    2020, pp. 1–9\. doi:[10.1109/CNS48642.2020.9162341](https:/doi.org/10.1109/CNS48642.2020.9162341).'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chaulagain et al. [2020] D. Chaulagain, P. Poudel, P. Pathak, S. Roy, D. Caragea,
    G. Liu, X. Ou，基于深度学习的 Android 应用程序安全审查的混合分析，发表于：2020 IEEE 通信与网络安全会议（CNS），2020，第
    1–9 页。doi：[10.1109/CNS48642.2020.9162341](https:/doi.org/10.1109/CNS48642.2020.9162341)。
- en: Yuan et al. [2020] B. Yuan, J. Wang, D. Liu, W. Guo, P. Wu, X. Bao, Byte-level
    malware classification based on markov images and deep learning, Computers & Security
    92 (2020) 101740.
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yuan 等人 [2020] B. Yuan, J. Wang, D. Liu, W. Guo, P. Wu, X. Bao, 基于马尔可夫图像和深度学习的字节级恶意软件分类,
    计算机与安全 92 (2020) 101740。
- en: Mohammed et al. [2021] T. M. Mohammed, L. Nataraj, S. Chikkagoudar, S. Chandrasekaran,
    B. Manjunath, Malware detection using frequency domain-based image visualization
    and deep learning, arXiv preprint arXiv:2101.10578 (2021).
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mohammed 等人 [2021] T. M. Mohammed, L. Nataraj, S. Chikkagoudar, S. Chandrasekaran,
    B. Manjunath, 使用频域图像可视化和深度学习的恶意软件检测, arXiv 预印本 arXiv:2101.10578 (2021)。
- en: 'Khayam [2003] S. A. Khayam, The discrete cosine transform (dct): theory and
    application, Michigan State University 114 (2003) 1–31.'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Khayam [2003] S. A. Khayam, 离散余弦变换（dct）：理论与应用, 密歇根州立大学 114 (2003) 1–31。
- en: Euh et al. [2020] S. Euh, H. Lee, D. Kim, D. Hwang, Comparative analysis of
    low-dimensional features and tree-based ensembles for malware detection systems,
    IEEE Access 8 (2020) 76796–76808.
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Euh 等人 [2020] S. Euh, H. Lee, D. Kim, D. Hwang, 低维特征与基于树的集成方法在恶意软件检测系统中的比较分析,
    IEEE Access 8 (2020) 76796–76808。
- en: Ni et al. [2018] S. Ni, Q. Qian, R. Zhang, Malware identification using visualization
    images and deep learning, Computers & Security 77 (2018) 871–885.
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ni 等人 [2018] S. Ni, Q. Qian, R. Zhang, 使用可视化图像和深度学习的恶意软件识别, 计算机与安全 77 (2018)
    871–885。
- en: 'Charikar [2002] M. S. Charikar, Similarity estimation techniques from rounding
    algorithms, in: Proceedings of the thiry-fourth annual ACM symposium on Theory
    of computing, 2002, pp. 380–388.'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Charikar [2002] M. S. Charikar, 从四舍五入算法中估计相似性技术, 载于：第三十四届年度 ACM 计算理论研讨会论文集,
    2002, 页码 380–388。
- en: 'Nataraj et al. [2011] L. Nataraj, S. Karthikeyan, G. Jacob, B. S. Manjunath,
    Malware images: visualization and automatic classification, in: Proceedings of
    the 8th international symposium on visualization for cyber security, 2011, pp.
    1–7.'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nataraj 等人 [2011] L. Nataraj, S. Karthikeyan, G. Jacob, B. S. Manjunath, 恶意软件图像：可视化与自动分类,
    载于：第八届国际网络安全可视化研讨会论文集, 2011, 页码 1–7。
- en: Narayanan and Davuluru [2020] B. N. Narayanan, V. S. P. Davuluru, Ensemble malware
    classification system using deep neural networks, Electronics 9 (2020) 721.
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Narayanan 和 Davuluru [2020] B. N. Narayanan, V. S. P. Davuluru, 使用深度神经网络的集成恶意软件分类系统,
    电子学 9 (2020) 721。
- en: Zhu et al. [2021] J. Zhu, J. Jang-Jaccard, A. Singh, P. A. Watters, S. Camtepe,
    Task-aware meta learning-based siamese neural network for classifying obfuscated
    malware, arXiv preprint arXiv:2110.13409 (2021).
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zhu 等人 [2021] J. Zhu, J. Jang-Jaccard, A. Singh, P. A. Watters, S. Camtepe,
    基于任务感知元学习的孪生神经网络用于分类混淆恶意软件, arXiv 预印本 arXiv:2110.13409 (2021)。
- en: 'Chauhan et al. [2022] D. Chauhan, H. Singh, H. Hooda, R. Gupta, Classification
    of malware using visualization techniques, in: International Conference on Innovative
    Computing and Communications, Springer, 2022, pp. 739–750.'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chauhan 等人 [2022] D. Chauhan, H. Singh, H. Hooda, R. Gupta, 使用可视化技术分类恶意软件, 载于：国际创新计算与通信会议,
    Springer, 2022, 页码 739–750。
- en: Darem et al. [2021] A. Darem, J. Abawajy, A. Makkar, A. Alhashmi, S. Alanazi,
    Visualization and deep-learning-based malware variant detection using opcode-level
    features, Future Generation Computer Systems 125 (2021) 314–323.
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Darem 等人 [2021] A. Darem, J. Abawajy, A. Makkar, A. Alhashmi, S. Alanazi, 使用操作码级特征的可视化和深度学习恶意软件变体检测,
    未来一代计算机系统 125 (2021) 314–323。
- en: Asam et al. [2021] M. Asam, S. J. Hussain, M. Mohatram, S. H. Khan, T. Jamal,
    A. Zafar, A. Khan, M. U. Ali, U. Zahoora, Detection of exceptional malware variants
    using deep boosted feature spaces and machine learning, Applied Sciences 11 (2021)
    10464.
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Asam 等人 [2021] M. Asam, S. J. Hussain, M. Mohatram, S. H. Khan, T. Jamal, A.
    Zafar, A. Khan, M. U. Ali, U. Zahoora, 使用深度增强特征空间和机器学习检测异常恶意软件变体, 应用科学 11 (2021)
    10464。
- en: Xiao et al. [2021] M. Xiao, C. Guo, G. Shen, Y. Cui, C. Jiang, Image-based malware
    classification using section distribution information, Computers & Security 110
    (2021) 102420.
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Xiao 等人 [2021] M. Xiao, C. Guo, G. Shen, Y. Cui, C. Jiang, 基于图像的恶意软件分类使用节分布信息,
    计算机与安全 110 (2021) 102420。
- en: Çayır et al. [2021] A. Çayır, U. Ünal, H. Dağ, Random capsnet forest model for
    imbalanced malware type classification task, Computers & Security 102 (2021) 102133.
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Çayır 等人 [2021] A. Çayır, U. Ünal, H. Dağ, 用于不平衡恶意软件类型分类任务的随机 CapsNet 森林模型,
    计算机与安全 102 (2021) 102133。
- en: 'Go et al. [2020] J. H. Go, T. Jan, M. Mohanty, O. P. Patel, D. Puthal, M. Prasad,
    Visualization approach for malware classification with resnext, in: 2020 IEEE
    Congress on Evolutionary Computation (CEC), 2020, pp. 1–7\. doi:[10.1109/CEC48606.2020.9185490](https:/doi.org/10.1109/CEC48606.2020.9185490).'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Go 等 [2020] J. H. Go, T. Jan, M. Mohanty, O. P. Patel, D. Puthal, M. Prasad,
    使用 ResNeXt 进行恶意软件分类的可视化方法, 见: 2020 IEEE 进化计算大会 (CEC), 2020, 第 1–7 页。 doi:[10.1109/CEC48606.2020.9185490](https:/doi.org/10.1109/CEC48606.2020.9185490)。'
- en: Bensaoud et al. [2020] A. Bensaoud, N. Abudawaood, J. Kalita, Classifying malware
    images with convolutional neural network models, International Journal of Network
    Security 22 (2020) 1022–1031.
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bensaoud 等 [2020] A. Bensaoud, N. Abudawaood, J. Kalita, 使用卷积神经网络模型对恶意软件图像进行分类,
    国际网络安全期刊 22 (2020) 1022–1031。
- en: El-Shafai et al. [2021] W. El-Shafai, I. Almomani, A. AlKhayer, Visualized malware
    multi-classification framework using fine-tuned cnn-based transfer learning models,
    Applied Sciences 11 (2021).
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: El-Shafai 等 [2021] W. El-Shafai, I. Almomani, A. AlKhayer, 基于精调 CNN 的迁移学习模型的可视化恶意软件多分类框架,
    应用科学 11 (2021)。
- en: Hemalatha et al. [2021] J. Hemalatha, S. A. Roseline, S. Geetha, S. Kadry, R. Damaševičius,
    An efficient densenet-based deep learning model for malware detection, Entropy
    23 (2021) 344.
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hemalatha 等 [2021] J. Hemalatha, S. A. Roseline, S. Geetha, S. Kadry, R. Damaševičius,
    一种高效的基于 DenseNet 的深度学习恶意软件检测模型, 熵 23 (2021) 344。
- en: 'Lo et al. [2019] W. W. Lo, X. Yang, Y. Wang, An xception convolutional neural
    network for malware classification with transfer learning, in: 2019 10th IFIP
    International Conference on New Technologies, Mobility and Security (NTMS), 2019,
    pp. 1–5\. doi:[10.1109/NTMS.2019.8763852](https:/doi.org/10.1109/NTMS.2019.8763852).'
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Lo 等 [2019] W. W. Lo, X. Yang, Y. Wang, 一种用于恶意软件分类的 Xception 卷积神经网络与迁移学习, 见:
    2019 第十届 IFIP 国际新技术、移动性与安全会议 (NTMS), 2019, 第 1–5 页。 doi:[10.1109/NTMS.2019.8763852](https:/doi.org/10.1109/NTMS.2019.8763852)。'
- en: 'Barath et al. [2016] N. Barath, D. Ouboti, M. Temesguen, Pattern recognition
    algorithms for malware classification, in: proceeding of 2016 IEEE Conference
    of Aerospace and Electronics, 2016, pp. 338–342.'
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Barath 等 [2016] N. Barath, D. Ouboti, M. Temesguen, 用于恶意软件分类的模式识别算法, 见: 2016
    IEEE 航空航天与电子会议记录, 2016, 第 338–342 页。'
- en: 'Oliva and Torralba [2001] A. Oliva, A. Torralba, Modeling the shape of the
    scene: A holistic representation of the spatial envelope, International journal
    of computer vision 42 (2001) 145–175.'
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Oliva 和 Torralba [2001] A. Oliva, A. Torralba, 场景形状建模: 空间包络的整体表示, 国际计算机视觉期刊
    42 (2001) 145–175。'
- en: Hu [1962] M.-K. Hu, Visual pattern recognition by moment invariants, IRE transactions
    on information theory 8 (1962) 179–187.
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hu [1962] M.-K. Hu, 通过矩不变量进行视觉模式识别, IRE 信息理论交易 8 (1962) 179–187。
- en: Swain and Ballard [1991] M. J. Swain, D. H. Ballard, Color indexing, International
    journal of computer vision 7 (1991) 11–32.
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Swain 和 Ballard [1991] M. J. Swain, D. H. Ballard, 颜色索引, 国际计算机视觉期刊 7 (1991)
    11–32。
- en: Lin et al. [2004] W.-C. Lin, J. Hays, C. Wu, V. Kwatra, Y. Liu, A comparison
    study of four texture synthesis algorithms on regular and near-regular textures,
    Tech. Rep. (2004).
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lin 等 [2004] W.-C. Lin, J. Hays, C. Wu, V. Kwatra, Y. Liu, 四种纹理合成算法在规则和近规则纹理上的比较研究,
    技术报告 (2004)。
- en: Kancherla et al. [2016] K. Kancherla, J. Donahue, S. Mukkamala, Packer identification
    using byte plot and markov plot, Journal of Computer Virology and Hacking Techniques
    12 (2016) 101–111.
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kancherla 等 [2016] K. Kancherla, J. Donahue, S. Mukkamala, 使用字节图和马尔可夫图进行包装器识别,
    计算机病毒学与黑客技术杂志 12 (2016) 101–111。
- en: 'Herault and Jutten [1986] J. Herault, C. Jutten, Space or time adaptive signal
    processing by neural network models, in: AIP conference proceedings, American
    Institute of Physics, 1986, pp. 206–211.'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Herault 和 Jutten [1986] J. Herault, C. Jutten, 通过神经网络模型进行空间或时间自适应信号处理, 见: AIP
    会议记录, 美国物理学会, 1986, 第 206–211 页。'
- en: Fan et al. [2011] Z. Fan, Y. Xu, D. Zhang, Local linear discriminant analysis
    framework using sample neighbors, IEEE Transactions on Neural Networks 22 (2011)
    1119–1132.
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fan 等 [2011] Z. Fan, Y. Xu, D. Zhang, 使用样本邻域的局部线性判别分析框架, IEEE 神经网络交易 22 (2011)
    1119–1132。
- en: 'Rublee et al. [2011] E. Rublee, V. Rabaud, K. Konolige, G. Bradski, Orb: An
    efficient alternative to sift or surf, in: 2011 International Conference on Computer
    Vision, 2011, pp. 2564–2571\. doi:[10.1109/ICCV.2011.6126544](https:/doi.org/10.1109/ICCV.2011.6126544).'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Rublee 等 [2011] E. Rublee, V. Rabaud, K. Konolige, G. Bradski, Orb: 一种高效的 SIFT
    或 SURF 替代方案, 见: 2011 国际计算机视觉会议, 2011, 第 2564–2571 页。 doi:[10.1109/ICCV.2011.6126544](https:/doi.org/10.1109/ICCV.2011.6126544)。'
- en: 'Bay et al. [2006] H. Bay, T. Tuytelaars, L. Van Gool, Surf: Speeded up robust
    features, in: European conference on computer vision, Springer, 2006, pp. 404–417.'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bay 等人 [2006] H. Bay, T. Tuytelaars, L. Van Gool, Surf：加速的鲁棒特征，收录于：欧洲计算机视觉会议，Springer，2006，第404–417页。
- en: 'Lowe [1999] D. G. Lowe, Object recognition from local scale-invariant features,
    in: Proceedings of the seventh IEEE international conference on computer vision,
    volume 2, Ieee, 1999, pp. 1150–1157.'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lowe [1999] D. G. Lowe, 从局部尺度不变特征进行对象识别，收录于：第七届IEEE国际计算机视觉会议论文集，第2卷，IEEE，1999，第1150–1157页。
- en: Ojala et al. [1996] T. Ojala, M. Pietikäinen, D. Harwood, A comparative study
    of texture measures with classification based on featured distributions, Pattern
    recognition 29 (1996) 51–59.
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ojala 等人 [1996] T. Ojala, M. Pietikäinen, D. Harwood, 基于特征分布的分类的纹理度量比较研究，模式识别
    29（1996）51–59。
- en: 'Alcantarilla et al. [2012] P. F. Alcantarilla, A. Bartoli, A. J. Davison, Kaze
    features, in: European conference on computer vision, Springer, 2012, pp. 214–227.'
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alcantarilla 等人 [2012] P. F. Alcantarilla, A. Bartoli, A. J. Davison, Kaze 特征，收录于：欧洲计算机视觉会议，Springer，2012，第214–227页。
- en: 'Azad et al. [2022] M. A. Azad, F. Riaz, A. Aftab, S. K. J. Rizvi, J. Arshad,
    H. F. Atlam, Deepsel: A novel feature selection for early identification of malware
    in mobile applications, Future Generation Computer Systems 129 (2022) 54–63.'
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azad 等人 [2022] M. A. Azad, F. Riaz, A. Aftab, S. K. J. Rizvi, J. Arshad, H.
    F. Atlam, Deepsel：一种用于移动应用程序中早期识别恶意软件的新型特征选择，未来一代计算机系统 129（2022）54–63。
- en: 'Tobiyama et al. [2016] S. Tobiyama, Y. Yamaguchi, H. Shimada, T. Ikuse, T. Yagi,
    Malware detection with deep neural network using process behavior, in: 2016 IEEE
    40th Annual Computer Software and Applications Conference (COMPSAC), volume 2,
    2016, pp. 577–582\. doi:[10.1109/COMPSAC.2016.151](https:/doi.org/10.1109/COMPSAC.2016.151).'
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tobiyama 等人 [2016] S. Tobiyama, Y. Yamaguchi, H. Shimada, T. Ikuse, T. Yagi,
    使用过程行为的深度神经网络恶意软件检测，收录于：2016 IEEE第40届年度计算机软件与应用大会（COMPSAC），第2卷，2016，第577–582页。doi：[10.1109/COMPSAC.2016.151](https:/doi.org/10.1109/COMPSAC.2016.151)。
- en: Ye and Dai [2021] R. Ye, Q. Dai, Implementing transfer learning across different
    datasets for time series forecasting, Pattern Recognition 109 (2021) 107617.
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ye 和 Dai [2021] R. Ye, Q. Dai, 在不同数据集之间实施迁移学习进行时间序列预测，模式识别 109（2021）107617。
- en: Russakovsky et al. [2015] O. Russakovsky, J. Deng, H. Su, J. Krause, S. Satheesh,
    S. Ma, Z. Huang, A. Karpathy, A. Khosla, M. Bernstein, et al., Imagenet large
    scale visual recognition challenge, International journal of computer vision 115
    (2015) 211–252.
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Russakovsky 等人 [2015] O. Russakovsky, J. Deng, H. Su, J. Krause, S. Satheesh,
    S. Ma, Z. Huang, A. Karpathy, A. Khosla, M. Bernstein 等，ImageNet 大规模视觉识别挑战，国际计算机视觉杂志
    115（2015）211–252。
- en: 'Vasan et al. [2020] D. Vasan, M. Alazab, S. Wassan, H. Naeem, B. Safaei, Q. Zheng,
    Imcfn: Image-based malware classification using fine-tuned convolutional neural
    network architecture, Computer Networks 171 (2020) 107138.'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vasan 等人 [2020] D. Vasan, M. Alazab, S. Wassan, H. Naeem, B. Safaei, Q. Zheng,
    Imcfn：基于图像的恶意软件分类，使用微调的卷积神经网络架构，计算机网络 171（2020）107138。
- en: 'Rezende et al. [2017] E. Rezende, G. Ruppert, T. Carvalho, F. Ramos, P. De Geus,
    Malicious software classification using transfer learning of resnet-50 deep neural
    network, in: 2017 16th IEEE International Conference on Machine Learning and Applications
    (ICMLA), IEEE, 2017, pp. 1011–1014.'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rezende 等人 [2017] E. Rezende, G. Ruppert, T. Carvalho, F. Ramos, P. De Geus,
    使用 ResNet-50 深度神经网络的迁移学习进行恶意软件分类，收录于：2017年第16届IEEE国际机器学习与应用会议（ICMLA），IEEE，2017，第1011–1014页。
- en: Bhodia et al. [2019] N. Bhodia, P. Prajapati, F. Di Troia, M. Stamp, Transfer
    learning for image-based malware classification, arXiv preprint arXiv:1903.11551
    (2019).
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bhodia 等人 [2019] N. Bhodia, P. Prajapati, F. Di Troia, M. Stamp, 基于图像的恶意软件分类的迁移学习，arXiv
    预印本 arXiv:1903.11551（2019）。
- en: 'Qiao et al. [2020] Y. Qiao, B. Zhang, W. Zhang, Malware classification method
    based on word vector of bytes and multilayer perception, in: ICC 2020-2020 IEEE
    International Conference on Communications (ICC), IEEE, 2020, pp. 1–6.'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Qiao 等人 [2020] Y. Qiao, B. Zhang, W. Zhang, 基于字节词向量和多层感知器的恶意软件分类方法，收录于：ICC 2020-2020
    IEEE国际通信会议（ICC），IEEE，2020，第1–6页。
- en: Simonyan and Zisserman [2014] K. Simonyan, A. Zisserman, Very deep convolutional
    networks for large-scale image recognition, arXiv preprint arXiv:1409.1556 (2014).
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Simonyan 和 Zisserman [2014] K. Simonyan, A. Zisserman, 用于大规模图像识别的非常深的卷积网络，arXiv
    预印本 arXiv:1409.1556（2014）。
- en: Ketkar and Santana [2017] N. Ketkar, E. Santana, Deep learning with Python,
    volume 1, Springer, 2017.
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ketkar 和 Santana [2017] N. Ketkar, E. Santana, 使用 Python 进行深度学习，第1卷，Springer，2017。
- en: 'Abadi et al. [2016] M. Abadi, P. Barham, J. Chen, Z. Chen, A. Davis, J. Dean,
    M. Devin, S. Ghemawat, G. Irving, M. Isard, et al., Tensorflow: A system for large-scale
    machine learning, in: 12th $\displaystyle\{$USENIX$\displaystyle\}$ symposium
    on operating systems design and implementation ($\displaystyle\{$OSDI$\displaystyle\}$
    16), 2016, pp. 265–283.'
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Abadi 等 [2016] M. Abadi, P. Barham, J. Chen, Z. Chen, A. Davis, J. Dean, M.
    Devin, S. Ghemawat, G. Irving, M. Isard, 等，Tensorflow: 大规模机器学习系统，发表于：第 12 届 $\displaystyle\{$USENIX$\displaystyle\}$
    操作系统设计与实现研讨会（$\displaystyle\{$OSDI$\displaystyle\}$ 16），2016，页 265–283。'
- en: 'Sudhakar and Kumar [2021] Sudhakar, S. Kumar, Mcft-cnn: Malware classification
    with fine-tune convolution neural networks using traditional and transfer learning
    in internet of things, Future Generation Computer Systems 125 (2021) 334–351.'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Sudhakar 和 Kumar [2021] Sudhakar, S. Kumar, Mcft-cnn: 使用传统和迁移学习的细调卷积神经网络进行恶意软件分类，Future
    Generation Computer Systems 125 (2021) 334–351。'
- en: 'He et al. [2016] K. He, X. Zhang, S. Ren, J. Sun, Deep residual learning for
    image recognition, in: Proceedings of the IEEE conference on computer vision and
    pattern recognition, 2016, pp. 770–778.'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: He 等 [2016] K. He, X. Zhang, S. Ren, J. Sun, 深度残差学习用于图像识别，发表于：IEEE计算机视觉与模式识别会议论文集，2016，页
    770–778。
- en: 'Go et al. [2020] J. H. Go, T. Jan, M. Mohanty, O. P. Patel, D. Puthal, M. Prasad,
    Visualization approach for malware classification with resnext, in: 2020 IEEE
    Congress on Evolutionary Computation (CEC), 2020, pp. 1–7\. doi:[10.1109/CEC48606.2020.9185490](https:/doi.org/10.1109/CEC48606.2020.9185490).'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Go 等 [2020] J. H. Go, T. Jan, M. Mohanty, O. P. Patel, D. Puthal, M. Prasad,
    基于 resnext 的恶意软件分类可视化方法，发表于：2020 IEEE 进化计算大会 (CEC)，2020，页 1–7\. doi:[10.1109/CEC48606.2020.9185490](https:/doi.org/10.1109/CEC48606.2020.9185490)。
- en: 'Von Luxburg et al. [2017] U. Von Luxburg, I. Guyon, S. Bengio, H. Wallach,
    R. Fergus, S. Vishwanathan, R. Garnett, Advances in neural information processing
    systems 30, in: 31st annual conference on neural information processing systems
    (NIPS 2017), Long Beach, California, USA, 2017, pp. 4–9.'
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Von Luxburg 等 [2017] U. Von Luxburg, I. Guyon, S. Bengio, H. Wallach, R. Fergus,
    S. Vishwanathan, R. Garnett, 神经信息处理系统 30，发表于：第 31 屆神经信息处理系统年会（NIPS 2017），加利福尼亚州洛杉矶，2017，页
    4–9。
- en: 'Szegedy et al. [2016] C. Szegedy, V. Vanhoucke, S. Ioffe, J. Shlens, Z. Wojna,
    Rethinking the inception architecture for computer vision, in: Proceedings of
    the IEEE conference on computer vision and pattern recognition, 2016, pp. 2818–2826.'
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Szegedy 等 [2016] C. Szegedy, V. Vanhoucke, S. Ioffe, J. Shlens, Z. Wojna, 重新思考计算机视觉的
    inception 架构，发表于：IEEE计算机视觉与模式识别会议论文集，2016，页 2818–2826。
- en: Khan et al. [2019] R. U. Khan, X. Zhang, R. Kumar, Analysis of resnet and googlenet
    models for malware detection, Journal of Computer Virology and Hacking Techniques
    15 (2019) 29–37.
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Khan 等 [2019] R. U. Khan, X. Zhang, R. Kumar, 对 resnet 和 googlenet 模型进行恶意软件检测分析，Journal
    of Computer Virology and Hacking Techniques 15 (2019) 29–37。
- en: 'Szegedy et al. [2015] C. Szegedy, W. Liu, Y. Jia, P. Sermanet, S. Reed, D. Anguelov,
    D. Erhan, V. Vanhoucke, A. Rabinovich, Going deeper with convolutions, in: Proceedings
    of the IEEE conference on computer vision and pattern recognition, 2015, pp. 1–9.'
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Szegedy 等 [2015] C. Szegedy, W. Liu, Y. Jia, P. Sermanet, S. Reed, D. Anguelov,
    D. Erhan, V. Vanhoucke, A. Rabinovich, 通过卷积更深层次，发表于：IEEE计算机视觉与模式识别会议论文集，2015，页
    1–9。
- en: 'Tan and Le [2019] M. Tan, Q. Le, Efficientnet: Rethinking model scaling for
    convolutional neural networks, in: International Conference on Machine Learning,
    PMLR, 2019, pp. 6105–6114.'
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Tan 和 Le [2019] M. Tan, Q. Le, Efficientnet: 重新思考卷积神经网络的模型缩放，发表于：国际机器学习会议，PMLR，2019，页
    6105–6114。'
- en: Szegedy et al. [2017] C. Szegedy, S. Ioffe, V. Vanhoucke, A. Alemi, Inception-v4,
    inception-resnet and the impact of residual connections on learning, Proceedings
    of the AAAI Conference on Artificial Intelligence 31 (2017).
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Szegedy 等 [2017] C. Szegedy, S. Ioffe, V. Vanhoucke, A. Alemi, Inception-v4,
    inception-resnet 及残差连接对学习的影响，AAAI 人工智能会议论文集 31 (2017)。
- en: 'Chollet [2017] F. Chollet, Xception: Deep learning with depthwise separable
    convolutions, in: Proceedings of the IEEE conference on computer vision and pattern
    recognition, 2017, pp. 1251–1258.'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Chollet [2017] F. Chollet, Xception: 使用深度可分离卷积的深度学习，发表于：IEEE计算机视觉与模式识别会议论文集，2017，页
    1251–1258。'
- en: Sabour et al. [2017] S. Sabour, N. Frosst, G. E. Hinton, Dynamic routing between
    capsules, arXiv preprint arXiv:1710.09829 (2017).
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sabour 等 [2017] S. Sabour, N. Frosst, G. E. Hinton, 胶囊之间的动态路由，arXiv 预印本 arXiv:1710.09829
    (2017)。
- en: 'Gibert et al. [2020] D. Gibert, C. Mateu, J. Planes, The rise of machine learning
    for detection and classification of malware: Research developments, trends and
    challenges, Journal of Network and Computer Applications 153 (2020) 102526.'
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gibert 等人 [2020] D. Gibert, C. Mateu, J. Planes, 机器学习在恶意软件检测与分类中的崛起：研究进展、趋势与挑战，《网络与计算机应用杂志》153（2020年）102526。
- en: 'Kocaman et al. [2021] V. Kocaman, O. M. Shir, T. Bäck, Improving model accuracy
    for imbalanced image classification tasks by adding a final batch normalization
    layer: An empirical study, in: 2020 25th International Conference on Pattern Recognition
    (ICPR), 2021, pp. 10404–10411\. doi:[10.1109/ICPR48806.2021.9412907](https:/doi.org/10.1109/ICPR48806.2021.9412907).'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kocaman 等人 [2021] V. Kocaman, O. M. Shir, T. Bäck, 通过添加最终批量归一化层提高不平衡图像分类任务的模型准确性：一项实证研究，见于：2020年第25届国际模式识别大会（ICPR），2021年，第10404–10411页。doi：[10.1109/ICPR48806.2021.9412907](https:/doi.org/10.1109/ICPR48806.2021.9412907)。
- en: Alaraimi et al. [2021] S. Alaraimi, K. E. Okedu, H. Tianfield, R. Holden, O. Uthmani,
    Transfer learning networks with skip connections for classification of brain tumors,
    International Journal of Imaging Systems and Technology (2021).
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alaraimi 等人 [2021] S. Alaraimi, K. E. Okedu, H. Tianfield, R. Holden, O. Uthmani,
    带跳跃连接的迁移学习网络用于脑肿瘤分类，《国际成像系统与技术杂志》（2021年）。
- en: 'Eum et al. [2018] S. Eum, H. Lee, H. Kwon, Going deeper with cnn in malicious
    crowd event classification, in: Signal Processing, Sensor/Information Fusion,
    and Target Recognition XXVII, volume 10646, International Society for Optics and
    Photonics, 2018, p. 1064616.'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eum 等人 [2018] S. Eum, H. Lee, H. Kwon, 在恶意人群事件分类中深入探讨 CNN，见于：信号处理、传感器/信息融合与目标识别
    XXVII，第10646卷，国际光学与光子学学会，2018年，第1064616页。
- en: Jurafsky and Martin [2021] D. Jurafsky, J. H. Martin, Speech and Language Processing,
    3rd ed., Prentice Hall, 2021.
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jurafsky 和 Martin [2021] D. Jurafsky, J. H. Martin, 《语音和语言处理》，第3版，普伦蒂斯霍尔，2021年。
- en: Mikolov et al. [2013] T. Mikolov, K. Chen, G. Corrado, J. Dean, Efficient estimation
    of word representations in vector space, arXiv preprint arXiv:1301.3781 (2013).
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mikolov 等人 [2013] T. Mikolov, K. Chen, G. Corrado, J. Dean, 在向量空间中高效估计词表示，arXiv
    预印本 arXiv:1301.3781（2013）。
- en: Pagliardini et al. [2017] M. Pagliardini, P. Gupta, M. Jaggi, Unsupervised learning
    of sentence embeddings using compositional n-gram features, arXiv preprint arXiv:1703.02507
    (2017).
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pagliardini 等人 [2017] M. Pagliardini, P. Gupta, M. Jaggi, 使用组合 n-gram 特征的无监督句子嵌入学习，arXiv
    预印本 arXiv:1703.02507（2017）。
- en: Bensaoud and Kalita [2024] A. Bensaoud, J. Kalita, Cnn-lstm and transfer learning
    models for malware classification based on opcodes and api calls, Knowledge-Based
    Systems (2024) 111543.
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bensaoud 和 Kalita [2024] A. Bensaoud, J. Kalita, 基于操作码和 API 调用的恶意软件分类的 CNN-LSTM
    和迁移学习模型，《知识基础系统》（2024年）111543。
- en: Mimura and Ito [2021] M. Mimura, R. Ito, Applying nlp techniques to malware
    detection in a practical environment, International Journal of Information Security
    (2021) 1–13.
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mimura 和 Ito [2021] M. Mimura, R. Ito, 将 NLP 技术应用于实际环境中的恶意软件检测，《信息安全国际杂志》（2021年）1–13。
- en: Luong et al. [2015] M.-T. Luong, H. Pham, C. D. Manning, Effective approaches
    to attention-based neural machine translation, arXiv preprint arXiv:1508.04025
    (2015).
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Luong 等人 [2015] M.-T. Luong, H. Pham, C. D. Manning, 基于注意力的神经机器翻译的有效方法，arXiv
    预印本 arXiv:1508.04025（2015）。
- en: Lu et al. [2021] Z. Lu, X. Li, Y. Liu, C. Zhou, J. Cui, B. Wang, M. Zhang, J. Su,
    Exploring multi-stage information interactions for multi-source neural machine
    translation, IEEE/ACM Transactions on Audio, Speech, and Language Processing (2021)
    1–1.
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lu 等人 [2021] Z. Lu, X. Li, Y. Liu, C. Zhou, J. Cui, B. Wang, M. Zhang, J. Su,
    探索多阶段信息交互用于多源神经机器翻译，《IEEE/ACM音频、语音和语言处理汇刊》（2021年）1–1。
- en: 'Gao et al. [2021] Y. Gao, H. Gong, X. Ding, B. Guo, Image recognition based
    on mixed attention mechanism in smart home appliances, in: 2021 IEEE 5th Advanced
    Information Technology, Electronic and Automation Control Conference (IAEAC),
    volume 5, 2021, pp. 1501–1505\. doi:[10.1109/IAEAC50856.2021.9391092](https:/doi.org/10.1109/IAEAC50856.2021.9391092).'
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gao 等人 [2021] Y. Gao, H. Gong, X. Ding, B. Guo, 基于混合注意机制的图像识别在智能家居设备中的应用，见于：2021
    IEEE 第五届先进信息技术、电子与自动化控制会议（IAEAC），第5卷，2021年，第1501–1505页。doi：[10.1109/IAEAC50856.2021.9391092](https:/doi.org/10.1109/IAEAC50856.2021.9391092)。
- en: 'AlMazrouei et al. [2021] R. Z. AlMazrouei, J. Nelci, S. A. Salloum, K. Shaalan,
    Feasibility of using attention mechanism in abstractive summarization, in: International
    Conference on Emerging Technologies and Intelligent Systems, Springer, 2021, pp.
    13–20.'
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AlMazrouei 等人 [2021] R. Z. AlMazrouei, J. Nelci, S. A. Salloum, K. Shaalan,
    使用注意机制进行抽象总结的可行性，见于：新兴技术与智能系统国际会议，Springer，2021年，第13–20页。
- en: Niu et al. [2021] Z. Niu, G. Zhong, H. Yu, A review on the attention mechanism
    of deep learning, Neurocomputing 452 (2021) 48–62.
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Niu et al. [2021] Z. Niu, G. Zhong, H. Yu, 深度学习中的注意力机制综述，《神经计算》 452 (2021) 48–62。
- en: 'Ren et al. [2021] S. Ren, L. Zhou, S. Liu, F. Wei, M. Zhou, S. Ma, Semface:
    Pre-training encoder and decoder with a semantic interface for neural machine
    translation, in: Proceedings of the 59th Annual Meeting of the Association for
    Computational Linguistics and the 11th International Joint Conference on Natural
    Language Processing (Volume 1: Long Papers), 2021, pp. 4518–4527.'
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ren et al. [2021] S. Ren, L. Zhou, S. Liu, F. Wei, M. Zhou, S. Ma, Semface：通过语义接口预训练编码器和解码器用于神经机器翻译，见：第59届计算语言学协会年会暨第11届国际自然语言处理联合会议（第1卷：长篇论文）会议论文，2021年，页码
    4518–4527。
- en: Bahdanau et al. [2014] D. Bahdanau, K. Cho, Y. Bengio, Neural machine translation
    by jointly learning to align and translate, arXiv preprint arXiv:1409.0473 (2014).
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bahdanau et al. [2014] D. Bahdanau, K. Cho, Y. Bengio, 通过联合学习对齐和翻译的神经机器翻译，arXiv
    预印本 arXiv:1409.0473 (2014)。
- en: 'Vaswani et al. [2017] A. Vaswani, N. Shazeer, N. Parmar, J. Uszkoreit, L. Jones,
    A. N. Gomez, Ł. Kaiser, I. Polosukhin, Attention is all you need, in: Advances
    in neural information processing systems, 2017, pp. 5998–6008.'
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vaswani et al. [2017] A. Vaswani, N. Shazeer, N. Parmar, J. Uszkoreit, L. Jones,
    A. N. Gomez, Ł. Kaiser, I. Polosukhin, 注意力机制就是你所需的一切，见：神经信息处理系统进展，2017年，页码 5998–6008。
- en: 'Or-Meir et al. [2021] O. Or-Meir, A. Cohen, Y. Elovici, L. Rokach, N. Nissim,
    Pay attention: Improving classification of pe malware using attention mechanisms
    based on system call analysis, in: 2021 International Joint Conference on Neural
    Networks (IJCNN), 2021, pp. 1–8\. doi:[10.1109/IJCNN52387.2021.9533481](https:/doi.org/10.1109/IJCNN52387.2021.9533481).'
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Or-Meir et al. [2021] O. Or-Meir, A. Cohen, Y. Elovici, L. Rokach, N. Nissim,
    注意：通过基于系统调用分析的注意力机制改进对 PE 恶意软件的分类，见：2021 国际神经网络联合会议 (IJCNN)，2021年，页码 1–8。doi:[10.1109/IJCNN52387.2021.9533481](https:/doi.org/10.1109/IJCNN52387.2021.9533481)。
- en: Yakura et al. [2019] H. Yakura, S. Shinozaki, R. Nishimura, Y. Oyama, J. Sakuma,
    Neural malware analysis with attention mechanism, Computers & Security 87 (2019)
    101592.
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yakura et al. [2019] H. Yakura, S. Shinozaki, R. Nishimura, Y. Oyama, J. Sakuma,
    使用注意力机制进行神经恶意软件分析，《计算机与安全》 87 (2019) 101592。
- en: Mimura and Ohminami [2020] M. Mimura, T. Ohminami, Using lsi to detect unknown
    malicious vba macros, Journal of Information Processing 28 (2020) 493–501.
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mimura and Ohminami [2020] M. Mimura, T. Ohminami, 使用 LSI 检测未知恶意 VBA 宏，《信息处理杂志》
    28 (2020) 493–501。
- en: Ma et al. [2019] X. Ma, S. Guo, H. Li, Z. Pan, J. Qiu, Y. Ding, F. Chen, How
    to make attention mechanisms more practical in malware classification, IEEE Access
    7 (2019) 155270–155280.
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ma et al. [2019] X. Ma, S. Guo, H. Li, Z. Pan, J. Qiu, Y. Ding, F. Chen, 如何使注意力机制在恶意软件分类中更具实用性，《IEEE
    Access》 7 (2019) 155270–155280。
- en: 'Girinoto et al. [2020] Girinoto, H. Setiawan, P. A. W. Putro, Y. R. Pramadi,
    Comparison of lstm architecture for malware classification, in: 2020 International
    Conference on Informatics, Multimedia, Cyber and Information System (ICIMCIS),
    2020, pp. 93–97\. doi:[10.1109/ICIMCIS51567.2020.9354301](https:/doi.org/10.1109/ICIMCIS51567.2020.9354301).'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Girinoto et al. [2020] Girinoto, H. Setiawan, P. A. W. Putro, Y. R. Pramadi,
    对恶意软件分类的 LSTM 架构比较，见：2020 国际信息学、多媒体、网络与信息系统会议 (ICIMCIS)，2020年，页码 93–97。doi:[10.1109/ICIMCIS51567.2020.9354301](https:/doi.org/10.1109/ICIMCIS51567.2020.9354301)。
- en: 'Agrawal et al. [2019] R. Agrawal, J. W. Stokes, K. Selvaraj, M. Marinescu,
    Attention in recurrent neural networks for ransomware detection, in: ICASSP 2019
    - 2019 IEEE International Conference on Acoustics, Speech and Signal Processing
    (ICASSP), 2019, pp. 3222–3226\. doi:[10.1109/ICASSP.2019.8682899](https:/doi.org/10.1109/ICASSP.2019.8682899).'
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Agrawal et al. [2019] R. Agrawal, J. W. Stokes, K. Selvaraj, M. Marinescu, 用于勒索软件检测的递归神经网络中的注意力机制，见：ICASSP
    2019 - 2019 IEEE 国际声学、语音与信号处理会议 (ICASSP)，2019年，页码 3222–3226。doi:[10.1109/ICASSP.2019.8682899](https:/doi.org/10.1109/ICASSP.2019.8682899)。
- en: 'Kim et al. [2022] J. Kim, Y. Ban, E. Ko, H. Cho, J. H. Yi, Mapas: a practical
    deep learning-based android malware detection system, International Journal of
    Information Security (2022) 1–14.'
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Kim et al. [2022] J. Kim, Y. Ban, E. Ko, H. Cho, J. H. Yi, Mapas: 一个基于深度学习的实用安卓恶意软件检测系统，《国际信息安全杂志》
    (2022) 1–14。'
- en: 'Onwuzurike et al. [2019] L. Onwuzurike, E. Mariconti, P. Andriotis, E. D. Cristofaro,
    G. Ross, G. Stringhini, Mamadroid: Detecting android malware by building markov
    chains of behavioral models (extended version), ACM Transactions on Privacy and
    Security (TOPS) 22 (2019) 1–34.'
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Onwuzurike et al. [2019] L. Onwuzurike, E. Mariconti, P. Andriotis, E. D. Cristofaro,
    G. Ross, G. Stringhini, Mamadroid：通过构建行为模型的马尔科夫链检测安卓恶意软件（扩展版），《ACM 隐私与安全期刊》 (TOPS)
    22 (2019) 1–34。
- en: Kim and Cho [2022] J.-Y. Kim, S.-B. Cho, Obfuscated malware detection using
    deep generative model based on global/local features, Computers & Security 112
    (2022) 102501.
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kim 和 Cho [2022] J.-Y. Kim, S.-B. Cho, 基于全球/局部特征的深度生成模型进行模糊恶意软件检测，《计算机与安全》112
    (2022) 102501。
- en: 'Olani et al. [2022] G. Olani, C.-F. Wu, Y.-H. Chang, W.-K. Shih, Deepware:
    Imaging performance counters with deep learning to detect ransomware, IEEE Transactions
    on Computers (2022) 1–1.'
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Olani 等 [2022] G. Olani, C.-F. Wu, Y.-H. Chang, W.-K. Shih, Deepware：通过深度学习成像性能计数器来检测勒索软件，《IEEE
    计算机交易》 (2022) 1–1。
- en: Lian et al. [2022] W. Lian, G. Nie, Y. Kang, B. Jia, Y. Zhang, Cryptomining
    malware detection based on edge computing-oriented multi-modal features deep learning,
    China Communications 19 (2022) 174–185.
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lian 等 [2022] W. Lian, G. Nie, Y. Kang, B. Jia, Y. Zhang, 基于边缘计算面向多模态特征深度学习的加密挖矿恶意软件检测，《中国通信》19
    (2022) 174–185。
- en: Bensaoud and Kalita [2022] A. Bensaoud, J. Kalita, Deep multi-task learning
    for malware image classification, Journal of Information Security and Applications
    64 (2022) 103057.
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bensaoud 和 Kalita [2022] A. Bensaoud, J. Kalita, 深度多任务学习用于恶意软件图像分类，《信息安全与应用杂志》64
    (2022) 103057。
- en: Heron [2009] S. Heron, Advanced encryption standard (aes), Network Security
    2009 (2009) 8–12.
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Heron [2009] S. Heron, 高级加密标准 (AES)，《网络安全》2009 (2009) 8–12。
- en: Sasi and Sivanandam [2015] S. B. Sasi, N. Sivanandam, A survey on cryptography
    using optimization algorithms in wsns, Indian Journal of Science and Technology
    8 (2015) 216.
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sasi 和 Sivanandam [2015] S. B. Sasi, N. Sivanandam, 使用优化算法在无线传感网络中的密码学研究，《印度科学与技术杂志》8
    (2015) 216。
- en: 'Mahendra and Prabha [2022] M. Mahendra, P. S. Prabha, Classification of security
    levels to enhance the data sharing transmissions using blowfish algorithm in comparison
    with data encryption standard, in: 2022 International Conference on Sustainable
    Computing and Data Communication Systems (ICSCDS), IEEE, 2022, pp. 1154–1160.'
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mahendra 和 Prabha [2022] M. Mahendra, P. S. Prabha, 使用 Blowfish 算法与数据加密标准相比进行数据共享传输的安全级别分类，以提升数据共享传输的安全性，载于：2022
    年国际可持续计算与数据通信系统会议 (ICSCDS)，IEEE，2022 年，第 1154–1160 页。
- en: 'Kota and Aissi [2002] C. M. Kota, C. Aissi, Implementation of the rsa algorithm
    and its cryptanalysis, in: proceedings of the 2002 ASEE Gulf-Southwest Annual
    Conference, 2002, pp. 20–22.'
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kota 和 Aissi [2002] C. M. Kota, C. Aissi, RSA 算法及其密码分析的实现，载于：2002 年 ASEE Gulf-Southwest
    年会论文集，2002 年，第 20–22 页。
- en: Lee et al. [2021] T. R. Lee, J. S. Teh, N. Jamil, J. L. S. Yan, J. Chen, Lightweight
    block cipher security evaluation based on machine learning classifiers and active
    s-boxes, IEEE Access 9 (2021) 134052–134064.
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lee 等 [2021] T. R. Lee, J. S. Teh, N. Jamil, J. L. S. Yan, J. Chen, 基于机器学习分类器和主动
    S-盒的轻量级分组密码安全评估，《IEEE Access》9 (2021) 134052–134064。
- en: 'Baksi [2022] A. Baksi, Machine learning-assisted differential distinguishers
    for lightweight ciphers, in: Classical and Physical Security of Symmetric Key
    Cryptographic Algorithms, Springer, 2022, pp. 141–162.'
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Baksi [2022] A. Baksi, 机器学习辅助的轻量级密码区分器，载于：对称密钥密码算法的经典与物理安全，Springer，2022 年，第
    141–162 页。
- en: Kok et al. [2020] S. Kok, A. Azween, N. Jhanjhi, Evaluation metric for crypto-ransomware
    detection using machine learning, Journal of Information Security and Applications
    55 (2020) 102646.
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kok 等 [2020] S. Kok, A. Azween, N. Jhanjhi, 使用机器学习进行加密勒索软件检测的评估指标，《信息安全与应用杂志》55
    (2020) 102646。
- en: 'Ding et al. [2020] Y. Ding, G. Wu, D. Chen, N. Zhang, L. Gong, M. Cao, Z. Qin,
    Deepedn: a deep-learning-based image encryption and decryption network for internet
    of medical things, IEEE Internet of Things Journal 8 (2020) 1504–1518.'
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ding 等 [2020] Y. Ding, G. Wu, D. Chen, N. Zhang, L. Gong, M. Cao, Z. Qin, Deepedn：一种基于深度学习的图像加密和解密网络，用于医疗物联网，《IEEE
    物联网杂志》8 (2020) 1504–1518。
- en: Kim et al. [2021] H. Kim, J. Park, H. Kwon, K. Jang, H. Seo, Convolutional neural
    network-based cryptography ransomware detection for low-end embedded processors,
    Mathematics 9 (2021) 705.
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kim 等 [2021] H. Kim, J. Park, H. Kwon, K. Jang, H. Seo, 基于卷积神经网络的低端嵌入式处理器加密勒索软件检测，《数学》9
    (2021) 705。
- en: Sharmeen et al. [2020] S. Sharmeen, Y. A. Ahmed, S. Huda, B. Ş. Koçer, M. M.
    Hassan, Avoiding future digital extortion through robust protection against ransomware
    threats using deep learning based adaptive approaches, IEEE Access 8 (2020) 24522–24534.
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sharmeen 等 [2020] S. Sharmeen, Y. A. Ahmed, S. Huda, B. Ş. Koçer, M. M. Hassan,
    通过基于深度学习的自适应方法抵御未来数字敲诈，避免勒索软件威胁，《IEEE Access》8 (2020) 24522–24534。
- en: 'Fischer et al. [2019] F. Fischer, H. Xiao, C.-Y. Kao, Y. Stachelscheid, B. Johnson,
    D. Razar, P. Fawkesley, N. Buckley, K. Böttinger, P. Muntean, et al., Stack overflow
    considered helpful! deep learning security nudges towards stronger cryptography,
    in: 28th $\displaystyle\{$USENIX$\displaystyle\}$ Security Symposium ($\displaystyle\{$USENIX$\displaystyle\}$
    Security 19), 2019, pp. 339–356.'
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fischer 等人 [2019] F. Fischer, H. Xiao, C.-Y. Kao, Y. Stachelscheid, B. Johnson,
    D. Razar, P. Fawkesley, N. Buckley, K. Böttinger, P. Muntean 等, Stack Overflow
    被认为有帮助! 深度学习安全性推动更强加密, 载于：第28届 $\displaystyle\{$USENIX$\displaystyle\}$ 安全研讨会
    ($\displaystyle\{$USENIX$\displaystyle\}$ Security 19), 2019, 页码 339–356。
- en: 'Ribeiro et al. [2016] M. T. Ribeiro, S. Singh, C. Guestrin, " why should i
    trust you?" explaining the predictions of any classifier, in: Proceedings of the
    22nd ACM SIGKDD international conference on knowledge discovery and data mining,
    2016, pp. 1135–1144.'
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ribeiro 等人 [2016] M. T. Ribeiro, S. Singh, C. Guestrin, “我为什么要相信你？”解释任何分类器的预测,
    载于：第22届 ACM SIGKDD 国际知识发现与数据挖掘会议论文集, 2016, 页码 1135–1144。
- en: 'Shrikumar et al. [2017] A. Shrikumar, P. Greenside, A. Kundaje, Learning important
    features through propagating activation differences, in: International conference
    on machine learning, PMLR, 2017, pp. 3145–3153.'
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shrikumar 等人 [2017] A. Shrikumar, P. Greenside, A. Kundaje, 通过传播激活差异学习重要特征,
    载于：国际机器学习会议, PMLR, 2017, 页码 3145–3153。
- en: 'Nadeem et al. [2022] A. Nadeem, D. Vos, C. Cao, L. Pajola, S. Dieck, R. Baumgartner,
    S. Verwer, Sok: Explainable machine learning for computer security applications,
    arXiv preprint arXiv:2208.10605 (2022).'
  id: totrans-371
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Nadeem 等人 [2022] A. Nadeem, D. Vos, C. Cao, L. Pajola, S. Dieck, R. Baumgartner,
    S. Verwer, Sok: 用于计算机安全应用的可解释机器学习, arXiv 预印本 arXiv:2208.10605 (2022)。'
- en: Vivek et al. [2022] Y. Vivek, V. Ravi, A. A. Mane, L. R. Naidu, Explainable
    artificial intelligence and causal inference based atm fraud detection, arXiv
    preprint arXiv:2211.10595 (2022).
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vivek 等人 [2022] Y. Vivek, V. Ravi, A. A. Mane, L. R. Naidu, 基于可解释人工智能和因果推断的
    ATM 欺诈检测, arXiv 预印本 arXiv:2211.10595 (2022)。
- en: Kinkead et al. [2021] M. Kinkead, S. Millar, N. McLaughlin, P. O’Kane, Towards
    explainable cnns for android malware detection, Procedia Computer Science 184
    (2021) 959–965.
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kinkead 等人 [2021] M. Kinkead, S. Millar, N. McLaughlin, P. O’Kane, 朝着可解释的 CNNs
    用于安卓恶意软件检测, Procedia 计算机科学 184 (2021) 959–965。
- en: 'McLaughlin et al. [2017] N. McLaughlin, J. Martinez del Rincon, B. Kang, S. Yerima,
    P. Miller, S. Sezer, Y. Safaei, E. Trickel, Z. Zhao, A. Doupé, et al., Deep android
    malware detection, in: Proceedings of the seventh ACM on conference on data and
    application security and privacy, 2017, pp. 301–308.'
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: McLaughlin 等人 [2017] N. McLaughlin, J. Martinez del Rincon, B. Kang, S. Yerima,
    P. Miller, S. Sezer, Y. Safaei, E. Trickel, Z. Zhao, A. Doupé 等, 深度安卓恶意软件检测, 载于：第七届
    ACM 数据与应用安全与隐私会议论文集, 2017, 页码 301–308。
- en: Bach et al. [2015] S. Bach, A. Binder, G. Montavon, F. Klauschen, K.-R. Müller,
    W. Samek, On pixel-wise explanations for non-linear classifier decisions by layer-wise
    relevance propagation, PloS one 10 (2015) e0130140.
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bach 等人 [2015] S. Bach, A. Binder, G. Montavon, F. Klauschen, K.-R. Müller,
    W. Samek, 关于通过层次相关传播进行非线性分类器决策的像素级解释, PloS one 10 (2015) e0130140。
- en: Hooker et al. [2019] S. Hooker, D. Erhan, P.-J. Kindermans, B. Kim, A benchmark
    for interpretability methods in deep neural networks, Advances in neural information
    processing systems 32 (2019).
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hooker 等人 [2019] S. Hooker, D. Erhan, P.-J. Kindermans, B. Kim, 用于深度神经网络的可解释性方法基准,
    神经信息处理系统进展 32 (2019)。
- en: 'Lin et al. [2021] Y.-S. Lin, W.-C. Lee, Z. B. Celik, What do you see? evaluation
    of explainable artificial intelligence (xai) interpretability through neural backdoors,
    in: Proceedings of the 27th ACM SIGKDD Conference on Knowledge Discovery & Data
    Mining, 2021, pp. 1027–1035.'
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lin 等人 [2021] Y.-S. Lin, W.-C. Lee, Z. B. Celik, 你看到什么？通过神经后门评估可解释人工智能 (XAI)
    的可解释性, 载于：第27届 ACM SIGKDD 知识发现与数据挖掘会议论文集, 2021, 页码 1027–1035。
- en: 'Guo et al. [2018] W. Guo, D. Mu, J. Xu, P. Su, G. Wang, X. Xing, Lemna: Explaining
    deep learning based security applications, in: proceedings of the 2018 ACM SIGSAC
    conference on computer and communications security, 2018, pp. 364–379.'
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Guo 等人 [2018] W. Guo, D. Mu, J. Xu, P. Su, G. Wang, X. Xing, Lemna: 解释基于深度学习的安全应用,
    载于：2018 ACM SIGSAC 计算机与通信安全会议论文集, 2018, 页码 364–379。'
- en: 'Kuppa and Le-Khac [2020] A. Kuppa, N.-A. Le-Khac, Black box attacks on explainable
    artificial intelligence (xai) methods in cyber security, in: 2020 International
    Joint Conference on Neural Networks (IJCNN), IEEE, 2020, pp. 1–8.'
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kuppa 和 Le-Khac [2020] A. Kuppa, N.-A. Le-Khac, 对可解释人工智能 (XAI) 方法在网络安全中的黑箱攻击,
    载于：2020 国际神经网络联合会议 (IJCNN), IEEE, 2020, 页码 1–8。
- en: Rao and Mane [2021] D. Rao, S. Mane, Zero-shot learning approach to adaptive
    cybersecurity using explainable ai, arXiv preprint arXiv:2106.14647 (2021).
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rao and Mane [2021] D. Rao, S. Mane, 基于可解释 AI 的自适应网络安全零样本学习方法，arXiv 预印本 arXiv:2106.14647
    (2021)。
- en: 'Zhong et al. [2023] F. Zhong, X. Cheng, D. Yu, B. Gong, S. Song, J. Yu, Malfox:
    camouflaged adversarial malware example generation based on conv-gans against
    black-box detectors, IEEE Transactions on Computers (2023).'
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Zhong et al. [2023] F. Zhong, X. Cheng, D. Yu, B. Gong, S. Song, J. Yu, Malfox:
    基于 conv-gans 的伪装对抗恶意软件示例生成，用于对抗黑箱检测器，《IEEE计算机学报》（2023）。'
- en: 'Zhao et al. [2023] Z. Zhao, Z. Li, F. Zhang, Z. Yang, S. Luo, T. Li, R. Zhang,
    K. Ren, Sage: Steering the adversarial generation of examples with accelerations,
    IEEE Transactions on Information Forensics and Security 18 (2023) 789–803.'
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Zhao et al. [2023] Z. Zhao, Z. Li, F. Zhang, Z. Yang, S. Luo, T. Li, R. Zhang,
    K. Ren, Sage: 通过加速器引导对抗性示例生成，《IEEE信息取证与安全学报》18 (2023) 789–803。'
- en: 'Hu and Tan [2023] W. Hu, Y. Tan, Generating adversarial malware examples for
    black-box attacks based on gan, in: Data Mining and Big Data: 7th International
    Conference, DMBD 2022, Beijing, China, November 21–24, 2022, Proceedings, Part
    II, Springer, 2023, pp. 409–423.'
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hu and Tan [2023] W. Hu, Y. Tan, 基于 GAN 的黑箱攻击对抗恶意软件示例生成，见：数据挖掘与大数据：第七届国际会议 DMBD
    2022，北京，中国，2022年11月21–24日，会议录，第 II 部分，Springer，2023，第409–423页。
- en: 'Ling et al. [2023] X. Ling, L. Wu, J. Zhang, Z. Qu, W. Deng, X. Chen, Y. Qian,
    C. Wu, S. Ji, T. Luo, et al., Adversarial attacks against windows pe malware detection:
    A survey of the state-of-the-art, Computers & Security (2023) 103134.'
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ling et al. [2023] X. Ling, L. Wu, J. Zhang, Z. Qu, W. Deng, X. Chen, Y. Qian,
    C. Wu, S. Ji, T. Luo, 等，针对 Windows PE 恶意软件检测的对抗攻击：前沿技术综述，《计算机与安全》 (2023) 103134。
- en: 'Xu et al. [2023] G. Xu, G. Xin, L. Jiao, J. Liu, S. Liu, M. Feng, X. Zheng,
    Ofei: A semi-black-box android adversarial sample attack framework against dlaas,
    IEEE Transactions on Computers (2023).'
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Xu et al. [2023] G. Xu, G. Xin, L. Jiao, J. Liu, S. Liu, M. Feng, X. Zheng,
    Ofei: 针对 DLAAS 的半黑箱 Android 对抗样本攻击框架，《IEEE计算机学报》（2023）。'
- en: Qiao et al. [2022] Y. Qiao, W. Zhang, Z. Tian, L. T. Yang, Y. Liu, M. Alazab,
    Adversarial elf malware detection method using model interpretation, IEEE Transactions
    on Industrial Informatics 19 (2022) 605–615.
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Qiao et al. [2022] Y. Qiao, W. Zhang, Z. Tian, L. T. Yang, Y. Liu, M. Alazab,
    基于模型解释的对抗 ELF 恶意软件检测方法，《IEEE工业信息学学报》19 (2022) 605–615。
- en: Meenakshi and Maragatham [2023] K. Meenakshi, G. Maragatham, An optimised defensive
    technique to recognize adversarial iris images using curvelet transform, Intelligent
    Automation & Soft Computing 35 (2023) 627–643.
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Meenakshi and Maragatham [2023] K. Meenakshi, G. Maragatham, 一种优化的防御技术，通过曲波变换识别对抗性虹膜图像，《智能自动化与软计算》35
    (2023) 627–643。
- en: 'Pintor et al. [2022] M. Pintor, L. Demetrio, A. Sotgiu, A. Demontis, N. Carlini,
    B. Biggio, F. Roli, Indicators of attack failure: Debugging and improving optimization
    of adversarial examples, Advances in Neural Information Processing Systems 35
    (2022) 23063–23076.'
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pintor et al. [2022] M. Pintor, L. Demetrio, A. Sotgiu, A. Demontis, N. Carlini,
    B. Biggio, F. Roli, 攻击失败指标：调试和优化对抗示例，《神经信息处理系统进展》35 (2022) 23063–23076。
- en: '15 Appendix A: File Types'
  id: totrans-389
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '15 附录 A: 文件类型'
- en: . tbk, .jpeg , . brd, .dot , .jpg , .rtf , .doc , .js , .sch , .3dm , .mp3 ,
    .sh , .3ds , .key , .sldm , .3g2 , .lay , .sldm , .mkv , .std , .asp , .mml ,
    .sti , .avi , .mov , .stw , .backup , . jsp, .suo , .bak , .mp4 , .svg , .bat
    , .mpeg , .swf , .bmp , .mpg , .sxc , .rb , .msg , .sxd , .bz2 , .myd , .sxi ,
    .c , .myi , .sxm , .cgm , .nef , .sxw , .class , .odb , .tar , .cmd , .odg , .123
    , . onetoc2, .odp , .tgz , .crt , .ods , .tif , .3gp , .lay6 , .sldx , .7z , .ldf
    , .slk , .vsd , .m3u , .sln , .aes , .m4u , .snt , .ai , .max , .sql , . ppam,
    .mdb , .sqlite3 , .asc , .mdf , .sqlitedb , .asf , .mid , .stc , .asm , .cs ,
    .odt , .tiff , .csr , .cpp , .txt , .csv , .pas , .vmx , .docb , .pdf , .vob ,
    .docm , .pem , . accdb, .docx , .pfx , .vsdx , .602 , . p12, .wav , .dotm , .pl
    , .wb2 , .dotx , .png , .wk1 , .dwg , .pot , . xltx, .edb , .potm , .wma , .eml
    , .potx , .wmv , .fla , .ARC , .xlc , .flv , .pps , .xlm , .frm , .ppsm , .xls
    , .gif , .ppsx , .xlsb , .gpg , .ppt , .xlsm , .gz , .pptm , .xlsx , .h , .pptx
    , .xlt , .hwp , .ps1 , .xltm , .ibd , .psd , .wks , .iso , .pst , .xlw , .jar
    , .rar , . djvu, .java , .raw., .ost , .uop , .db , .otg , .uot , .dbf , .otp
    , .vb , .dch , .ots , .vbs , .der” , .ott , .vcd , .dif , .php, .vdi , .dip ,
    .PAQ , .vmdk , .zip
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: .tbk, .jpeg, .brd, .dot, .jpg, .rtf, .doc, .js, .sch, .3dm, .mp3, .sh, .3ds,
    .key, .sldm, .3g2, .lay, .sldm, .mkv, .std, .asp, .mml, .sti, .avi, .mov, .stw,
    .backup, .jsp, .suo, .bak, .mp4, .svg, .bat, .mpeg, .swf, .bmp, .mpg, .sxc, .rb,
    .msg, .sxd, .bz2, .myd, .sxi, .c, .myi, .sxm, .cgm, .nef, .sxw, .class, .odb,
    .tar, .cmd, .odg, .123, .onetoc2, .odp, .tgz, .crt, .ods, .tif, .3gp, .lay6, .sldx,
    .7z, .ldf, .slk, .vsd, .m3u, .sln, .aes, .m4u, .snt, .ai, .max, .sql, .ppam, .mdb,
    .sqlite3, .asc, .mdf, .sqlitedb, .asf, .mid, .stc, .asm, .cs, .odt, .tiff, .csr,
    .cpp, .txt, .csv, .pas, .vmx, .docb, .pdf, .vob, .docm, .pem, .accdb, .docx, .pfx,
    .vsdx, .602, .p12, .wav, .dotm, .pl, .wb2, .dotx, .png, .wk1, .dwg, .pot, .xltx,
    .edb, .potm, .wma, .eml, .potx, .wmv, .fla, .ARC, .xlc, .flv, .pps, .xlm, .frm,
    .ppsm, .xls, .gif, .ppsx, .xlsb, .gpg, .ppt, .xlsm, .gz, .pptm, .xlsx, .h, .pptx,
    .xlt, .hwp, .ps1, .xltm, .ibd, .psd, .wks, .iso, .pst, .xlw, .jar, .rar, .djvu,
    .java, .raw, .ost, .uop, .db, .otg, .uot, .dbf, .otp, .vb, .dch, .ots, .vbs, .der,
    .ott, .vcd, .dif, .php, .vdi, .dip, .PAQ, .vmdk, .zip
- en: '16 Appendix B: The Accuracy and Loss Curves Plots'
  id: totrans-391
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录 B：准确性和损失曲线图
- en: '![Refer to caption](img/a59281e93bc012eabacb7e4ba2476458.png)'
  id: totrans-392
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/a59281e93bc012eabacb7e4ba2476458.png)'
- en: 'Figure 20: Training and testing for accuracy and loss of EfficientnetB1'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 图 20：EfficientnetB1 的训练和测试准确性与损失
- en: '![Refer to caption](img/596de52c26921af8a36954f44f147260.png)'
  id: totrans-394
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/596de52c26921af8a36954f44f147260.png)'
- en: 'Figure 21: Training and testing for accuracy and loss of EfficientnetB2'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 图 21：EfficientnetB2 的训练和测试准确性与损失
- en: '![Refer to caption](img/a5011f866cb7e20c068e2fff6f1eb715.png)'
  id: totrans-396
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/a5011f866cb7e20c068e2fff6f1eb715.png)'
- en: 'Figure 22: Training and testing for accuracy and loss of EfficientnetB3'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 图 22：EfficientnetB3 的训练和测试准确性与损失
- en: '![Refer to caption](img/69c852fcddf5582b8a3ebeabdaa5181d.png)'
  id: totrans-398
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/69c852fcddf5582b8a3ebeabdaa5181d.png)'
- en: 'Figure 23: Training and testing for accuracy and loss of EfficientnetB4'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 图 23：EfficientnetB4 的训练和测试准确性与损失
- en: '![Refer to caption](img/3e6ce93266aaaa636b72b51c790fcb20.png)'
  id: totrans-400
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/3e6ce93266aaaa636b72b51c790fcb20.png)'
- en: 'Figure 24: Training and testing for accuracy and loss of EfficientnetB5'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 图 24：EfficientnetB5 的训练和测试准确性与损失
- en: '![Refer to caption](img/bfd63b8053dae9090a44005fb0fadc3f.png)'
  id: totrans-402
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/bfd63b8053dae9090a44005fb0fadc3f.png)'
- en: 'Figure 25: Training and testing for accuracy and loss of EfficientnetB6'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 图 25：EfficientnetB6 的训练和测试准确性与损失
- en: '![Refer to caption](img/42b61ee55c2560a1c9d17c82b24d62d3.png)'
  id: totrans-404
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/42b61ee55c2560a1c9d17c82b24d62d3.png)'
- en: 'Figure 26: Training and testing for accuracy and loss of EfficientnetB7'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 图 26：EfficientnetB7 的训练和测试准确性与损失
