- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-09-06 19:58:14'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: '[2011.10187] A Survey on Deep Learning Based Point-Of-Interest (POI) Recommendations'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://ar5iv.labs.arxiv.org/html/2011.10187](https://ar5iv.labs.arxiv.org/html/2011.10187)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A Survey on Deep Learning Based Point-Of-Interest (POI) Recommendations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Md. Ashraful Islam Mir Mahathir Mohammad Sarkar Snigdha Sarathi Das Mohammed
    Eunus Ali Department of Computer Science and Engineering (CSE)
  prefs: []
  type: TYPE_NORMAL
- en: Bangladesh University of Engineering and Technology (BUET)
  prefs: []
  type: TYPE_NORMAL
- en: Dhaka 1000, Bangladesh
  prefs: []
  type: TYPE_NORMAL
- en: Abstract
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Location-based Social Networks (LBSNs) enable users to socialize with friends
    and acquaintances by sharing their check-ins, opinions, photos, and reviews. Huge
    volume of data generated from LBSNs opens up a new avenue of research that gives
    birth to a new sub-field of recommendation systems, known as Point-of-Interest
    (POI) recommendation. A POI recommendation technique essentially exploits users’
    historical check-ins and other multi-modal information such as POI attributes
    and friendship network, to recommend the next set of POIs suitable for a user.
    A plethora of earlier works focused on traditional machine learning techniques
    by using hand-crafted features from the dataset. With the recent surge of deep
    learning research, we have witnessed a large variety of POI recommendation works
    utilizing different deep learning paradigms. These techniques largely vary in
    problem formulations, proposed techniques, used datasets and features, etc. To
    the best of our knowledge, this work is the first comprehensive survey of all
    major deep learning-based POI recommendation works. Our work categorizes and critically
    analyzes the recent POI recommendation works based on different deep learning
    paradigms and other relevant features. This review can be considered a cookbook
    for researchers or practitioners working in the area of POI recommendation.
  prefs: []
  type: TYPE_NORMAL
- en: 'keywords:'
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Location Based Social Network (LBSN), Point of Interest (POI) Recommendation,
    Deep Learning, Spatio-Temporal Models^†^†journal: NEUROCOMPUTING'
  prefs: []
  type: TYPE_NORMAL
- en: 1 Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Location-based Social Networks (LBSNs) offer users a unique opportunity to socialize
    by sharing their check-ins, opinions, photos, and reviews. All these advantages
    paired with the wide availability of smartphones have dramatically increased the
    user base to billions-scale in these LBSNs platforms. Consequently, we have witnessed
    an explosion of rich multimodal spatio-temporal data collected from these platforms.
    The availability of this huge amount of data opens up new opportunities in Point-of-Interest
    (POI) recommendation, a vibrant independent sub-area in a recommendation system
    that has garnered significant attention from both user and business perspectives
    in recent years. A POI recommendation technique essentially exploits users’ historical
    check-ins and other multimodal information to recommend the next set of POIs suitable
    for a user. As the size and modality of the data, and the user expectation widely
    vary, this opportunity of having tons of multimodal data comes up with new challenges
    enticing the researchers to design novel techniques to better capture mobility
    patterns and other features (e.g., spatial, social, textual) to improve recommendation
    performance.
  prefs: []
  type: TYPE_NORMAL
- en: Earlier works in POI recommendation primarily focused on feature engineering
    and conventional (non-deep learning) machine learning-based methods. Markov Chain
    based stochastic models have been explored extensively in this regard [[1](#bib.bib1),
    [2](#bib.bib2), [3](#bib.bib3), [4](#bib.bib4), [5](#bib.bib5), [6](#bib.bib6),
    [7](#bib.bib7), [8](#bib.bib8), [9](#bib.bib9)]. Due to the success of Matrix
    Factorization (MF [[10](#bib.bib10)]) based methods for recommendation systems
    in other domains, MF methods [[11](#bib.bib11), [12](#bib.bib12), [13](#bib.bib13),
    [2](#bib.bib2), [14](#bib.bib14), [15](#bib.bib15), [16](#bib.bib16), [17](#bib.bib17)]
    have also been studied for better POI recommendation modeling. To achieve better
    performance than vanilla MF methods, Bayesian Personalized Ranking (BPR [[18](#bib.bib18)])
    methods have been employed [[19](#bib.bib19), [20](#bib.bib20), [21](#bib.bib21),
    [22](#bib.bib22), [23](#bib.bib23), [24](#bib.bib24), [25](#bib.bib25), [8](#bib.bib8)].
    Other traditional approaches like support vector machine (SVM) [[26](#bib.bib26)],
    Collaborative Filtering [[27](#bib.bib27), [28](#bib.bib28), [29](#bib.bib29),
    [30](#bib.bib30), [31](#bib.bib31), [32](#bib.bib32)], Gaussian Modeling [[33](#bib.bib33)],
    Transitive Dissimilarity [[34](#bib.bib34)] have also been exploited in different
    works for personalized POI recommendation. One major shortcoming of all these
    approaches lies in feature engineering. Explicit feature engineering requires
    sufficient domain expertise. The increasing availability of data from other modalities
    like images, texts, and POI reviews make these feature engineering tasks even
    more challenging as manually crafting the relationship between these unstructured
    features is not a trivial task. Consequently, deep learning-based methods replaced
    most of those traditional techniques in recent years.
  prefs: []
  type: TYPE_NORMAL
- en: Deep learning methods like Convolutional Neural Networks (CNN) or Recurrent
    Neural Networks (RNN) provide many advantage in terms of automatic feature extraction
    eliminating the difficulties in handcrafted feature design. Furthermore, deep
    learning-based methods excel in modeling complex relationships between structured
    and unstructured data, which let us leverage multimodal data from different domains
    in POI recommendation. In the last few years, we have seen an unprecedented rise
    in the number of works leveraging deep learning in POI recommendation in all major
    venues (e.g., AAAI, IJCAI, SIGIR, CIKM, WWW, etc.). The use of different deep
    learning paradigms such as CNN [[35](#bib.bib35), [36](#bib.bib36)], RNN [[37](#bib.bib37),
    [38](#bib.bib38), [39](#bib.bib39), [40](#bib.bib40)], Long Short Term Memory
    (LSTM) [[41](#bib.bib41), [42](#bib.bib42), [43](#bib.bib43), [44](#bib.bib44)],
    Gated Recurrent Unit (GRU) [[45](#bib.bib45), [46](#bib.bib46), [47](#bib.bib47)],
    and self-attention [[48](#bib.bib48), [49](#bib.bib49)] have greatly boosted the
    performance of POI recommendation models. On top of that, state-of-the-art techniques
    from Natural Language Processing (NLP) have also been employed for complex modeling
    of human mobility in POI recommendation. Some recent works have leveraged graph
    embedding to enrich models with semantic geospatial information [[50](#bib.bib50),
    [51](#bib.bib51), [52](#bib.bib52)]. The wide varieties of deep learning-based
    POI recommendation techniques introduced in a short timespan necessitates a comprehensive
    review of these works (i) to demonstrate how different techniques have been used
    to handle different features, (ii) to identify the pros and cons of each model,
    and (iii) to propose a summary guideline for potential gaps and future research
    opportunities.
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous Surveys on POI recommendation: Several survey papers exist in the
    literature that prior works on Point-of-Interest (POI) recommendation. In an early
    work, Bao et al. [[53](#bib.bib53)] reviewed traditional (i.e., non-deep learning)
    POI recommendation methods. In a later work, Liu et al. [[54](#bib.bib54)] did
    an experimental evaluation of some of the then state-of-the-art traditional POI
    recommendation models. In another work, Zhao et al. [[55](#bib.bib55)] classified
    POI recommendation models in three taxonomies: influential factor-based, methodology
    based, and task-based. All those surveys primarily focused on feature engineering-centric
    (i.e., non-deep learning) models. Later, Zheng et al. [[56](#bib.bib56)] did a
    comprehensive review of location prediction on Twitter dataset, where they also
    acknowledged the uprise of deep learning centric approaches. In another review
    of POI recommendation models, Liu et al.[[57](#bib.bib57)] also mentioned a few
    neural network models. Since then, a large body of works in POI recommendation
    have been introduced leveraging different deep learning paradigms. In the last
    few years, researchers utilized RNN, LSTM, CNN, graph neural networks, attention
    networks in different ways to make use of different features resulting in significant
    performance uplift. Recently, Wang et al. [[58](#bib.bib58)] summarized a handful
    of deep learning-based models in the spatio-temporal domain. However, since this
    paper was a summary of the whole spatio-temporal domain, few POI recommendation
    models were discussed in high-level. Another recent review of location prediction
    models [[59](#bib.bib59)] mostly discusses non-deep learning models with a very
    coarse focus on some deep learning models.'
  prefs: []
  type: TYPE_NORMAL
- en: Large varieties of recent deep learning-based POI recommendation works largely
    vary w.r.t. problem formulations, proposed techniques, used datasets, features,
    etc. There is no unified study to categorically discuss the pros and cons of different
    deep learning paradigms on POI recommendations. The wide variety of these techniques
    can easily puzzle someone willing to explore this field of POI recommendation.
    This survey work fills up the above gaps of existing studies.
  prefs: []
  type: TYPE_NORMAL
- en: 'Contributions of Our Survey: In summary, to fill the gaps of existing surveys
    on POI recommendation techniques and to cover growing number recent papers papers
    in this domain, we have made the following major contributions in this review
    paper.'
  prefs: []
  type: TYPE_NORMAL
- en: '1.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We provide a categorization of all the models of POI recommendation based on
    their application goals (Section [2](#S2 "2 Problem Definition ‣ A Survey on Deep
    Learning Based Point-Of-Interest (POI) Recommendations")).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '2.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We outline the features of all datasets used in this domain and discuss their
    strengths as well as their limitations (Section [4](#S4 "4 Dataset Description
    ‣ A Survey on Deep Learning Based Point-Of-Interest (POI) Recommendations")).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '3.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We categorize the POI recommendation models based on different deep learning
    paradigms and compare their competitive (dis)advantages (Section [5](#S5 "5 POI
    Recommendation Models ‣ A Survey on Deep Learning Based Point-Of-Interest (POI)
    Recommendations")).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '4.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We identify different factors (i.e., social influence, sequential effect, etc.)
    that impact the POI recommendations and provide tabular analysis of each factor
    that is covered by all the models (Section [7](#S7 "7 Influential Factors ‣ A
    Survey on Deep Learning Based Point-Of-Interest (POI) Recommendations")).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '5.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We present the comparison of all stat-of-of-art techniques based on their performance
    metrics (Table [3](#S5.T3 "Table 3 ‣ 5.6 Other models ‣ 5 POI Recommendation Models
    ‣ A Survey on Deep Learning Based Point-Of-Interest (POI) Recommendations")).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '6.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, we identify shortcomings of the existing works and provide comprehensive
    future recommendations for POI research (Section [8](#S8 "8 Shortcomings and Challenges
    ‣ A Survey on Deep Learning Based Point-Of-Interest (POI) Recommendations")).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 2 Problem Definition
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Point-of-Interest (POI) recommendation is a class of problems that suggest
    suitable future POIs for a user, given the historical check-in history of past
    users and other associated data of an LBSN. Let $U=\{u_{1},u_{2},...u_{N}\}$ be
    a set of $N$ LBSN users and $P=\{p_{1},p_{2},...p_{M}\}$ be a set of $M$ POIs
    in the LBSN. Users may be linked to each other through a set of connections Ü$=\{\langle
    u_{i},u_{j}\rangle~{}|~{}u_{i},u_{j}\in U\}$. Each POI $p$ is geo-coded by latitude
    $x_{p}$, longitude $y_{p}$, and a set of attributes $W_{p}$ representing POI semantics.
    We first define the relevant terms and then formally define the problem as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Definition 1 (Check-in):'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A check-in $\rho_{t_{i}}^{u}$ indicates the POI checked-in by user $u$ at time
    $t_{i}$.
  prefs: []
  type: TYPE_NORMAL
- en: 'Definition 2 (Check-in List):'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Each user $u$ is associated with a list of check-ins $C^{u}=\{\rho_{t_{1}}^{u},\rho_{t_{2}}^{u},...,\rho_{t_{T}}^{u}\}$,
    where $\rho_{t_{i}}^{u}$ denotes a check-in record of user $u$ at time $t_{i}$
    and $1<=i<=T$.
  prefs: []
  type: TYPE_NORMAL
- en: 'Definition 3 (Next POI recommendation):'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Given a check-in list $C^{u}$ of a user $u$, next POI recommendation refers
    to the prediction of the next POI at time $t_{T+1}$.
  prefs: []
  type: TYPE_NORMAL
- en: 'Definition 4 (Sequence of POI Recommendation):'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Given a check-in list $C^{u}$ of a user $u$, sequence of POI recommendation
    will recommend the next $n$ POIs which is from $t_{T+1}$ to $t_{T+n}$.
  prefs: []
  type: TYPE_NORMAL
- en: 'Definition 5 (Missing POI Check-in Identification):'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Given the check-in list, $C^{u}=\{\rho_{t_{1}}^{u},\rho_{t_{2}}^{u},...,\rho_{t_{m-1}}^{u},\rho_{t_{m}}^{u},\rho_{t_{m+1}}^{u},...,\rho_{t_{T}}^{u}\}$
    of an user $u$ where, the check-in $\rho_{t_{m}}^{u}$ is missing then missing
    POI check-in identification will identify the POI at time $t_{m}$.
  prefs: []
  type: TYPE_NORMAL
- en: 3 Network Architecture Preliminaries
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, we present the preliminary overview of different deep neural
    network paradigms that include Feed-Forward Network, Convolutional Neural Network,
    Recurrent Neural Network, Long-Short Term Memory, Gated Recurrent Unit, Attention
    Mechanisms, and Generative Adversarial Network.
  prefs: []
  type: TYPE_NORMAL
- en: 3.1 Feed-Forward Network
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Refer to caption](img/89729513397a60238f72f8184878c433.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1: Feed-Forward Network'
  prefs: []
  type: TYPE_NORMAL
- en: Feed-Forward Networks (Figure [1](#S3.F1 "Figure 1 ‣ 3.1 Feed-Forward Network
    ‣ 3 Network Architecture Preliminaries ‣ A Survey on Deep Learning Based Point-Of-Interest
    (POI) Recommendations")) are the most basic form of neural networks. Neural nodes
    are stacked up in layers where every node from a layer is connected to all the
    nodes in the next layer. The weighted connections combine the features of one
    layer and pass them to the subsequent layer through a nonlinear function (e.g.
    ReLU, Sigmoid, tanh, etc.). Stacking up layers of neurons dramatically increases
    the expressiveness of the network.
  prefs: []
  type: TYPE_NORMAL
- en: Although feed-forward networks can capture highly complex relationships within
    features, their overly high representational power usually causes overfitting
    training data resulting in poor generalization. Furthermore, as the number of
    layers increases, the sizes of the models dramatically increase making them harder
    to train and deploy. Most importantly, feed-forward networks have no explicit
    spatial and sequential feature handling capability, which limits their usage in
    spatio-temporal models.
  prefs: []
  type: TYPE_NORMAL
- en: 3.2 Convolutional Neural Network
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Convolutional Neural Networks (CNNs) are particularly suited for capturing spatial
    features from a given input. In CNN, convolutional filters, and pooling layers
    are systematically used to hierarchically process inputs. Subsets of the inputs
    are gradually channeled through convolutional filters, and pooling layers are
    used to scale down the transformed features. This process helps the CNN to gain
    spatial awareness while keeping the number of parameters significantly lower than
    feed-forward networks. To extract the spatial patterns in spatiotemporal data,
    CNNs are thus proven to be highly useful. Figure [2](#S3.F2 "Figure 2 ‣ 3.2 Convolutional
    Neural Network ‣ 3 Network Architecture Preliminaries ‣ A Survey on Deep Learning
    Based Point-Of-Interest (POI) Recommendations") shows the workflow of a CNN layer
    with filter size of 3x3.
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/52e4fedeb3725703f6511fcc404c2a07.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2: CNN Layer Workflow'
  prefs: []
  type: TYPE_NORMAL
- en: 3.3 Recurrent Neural Network
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Feed-forward networks or Convolutional Neural Networks do not consider any sequential
    or temporal dependency within the inputs. Recurrent Neural Network (RNN) solves
    this problem by taking a sequence of inputs and then learning the sequential pattern
    of the input sequence by using hidden states. We show the basic diagram of RNN
    in Figure [3](#S3.F3 "Figure 3 ‣ 3.3 Recurrent Neural Network ‣ 3 Network Architecture
    Preliminaries ‣ A Survey on Deep Learning Based Point-Of-Interest (POI) Recommendations").
    In this figure $x_{i},y_{i}$ and $h_{i}$ represent the input, output, and hidden
    state, respectively. We can see that besides input each RNN block uses a hidden
    state to produce output. Actually, the hidden states capture the context information
    of the input sequence which means capture the sequential pattern.
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/3b5a3b44db43df4f12c603cb32909472.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3: RNN Model'
  prefs: []
  type: TYPE_NORMAL
- en: 3.4 Long-Short Term Memory
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'RNN suffers from exploding Gradients and vanishing Gradients problems, as a
    result, can not capture long-term preferences. To solve the problems Long-Short
    Term Memory (LSTM) [[60](#bib.bib60)] is proposed. LSTM uses a gate mechanism
    and can capable of capturing long-term preferences. We can see an LSTM cell in
    Figure [4](#S3.F4 "Figure 4 ‣ 3.4 Long-Short Term Memory ‣ 3 Network Architecture
    Preliminaries ‣ A Survey on Deep Learning Based Point-Of-Interest (POI) Recommendations").
    In addition to hidden state $h_{t}$ which is used in RNN, every LSTM block has
    a cell state $c_{t}$. Also, the flow of the information among consecutive LSTM
    cells are controlled via three gates: (1) input gate, (2) forget gate, and (3)
    output gate.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/e51917cc363a835ba90a946feef93b73.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4: Basic LSTM Cell'
  prefs: []
  type: TYPE_NORMAL
- en: 3.5 Gated Recurrent Unit
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: LSTM resolves the problems of RNN but it has three gates so the training of
    an LSTM based model is slower and requires a large amount of training data. For
    solving these issues Gated Recurrent Unit (GRU) [[61](#bib.bib61)] is proposed.
    It uses only two gates, i.e., reset and forget gates. Thus, the GRU based model
    can be trained faster and performs better than LSTM when there is less training
    data.
  prefs: []
  type: TYPE_NORMAL
- en: 3.6 Attention Mechanism
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Sequence models like RNNs or LSTMs process inputs by logical order of sequence.
    However, this scheme tends to lose features in longer sequences resulting in poor
    model performance. Attention mechanism [[62](#bib.bib62)] largely solves this
    shortcoming by mimicking a humanlike focus in salient input regions. Humans are
    prone to giving higher attention to key parts of the input, which in turn helps
    to break down a complex input into simpler parts that can easily be processed.
    While Seq2Seq models [[63](#bib.bib63)] have taken the advantage of this attention
    mechanism to improve performance, recent advancements in attention mechanism have
    introduced self-attention mechanism [[64](#bib.bib64)] that improves performance
    as well as allows parallel processing of inputs making them lucrative for various
    applications. The key idea here is that inputs are mapped to query, key, and value
    vectors. The outputs are calculated by taking the weighted sum of the value vectors
    where weights are determined by a function of query and key values. This technique
    has been highly effective in many areas of NLP research, which shows its potential
    in other domains involving sequential data.
  prefs: []
  type: TYPE_NORMAL
- en: 3.7 Generative Adversarial Network
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Generative adversarial networks (GANs) [[65](#bib.bib65)] are a special form
    of generative machine learning framework where two different networks compete
    against each other with different goals. One of them is called “Generator” and
    the other is called “Discriminator”. The generator network generates candidates
    whereas the discriminator network tries to assess those candidates. The generator
    tries to “fool” the discriminator by creating novel sample candidates whereas
    the discriminator tries to distinguish those samples from the true data distribution.
    A generic GAN is shown in Figure [5](#S3.F5 "Figure 5 ‣ 3.7 Generative Adversarial
    Network ‣ 3 Network Architecture Preliminaries ‣ A Survey on Deep Learning Based
    Point-Of-Interest (POI) Recommendations"). In recent years, GANs have shown impressive
    performance in image synthesis, video game resolution upscaling, art generation,
    and so on.
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/9b39289426d52df87d6991ee922789ed.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5: Generative Adversarial Network'
  prefs: []
  type: TYPE_NORMAL
- en: 4 Dataset Description
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Prior works in Point-of-Interest recommendation have used check-in data collected
    from a wide range of LBSNs that include Foursquare, Gowalla, Yelp, Twitter, Facebook,
    Brightkite, Instagram, WeChat, and Baidu Map. Most of these datasets consist of
    tabular data that records the user-POI and the user-user relationship in LBSNs.
    User-POI data typically contains user check-in information including timestamps,
    location, and semantic features. Here POI Semantic features include the categories
    of the POIs and tags included in user LBSN posts, creation date of the POIs, geolocations
    (latitude, longitude), check-in counts, number of users checked-in, radius, etc.
    On the other hand, user semantic features contain the number of posts, friends,
    check-ins, etc. In order to keep the social influence in context, datasets like
    Foursquare, Gowalla, Weeplace also contain user-user relationship as a many-to-many
    schema, where each user is connected to all his friends. Because of all these
    data and a huge number of check-ins, some of these datasets become exceedingly
    large. Consequently, most of the prior works focused on a specific region or a
    country to keep the size tractable. A brief discussion on these LBSN datasets
    is given below:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Foursquare: Founded in 2009, Foursquare¹¹1https://foursquare.com/ has worked
    with world-wide collection and distribution of location data to facilitate technological
    corporations and brands. Most of the POI recommendation models discussed in this
    review use the datasets of Foursquare from a time range of 2010 to 2014\. The
    datasets contain check-in data collected mostly from the USA and Tokyo. This dataset
    also contains the list of all friends of each user in the LBSN.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Gowalla: Gowalla is a location-based social media platform dedicated to location
    check-ins. The platform was founded in 2007 and acquired by Facebook in 2012\.
    Gowalla was primarily a mobile application that allowed users to check into locations
    that they visited using their mobile devices. The datasets from the functioning
    period of Gowalla were available via the Gowalla API and currently, there are
    no official distributors for the datasets. Gowalla is the second most used datasets
    in the POI recommendation models discussed in this paper. Most prior works discussed
    have used check-in data from February 2009 to October 2010\. Like Foursquare,
    the Gowalla dataset also contains the list of friends of every user in the dataset.
    Besides, a detailed description of each POI and user profiles are also available
    in this dataset.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Brightkite: Brightkite was a location-based social media network that launched
    in 2007 and got dissolved in 2012\. The platform provided the ability to check-in
    through text messaging or a mobile application after visiting a location. Datasets
    of Brightkite is no longer officially available but still can be accessed from
    various research archives around the globe.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Yelp: Yelp ²²2https://www.yelp.com/ is another popular LBSN platform. As users
    tend to check-in different business locations, Yelp provides reviews and ratings
    from customers who shared their own experiences both for personal and research
    purposes. Yelp was founded in 2004 and is still operational as a reviewing company
    for business establishments. POI recommendation models are greatly benefited from
    the textual reviews of Yelp because reviews provide semantic information of POIs.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Weeplaces: WeePlaces is a service that visually maps users’ check-ins on location-based
    services. Weeplaces has been integrated with Gowalla and Facebook, giving users
    the ability to visualize where users have announced their locations to friends
    across Foursquare, Gowalla, and Facebook Places. Like Foursquare and Gowalla dataset,
    Weeplace dataset also contains the list of friends connected to a user which can
    be leveraged for capturing social influence in POI recommendation.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Instagram: Instagram ³³3https://www.instagram.com is a social media platform
    initially released in 2010 and currently owned by Facebook. Instagram allows users
    to post and share photos and videos online. Users can browse other users’ content
    by tags and locations. Instagram dataset primarily contains user check-in data
    which has been used in some recent works on POI recommendation.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Twitter: Twitter ⁴⁴4https://twitter.com is a highly popular social media platform
    where a user can post, see, and share short messages known as ’tweets’. Twitter
    was founded in 2006 and is currently the most popular micro-blogging service around
    the world. The check-in functionality of Twitter enables users to record visits
    to locations. The datasets are available through Twitter public API.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Other datasets: Some other used datasets are collected from WeChat⁵⁵5https://www.wechat.com/,
    Baidu Maps ⁶⁶6https://map.baidu.com/, Facebook⁷⁷7https://facebook.com. Functionalities
    of WeChat include texting, voice messaging, video conferencing, and location sharing.
    Baidu Maps provide street maps and views, satellite views of terrains, and route
    planners for traveling. Facebook is currently the largest social media site where
    users can post text, photos, and multimedia to share information about themselves.
    Posts can include check-in information about a visited place and thus datasets
    of Facebook are officially available for POI prediction research.'
  prefs: []
  type: TYPE_NORMAL
- en: For detailed information on some of the most used datasets used in POI recommendation,
    see Table [1](#S4.T1 "Table 1 ‣ 4 Dataset Description ‣ A Survey on Deep Learning
    Based Point-Of-Interest (POI) Recommendations"). To see the statistics of the
    datasets associated with each of the discussed papers, see Table [4](#S5.T4 "Table
    4 ‣ 5.6 Other models ‣ 5 POI Recommendation Models ‣ A Survey on Deep Learning
    Based Point-Of-Interest (POI) Recommendations").
  prefs: []
  type: TYPE_NORMAL
- en: 'Table 1: Summary of Datasets'
  prefs: []
  type: TYPE_NORMAL
- en: '| Dataset name | Column names | Description of the table |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Foursquare | userID, Time(GMT), VenueId, VenueName, VenueLocation, VenueCategory
    | Describes the user-POI relationship. Contains all user-checkins with date-time
    of checkin; name, location and type of POI |'
  prefs: []
  type: TYPE_TB
- en: '| userID, friendID | Describes the user-user relationship. Contains the list
    of all friends of each user in the LBSN |'
  prefs: []
  type: TYPE_TB
- en: '| Gowalla | userId, timestamp, latitude, longitude | Describes the user-POI
    relationship. Contains all checkin information of each user such as location and
    time of the visit |'
  prefs: []
  type: TYPE_TB
- en: '| userId, friendId | Describes the user-user relationship. Contains the list
    of all friends of each user in the LBSN |'
  prefs: []
  type: TYPE_TB
- en: '| id, name, created_at, lng, lat, photos_count, checkins_count, users_count,
    radius_meters, highlights_count, items_count, max_items_count, spot_categories,
    city_state | Description of each POI of the LBSN including the counts of user,
    checkins, photos, items and highlights. The name, city, date-time, category and
    radius on the map of each POI are also included. |'
  prefs: []
  type: TYPE_TB
- en: '| id, bookmarked_spots_count, challenge_pin_count, country_pin_count, highlights_count,
    items_count, photos_count, pins_count, province_pin_count, region_pin_count, state_pin_count,
    trips_count, friends_count, stamps_count, checkin_num, places_num | Details of
    the profile of each user of the LBSN |'
  prefs: []
  type: TYPE_TB
- en: '| Brightkite | user, check in time, latitude, longitude, location id | Describes
    the user-POI relationship. Each row contains time and location information of
    check-ins made by one user |'
  prefs: []
  type: TYPE_TB
- en: '| userid1, userid2 | Describes the user-user relationship. Friendship network
    of Brightkite users are described in this table. |'
  prefs: []
  type: TYPE_TB
- en: '| Yelp | business_id, name, address, city, state, postal_code, latitude, longitude,
    stars, review_count, is_open, attributes, categories, hours | Contains POI business
    data including location data, attributes, and categories. Attributes include whether
    the restaurants accepts takeouts and has business parkings |'
  prefs: []
  type: TYPE_TB
- en: '| review_id, user_id, business_id, stars, date, text, useful, funny, cool |
    Contains full review text data including the user_id that wrote the review and
    the business_id the review is written for. |'
  prefs: []
  type: TYPE_TB
- en: '| user_id, name, review_count, yelping_since, friends, useful, funny, cool,
    fans, elite, average_stars, compliment_hot, compliment_more, compliment_profile,
    compliment_cute, compliment_list, compliment_note, compliment_plain, compliment_cool,
    compliment_funny, compliment_writer, compliment_photos | User data including the
    user’s friend mapping and all the metadata associated with the user. |'
  prefs: []
  type: TYPE_TB
- en: '| business_id, date | Checkins on a POI of all the users |'
  prefs: []
  type: TYPE_TB
- en: '| text, date, compliment_count, business_id, user_id | Tips written by a user
    on a POI business location. Tips are shorter than reviews and tend to convey quick
    suggestions. |'
  prefs: []
  type: TYPE_TB
- en: '| photo_id, business_id, caption, label | Contains photo data including the
    caption and classification |'
  prefs: []
  type: TYPE_TB
- en: '| Weeplace | userid, placeid, datetime, lat, lon, city, category | Describes
    the user-POI relationship. Each row contains a check-in information of a user,
    date and time of the visit. The row also contains the location, category, subcategory
    and name of the city of the POI. |'
  prefs: []
  type: TYPE_TB
- en: '| userid1, userid2 | Describes the user-user relationship. Contains the list
    of all friends of each user in the LBSN |'
  prefs: []
  type: TYPE_TB
- en: '| Instagram | user_id, latitude, longitude, timestamp | Details of the user-POI
    relationship. Each row contains a check-in information of a user, date and time
    of the visit and the location of the POI |'
  prefs: []
  type: TYPE_TB
- en: '| Twitter | userID, tweetID, latitude, longitude, time, placeID, contentInfo
    | Contains information of a tweet having a check-in. Each row represents a tweet,
    a user, location and identifier of the POI and tags associated with the POI |'
  prefs: []
  type: TYPE_TB
- en: 5 POI Recommendation Models
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Thanks to the astounding growth of the user base in LBSNs, the amount of check-in
    data collected from these platforms have increased rapidly in recent years. This
    large volume of data has fueled the adaptation of deep learning techniques in
    the field of POI recommendation. While earlier works used conventional machine
    learning models, recent deep learning-based models have mostly replaced them due
    to the significantly higher performance with abundant potential to further improve
    the performance. Thus, in this survey, we mainly focus on Deep Neural Network
    (DNN) based POI recommendations. We categorize all of the proposed models used
    thus far into six major categories. They are RNN based models (Section [5.1](#S5.SS1
    "5.1 RNN based models ‣ 5 POI Recommendation Models ‣ A Survey on Deep Learning
    Based Point-Of-Interest (POI) Recommendations")), LSTM models (Section [5.2](#S5.SS2
    "5.2 LSTM models ‣ 5 POI Recommendation Models ‣ A Survey on Deep Learning Based
    Point-Of-Interest (POI) Recommendations")), GRU models (Section [5.3](#S5.SS3
    "5.3 GRU ‣ 5 POI Recommendation Models ‣ A Survey on Deep Learning Based Point-Of-Interest
    (POI) Recommendations")), Graph Embedding models (Section [5.4](#S5.SS4 "5.4 Graph
    Embedding ‣ 5 POI Recommendation Models ‣ A Survey on Deep Learning Based Point-Of-Interest
    (POI) Recommendations")) GAN models (Section [5.5](#S5.SS5 "5.5 GAN ‣ 5 POI Recommendation
    Models ‣ A Survey on Deep Learning Based Point-Of-Interest (POI) Recommendations")),
    and other models (Section [5.6](#S5.SS6 "5.6 Other models ‣ 5 POI Recommendation
    Models ‣ A Survey on Deep Learning Based Point-Of-Interest (POI) Recommendations")).
    These categories are described in the following subsections. We briefly highlight
    these models in Table [2](#S5.T2 "Table 2 ‣ 5.6 Other models ‣ 5 POI Recommendation
    Models ‣ A Survey on Deep Learning Based Point-Of-Interest (POI) Recommendations"),
    and the dataset used in each model are depicted in Table [4](#S5.T4 "Table 4 ‣
    5.6 Other models ‣ 5 POI Recommendation Models ‣ A Survey on Deep Learning Based
    Point-Of-Interest (POI) Recommendations"). A concise summary of these models,
    evaluation metrics, and their performance across different datasets are given
    in Table [3](#S5.T3 "Table 3 ‣ 5.6 Other models ‣ 5 POI Recommendation Models
    ‣ A Survey on Deep Learning Based Point-Of-Interest (POI) Recommendations").
  prefs: []
  type: TYPE_NORMAL
- en: 5.1 RNN based models
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Recurrent Neural Networks (RNN) are renowned for their high effectiveness in
    NLP problems. As POI recommendation problems show similar properties that resemble
    NLP tasks, many recent POI recommendation models use RNN as their base architecture.
    In this subsection, we discuss the basic RNN based POI recommendation models that
    can map a POI-sequence to another POI-sequence (successive POI recommendation),
    or only one POI (next POI recommendation).
  prefs: []
  type: TYPE_NORMAL
- en: Liu et al. [[37](#bib.bib37)] proposed a model, called Spatial-Temporal Recurrent
    Neural Networks (ST-RNN), for POI recommendations. The ST-RNN model extends the
    RNN model for capturing spatial and temporal effects. This model adds a time-specific
    and distance-specific transition matrix for capturing temporal cyclic effect and
    geographical influence, respectively. The model also applies linear interpolation
    for the training of the transition matrix.
  prefs: []
  type: TYPE_NORMAL
- en: In another recent work, Yang et al.[[38](#bib.bib38)] proposed a model called
    Flashback in which they use Basic RNN. The model uses sparse user mobility data
    by focusing on rich spatio-temporal contexts and doing flashbacks on hidden states
    in RNNs. Furthermore, the model uses the weighted average of historical hidden
    states for better capturing the spatio-temporal effects. Additionally, the paper
    also uses user embedding for considering user preferences.
  prefs: []
  type: TYPE_NORMAL
- en: Zhao et al.[[39](#bib.bib39)] proposed Adaptive Sequence Partitioner with Power-law
    Attention (ASPPA) model to learn the latent structures of the check-in sequences.
    The idea is a blend of Adaptive Sequence Partitioner (ASP) for texts by Griffiths
    et al.[[66](#bib.bib66)] and the stacked RNN architecture of El et al.[[67](#bib.bib67)].
    The paper aims to automatically detect and identify each semantic subsequence
    of POIs and discover their sequential patterns. The model is designed to be a
    stacked RNN and it adopts a binary boundary detector to control the pattern of
    cell update. This model uses the Power-law Attention (PA) mechanism to integrate
    spatial and temporal contexts of each check-in into the model. The output layer
    consists of two fully connected layers and a drop-out layer.
  prefs: []
  type: TYPE_NORMAL
- en: Since most of the POI recommendations are designed upon a cloud-based paradigm,
    there are many disadvantages including privacy concerns. To alleviate these problems,
    Wang et al.[[40](#bib.bib40)] proposed Light Location Recommender System (LLRec).
    Here the authors introduced teacher and student models. The teacher model is deployed
    on the server whereas the student model is deployed on the user mobile devices.
    The student model will fetch the pre-trained model from the server. And a user
    can get the next POI recommendation by using the pre-trained model without sending
    data to the teacher model. However, the storage and the computational capabilities
    in mobile devices are very limited. Consequently, the student model must be efficient,
    lightweight, and fast. For getting a lightweight and fast model, LLRec uses FastGRNN
    [[68](#bib.bib68)]. The parameters of this model are further compressed by using
    the tensor-train format [[69](#bib.bib69)]. Furthermore, the knowledge distillation
    framework [[70](#bib.bib70)] is used to improve prediction quality with very limited
    data. Time-specific and distance-specific transition matrix in vanilla FastGRNN
    is used for capturing spatio-temporal correlations between two adjacent check-ins.
    On the other hand, a powerful and computationally intensive teacher model can
    be deployed in the cloud. Besides, The teacher model uses attention mechanism
    to learn user preferences and converts textual content of POIs into low dimensional
    embeddings via Word2Vec [[71](#bib.bib71)]. Besides, Huang et al.[[72](#bib.bib72)]
    and Liao et al.[[73](#bib.bib73)] also extensively used the RNN architecture in
    their POI recommendation model.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2 LSTM models
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Since RNN models cannot capture long term dependencies, Long-Short Term Memory
    (LSTM) [[60](#bib.bib60)] has been extensively used in the recent works in POI
    recommendations. Most of the models use the basic unaltered LSTM for their predictions.
    Some of the models modify the basic LSTM model or use the bidirectional variant
    for the better capturing of POI domain-specific factors. To further improve long
    term dependency modeling, attention mechanism have also been used alongside LSTM.
    A detailed discussion of different kinds of LSTM based POI recommendation models
    are given below:'
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.1 Basic LSTM
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Most of the models use an encoder-decoder scheme where the encoder usually collects
    the information from users’ check-in list and other attributes; and using this
    information, the decoder predicts the next POI or a sequence of POI.
  prefs: []
  type: TYPE_NORMAL
- en: We start our discussion in the Basic LSTM model with the model proposed by Kong
    et al. [[74](#bib.bib74)] called Hierarchical Spatial-Temporal Long-Short Term
    Memory (HST-LSTM). HST-LSTM uses a hierarchical model to encode the periodicity
    of people’s movement. This model captures users’ historical visiting sequences
    in an encoder and decoder manner which improves the performance of POI recommendation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Li et al.[[42](#bib.bib42)] proposed Temporal and Multi-level Context Attention
    (TMCA) that uses LSTM based encoder-decoder network and three types of attention:
    multi-level context attention (micro, macro) and temporal attention. The paper
    introduces two attention mechanisms to select relevant historical and contextual
    factors. The model also uses embedding to incorporate heterogeneous contextual
    factors in a unified way.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For capturing both long-term and short-term preference Wu et al.[[75](#bib.bib75)]
    proposed Long- and short-term preference learning model (LSPL). LSPL has two modules
    i.e., (1) the long-term module consists of embedding layer and attention layer
    and captures long-term preference of a user by learning contextual features of
    POIs; (2) the short-term module uses two separate LSTM modules: one for location
    level and other for category level and captures sequential behavior of a user.
    Then all of them are combined to predict the next POI.'
  prefs: []
  type: TYPE_NORMAL
- en: The authors of LSPL [[75](#bib.bib75)] extend their work by proposing Personalized
    Long- and Short-term Preference Learning (PLSPL) [[76](#bib.bib76)] model. PLSPL
    adds a user-based linear combination unit with their existing LSPL model which
    captures the personalized preferences for different users by learning the personalized
    weights over long- and short-term modules.
  prefs: []
  type: TYPE_NORMAL
- en: Based on embedding, LSTM, an attention mechanism, Doan et al.[[77](#bib.bib77)]
    proposed Attentive Spatio TEmporal Neural (ASTEN) model. ASTEN embeds the POIs
    and represents a check-in efficiently. LSTM uses the POI and check-in representation
    and along with the attention mechanism which captures the sequential, temporal,
    and geographical influence. The model addresses the noise in user-trajectory data
    by attention mechanism.
  prefs: []
  type: TYPE_NORMAL
- en: Sun et al.[[41](#bib.bib41)] proposed Long and Short-Term Preference Modeling
    (LSTPM) using basic LSTM models. LSTPM divides all check-ins into several trajectories.
    The model actually develops three modules including the long-term preference modeling,
    the short-term preference modeling, and the prediction module. Long-term preference
    modeling uses all the trajectories, short-term preference modeling uses the last
    trajectory, and combinedly predicts the next POI. Another important aspect of
    the next POI recommendation is that the next POI does not depend only on the recent
    check-in; however, it can depend on any earlier check-in. But RNN/LSTM based approaches
    have a drawback of being unable to model the relations between two nonconsecutive
    POIs. For capturing this affect the model uses a geo-dilated LSTM scheme along
    with basic LSTM in short-term preference modeling.
  prefs: []
  type: TYPE_NORMAL
- en: Zhang et al.[[43](#bib.bib43)] proposed Interactive multi-task learning (iMTL),
    which uses a two-channel encoder and a task-specific decoder. The two-channel
    encoder (temporal-aware activity and spatial-aware location preference encoders)
    aims to capture the sequential correlations of activities and location preferences.
    The representations encoded by the LSTM are utilized in the task-specific decoder
    to interactively perform the prediction tasks. A novel contribution of this paper
    is that they focus on the collective POIs. Suppose, $l_{1}$ is a building and
    each building contains many individual apartments i.e., $l_{2},l_{3},l_{4},l_{5}$,
    then the model denotes $l_{1}$ as collective POI and $l_{2},l_{3},l_{4},l_{5}$
    as individual POIs. This paper proposes a fuzzy characterization strategy for
    better prediction of individual POI from a collective POI.
  prefs: []
  type: TYPE_NORMAL
- en: Most of the POI recommendation models only predict the location of POI ignoring
    the timestamp but Yu et al.[[44](#bib.bib44)] proposed Category-aware Deep Model
    (CatDM) which predicts POIs that will be visited by users in the next 24 hours.
    CatDM contains (1) metric embedding that learns the latent features of a user,
    POI, POI category, and time; (2) first deep encoder for capturing user preferences
    in POI categories; (3) two filters for reducing search space to generate candidates;
    (4) another deep encoder for user preferences in POIs, and (5) a module for ranking
    the candidate set. For ranking candidate set this model considers four correlations
    simultaneously i.e., the correlation between user and POI, the correlation between
    the user and POI category, the correlation between POI and temporal influence,
    and the correlation between POI and user’s current preferences. The model uses
    POI categories and geographical influence for overcoming data sparsity. The model
    also uses an attention mechanism for getting better results.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us assume that $l_{1},l_{2},l_{3}$ are three locations and $l_{2}$ is nearby
    to $l_{1}$. Now, if a check-in from $l_{2}$ to $l_{3}$ presents in a user check-in
    list then after visiting $l_{1}$ it will most likely to visit $l_{3}$. This type
    of situation is called transition regularity. Most of the existing POI recommendation
    methods capture sequential regularity only. On the other hand, Gua et al. [[78](#bib.bib78)]
    proposed Attentional Recurrent Neural Network (ARNN) model which captures both
    sequential and transition regularities for resolving sparsity problem. ARNN consists
    of several layers i.e., (1) Neighbor discovery layer: neighbors are extracted
    from heterogeneous data by using knowledge graph (KG) and meta-path; (2) Embedding
    Layer: transforms the sparse features of check-in sequence into dense representation
    and learns the spatio-temporal features, semantic context by using multi-modal
    embedding layer; (3) Attention layer: calculates the similarity between the current
    location and each neighbor and capture the transition regularities of the neighbors;
    (4) Recurrent layer: captures higher-order sequential regularity by using LSTM.
    Besides these model, Wang et al.[[79](#bib.bib79)], Huang et al.[[80](#bib.bib80)]
    and Li et al.[[81](#bib.bib81)] uses LSTM and attention layers for POI prediction.
    Yang et al.[[82](#bib.bib82)] uses LSTM and embedding layers for the next POI
    recommendation. Another model called SLSTM [[83](#bib.bib83)] uses stacked LSTM
    and embedding layers for sequential check-in prediction.'
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.2 Bi-LSTM
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Vanilla LSTM processes input only in one direction sequentially. While it helps
    the models get sequential information from the previous inputs, information from
    later parts of the input cannot be captured. Bi-directional LSTM (Bi-LSTM) solves
    this problem by considering both directions of inputs. Some recent POI recommendation
    models also use Bi-LSTM to capture sequence features from both directions to achieve
    better performance.
  prefs: []
  type: TYPE_NORMAL
- en: 'From the model GeoIE [[13](#bib.bib13)] we find that POI has two propensities
    i.e., (1) Geo-influence: directs its visitors to other POIs and (2) Geo-susceptibility:
    the receipt of visitors from other POIs. By considering the above-mentioned properties,
    Liu et al. [[84](#bib.bib84)] proposed a model called Geographical-Temporal Awareness
    Hierarchical Attention Network (GT-HAN). For better capturing the great variation
    in geographical co-influence across POIs GT-HAN uses three factors i.e., the geo-influence
    of POIs, the geo-susceptibility of POIs, and the distance between POIs. The main
    part of GT-HAN is an embedding layer, a geographical-temporal attention network
    layer, and a context-specific co-attention network layer. The embedding layer
    captures geo-influence, geo-susceptibility, and semantic effects. The geographical-temporal
    part explores the geographical relations between POIs and the temporal dependency
    of a check-in list and uses the Bi-LSTM model to capture the sequence dependence
    of a user’s check-in list. The context-specific co-attention network captures
    dynamic user preferences. GT-HAN [[84](#bib.bib84)] is actually the improved version
    of a previous model that is also known as GT-HAN [[85](#bib.bib85)] and proposed
    by the same authors.'
  prefs: []
  type: TYPE_NORMAL
- en: Liu et al. [[86](#bib.bib86)] proposed time-aware Location Prediction (t-LocPred)
    model. This model has two basic parts i.e., ConvAoI and mem-attLSTM. ConvAoI uses
    the CNN layer and ConvLSTM layer[[12](#bib.bib12)] to find the correlations among
    adjacent AoIs (Area-of-Interest) and time periods within a day and a week respectively.
    So, CNN and ConvLSTM work as short-term and long-term coarse-grained spatial-temporal
    modeling respectively. On the other hand, mem-attLSTM captures complex long-term
    correlation using a spatial-aware memory augmented LSTM and time-aware attention
    mechanism. So, mem-attLSTM works as a fine-grained filter that selects the most
    likely POIs a user will visit.
  prefs: []
  type: TYPE_NORMAL
- en: 'Chang et al.[[87](#bib.bib87)] proposed Content-aware successive POI recommendation
    (CAPRE) which is a complete POI recommendation model that uses user-generated
    textual content. CAPRE has four modules: (1) input layer: takes check-in history
    as input; (2) content encoder layer: uses character-level CNN (Convolutional Neural
    Network), multi-head attention mechanism, and POI embedding for capturing various
    perspectives of user interests about POIs; (3) user behavior pattern: captures
    content-aware and geographical user behavior patterns using Bi-LSTM; (4) Output
    layer: multi-layer perceptron (MLP) to capture users’ general preferences for
    POIs.'
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.3 Modified LSTM
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Some models modify the basic LSTM[[60](#bib.bib60)] model for enhanced POI prediction.
    The underlying idea is to better capture user short-term and long-term preferences
    by modifying the basic LSTM.
  prefs: []
  type: TYPE_NORMAL
- en: Zhao et al.[[88](#bib.bib88)] proposed Spatio-Temporal Gated Network (STGN)
    that modifies the basic LSTM [[60](#bib.bib60)] to capture short-term and long-term
    preference easily. This model adds four new gates i.e., two for long-term preferences
    and the other two for short-term preferences. This model also adds a new cell
    state. So, in the proposed model, there is one cell state for short-term preferences
    and one cell state for long-term preferences. STGN model is further improved by
    using coupled input and forget gates called STCGN (Spatio-Temporal Coupled Gated
    Network). STCGN reduces the number of parameters and thus this model can be trained
    easily and improves efficiency.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2.4 Self-Attention
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Following the success of self-attention in language modeling, state-of-the-art
    POI recommendation models have leveraged this powerful approach to achieve best
    in class performance. Among them, Lian et al.[[48](#bib.bib48)] proposed Geography-aware
    sequential recommender based on the Self-Attention Network (GeoSAN) uses a geography-aware
    self-attention network and geography encoder. The attention network consists of
    an embedding layer, a self-attention encoder, a target-aware attention decoder,
    and a matching function. The geography encoder uses map gridding and GPS mapping
    for encoding GPS location as quad keys. To address the sparsity challenge, the
    paper proposes a weighted binary cross-entropy loss function based on importance
    sampling, so that informative negative samples are more weighted.
  prefs: []
  type: TYPE_NORMAL
- en: In another work, Guo et al. [[49](#bib.bib49)] proposed a model - self-attentive
    networks along with spatial and temporal pattern learning for next POI recommendation
    (SANST). SANST is actually a modification of the model SASRec [[89](#bib.bib89)]
    which uses a two-layer transformer network [[64](#bib.bib64)]. SASRec does not
    capture spatial and temporal patterns. So, for capturing spatial patterns, SANST
    updates the embedding of check-ins by adding the location of the checked-in POI.
    Since the co-ordinate representation of a POI location is sparse, the model discretizes
    the whole data space with a grid such that POI locations are represented by the
    grid cell IDs. Grid Cell IDs are learned using GeoHash encoding and Bi-LSTM network.
    For capturing temporal effect SANST adds a parameter in the self-attention network
    which is computed using the time difference between two check-ins.
  prefs: []
  type: TYPE_NORMAL
- en: 5.3 GRU
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: RNN are great for analyzing time series data and LSTM helps in capturing short
    and long-term effects of visiting POIs. However, both RNN and LSTMs tend to suffer
    from cold start problems. Most RNN models rely on the last hidden layer which
    limits the learning of user information from the hidden layers. To solve such
    cases, a modified form of LSTM- GRU[[61](#bib.bib61)] has been introduced in many
    POI recommendation models. The GRU has fewer parameters to learn comparing to
    LSTM cells but it has additional gates such as forget gate to compensate for the
    problems mentioned above alongside solving exploding and vanishing gradient problems.
  prefs: []
  type: TYPE_NORMAL
- en: 'A popular model called DeepMove is proposed by Feng et al. [[45](#bib.bib45)]
    . DeepMove actually predicts human mobility which is very similar to our POI recommendation.
    DeepMove has two modules i.e., (1) Multi-modal Recurrent Prediction Framework:
    extract features by jointly embedding spatiotemporal and personal feature into
    a dense representation, which is then fed into GRU unit to model long-range and
    complex dependencies in a trajectory sequence; (2) Historical Attention Module:
    captures multi-level periodicity of human mobility.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Most of the model considers identical impact from different types of contexts
    on the users’ preferences. But their impacts are not identical. To solve this
    problem Manotumruksa et al. [[46](#bib.bib46)] proposed Contextual Attention Recurrent
    Architecture (CARA) model. CARA has four layers i.e., input layer, embedding,
    recurrent layer, output layer. In the recurrent layer this model uses GRU. For
    capturing different contextual impact on the users’ preferences this model uses
    two types of gating mechanisms i.e., (1) Contextual Attention Gate (CAG): controls
    the influence of ordinary and transition contexts on the users’ dynamic preferences
    and (2) Time- and Spatial-based Gate (TSG): considers the time intervals and geographical
    distances between successive check-ins to control the influence of the hidden
    state of previous GRU units.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Kala et al. proposed [[47](#bib.bib47)] Multi-GRU (MGRU) which modifies the
    basic GRU unit by adding two additional gates for a better recommendation. The
    first added gate is Dynamic Contextual-Attention-Gate (DCAG-$\alpha$) which captures
    the effect of dynamic contexts like - time of the day, companion, user’s mood,
    etc. The other gate is Transition-Contextual-Attention-Gate (TCAG-$\beta$) captures
    the effect of transition contexts like - time interval and geographical distance
    from past POI to future POI. MGRU has three layers i.e., (1) input layer: pre-process
    and embeds check-in sequence; (2) recurrent layer: captures sequential patterns
    using MGRU; (3) output layer: recommend the next POI.'
  prefs: []
  type: TYPE_NORMAL
- en: 5.4 Graph Embedding
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Some recent techniques leverage the potentials of Graph Embeddings (GE) that
    learn low-dimensional key features of the dataspace modeled as different forms
    of graphs such as POI-POI, user-POI, and POI-time.
  prefs: []
  type: TYPE_NORMAL
- en: Xie et al.[[90](#bib.bib90)] proposed GE that uses graph embedding for recommending
    next POI. GE jointly captures the sequential effect, geographical influence, temporal
    cyclic effect, and semantic effect in a unified way using four bipartite graphs.
    POI-POI captures sequential effect, POI-Region graph captures geographical influence,
    POI-Time graph captures temporal cyclic effect and POI-Word graph captures semantic
    effect. The model embeds these four relational graphs into a shared low dimensional
    space. Then this model computes the similarity between a users’ query (users’
    embedding, query time, and location) and the POIs that are not visited by that
    user. Most similar POIs are taken for the recommendation.
  prefs: []
  type: TYPE_NORMAL
- en: Liu et al. [[50](#bib.bib50)] proposed SpatioTemporal Aware (STA) which generalizes
    knowledge Graph Embedding [[91](#bib.bib91)] in their model. GE[[90](#bib.bib90)]
    embeds both users and POIs in a common latent space. The users and POIs are inherently
    different objects so that approach is unnatural. On the other hand, STA takes
    location and time as a spatiotemporal pair $<time,location>$ and uses the embedding
    of this pair as a relationship for connecting users and POIs.
  prefs: []
  type: TYPE_NORMAL
- en: Christoforidis et al. [[92](#bib.bib92)] proposed Jointly Learn the Graph Embeddings
    (JLGE) which uses six informational graphs. They are two unipartite (user-user
    and POI-POI) and four bipartite (user-location, user-time, location-user, and
    location-time). This model consists of a three-step process. In the first step,
    the model builds information graphs and weights the edges. In the second step,
    the model jointly learns the embeddings of the users and the POIs into the same
    latent space from these six informational graphs using the LINE model[[93](#bib.bib93)].
    Finally, in the third step, the model personalizes the POI recommendations for
    each user by tuning the influence of the participation networks for the final
    suggestions of the target user.
  prefs: []
  type: TYPE_NORMAL
- en: 'The authors of the JLGE[[92](#bib.bib92)] model extended their work by introducing
    a new model called Recommendations with multiple Network Embeddings (RELINE) [[51](#bib.bib51)].
    The model introduces two new networks: $i)$ Stay Points, which represents the
    locations of the user stayed the most, and $ii)$ Routes, the path followed when
    visiting POIs. Additionally two new bipartite graphs i.e., user-route and POI-stay
    points are added with the previous JLGE[[92](#bib.bib92)] model for better capturing
    the users’ preference dynamics.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In another work, Xiong et al. [[52](#bib.bib52)] proposed a semi-supervised
    learning framework called Dynamic Spatio-temporal POI recommendation (DYSTAL).
    DYSTAL has two key components: a network embedding method and a dynamic factor
    graph model. Network embedding method jointly learns the embedding vectors of
    users and POIs of three subgraphs i.e., POI-POI, user-POI, and user-user to excavate
    complex spatio-temporal patterns of visiting behaviors. The Dynamic factor graph
    model captures different factors including the correlation of users’ vectors and
    POIs’ vectors from the previous embedding layer via the Factor Graph Model (FGM)
    [[94](#bib.bib94)]. This model also considers the textual reviews of users by
    using SentiStrength [[95](#bib.bib95)] tool.'
  prefs: []
  type: TYPE_NORMAL
- en: Zhang et al.[[96](#bib.bib96)] propose Hierarchical Category Transition (HCT)
    which extends the Skip-Gram [[71](#bib.bib71)] model to learn the hierarchical
    dependencies between POIs and categories, and the hierarchical category transition.
    HCT models the dynamic user preference by considering recently visited POIs and
    the associated hierarchical categorical sets. They formulated the dynamic user
    representation by incorporating the representations of POIs as well as the associated
    hierarchical category sets. Besides these models, Chen et al.[[97](#bib.bib97)]
    uses embeddings and context filtering for modeling spatial trajectories. And Qiao
    et al.[[98](#bib.bib98)] uses embeddings for predicting next POIs.
  prefs: []
  type: TYPE_NORMAL
- en: 5.5 GAN
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Generative Adversarial Networks (GAN)[[65](#bib.bib65)] is a popular model in
    deep learning where two Neural Network models compete with each other for giving
    better predictions. A very few papers use GAN in POI recommendation because POI
    recommendation problems do not necessarily fall under the solvable problem domain
    of GAN.
  prefs: []
  type: TYPE_NORMAL
- en: 'Liu et al.[[99](#bib.bib99)] proposed Geographical information-based adversarial
    learning model (Geo-ALM) model that uses two modules: discriminator and generator
    which are essentially different but inspired from the conventional Generative
    Adversarial Network. The pairwise ranking is regarded as a discriminator that
    tries to predict the ranking relationship between generated sample pairs and is
    trained to maximize ranking samples’ likelihood. The generator continually generates
    critical negative samples, which are then coupled with positive samples, forming
    training instances. The framework interchangeably learns the parameters between
    two different modules.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Zhou et al.[[100](#bib.bib100)] proposed Adversarial POI Recommendation (APOIR)
    which combines GAN, GRU, and Matrix factorization for POI recommendation. GRU
    and MF combinedly learn both temporal and sequential preference of users. Two
    competitive components: recommender and discriminator is alternatively optimized
    by training both of them through an objective function using the learned preferences
    of users. The discriminator tries to maximize the probability of correctly distinguishing
    the true check-in locations from the generated recommended POIs by the recommender.
    Gao et al.[[101](#bib.bib101)] also uses GAN networks for identifying individuals
    by exploiting their trajectories.'
  prefs: []
  type: TYPE_NORMAL
- en: 5.6 Other models
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There are some of the other deep learning POI recommendation models that use
    hybrid architectures. In this section, we cover these methods.
  prefs: []
  type: TYPE_NORMAL
- en: Zhao et al.[[23](#bib.bib23)] proposes Geo-Temporal sequential embedding rank
    (Geo-Teaser) which is based on the Skip-Gram [[71](#bib.bib71)] model which learns
    the representations of context POIs given a target POI. The model attempts to
    learn the temporal POI embeddings through maximizing an objective function. The
    geographically hierarchical pairwise preference ranking model uses Bayesian Personalized
    ranking to learn the user preference on POIs. The core Geo-Teaser model is a unified
    framework that combines the temporal embedding model and the pairwise ranking
    method.
  prefs: []
  type: TYPE_NORMAL
- en: Chang et al.[[102](#bib.bib102)] proposed a somewhat different approach called
    Content-Aware hierarchical POI Embedding (CAPE) for POI recommendation. Most models
    do not use the text content of POIs, since most of the datasets do not contain
    such textual content. The authors thus generated a new dataset from Instagram
    which contains a textual description of POI written by the users. CAPE actually
    is a POI embedding model that consists of a check-in context layer and text content
    layer. The check-in content layer captures the geographical influence of POIs,
    while the text content layer captures the characteristics of POIs.
  prefs: []
  type: TYPE_NORMAL
- en: A different type of work on missing POI check-in identification by Xi et al.[[103](#bib.bib103)]
    is also notable in this context. Here, the authors proposed a model called Bi-directional
    Spatio-Temporal Dependence and users’ Dynamic Preferences (Bi-STDDP) to capture
    complex global spatial information, local temporal dependency relationships and
    users’ dynamic preferences. Bi-STDDP takes two check-in lists as input; one list
    for before the missing check-in, and one for after. Besides, this model also uses
    user-embedding, POI-embedding, and temporal patterns in the model.
  prefs: []
  type: TYPE_NORMAL
- en: 'Zhou et al.[[104](#bib.bib104)] proposed a hybrid architecture called Topic-Enhanced
    Memory Network (TEMN). TEMN consists of three key parts: a Memory Network (MN),
    Temporal Latent Dirichlet Allocation (TLDA) [[105](#bib.bib105)] and geographical
    modeling. MN learns the complex interaction between user and POIs and captures
    neighbourhood-based interests of a user. TLDA is an unsupervised generative probabilistic
    model which captures temporal preferences and inner interest of users. This module
    provides the pattern-user probability distribution. The distributions of venues
    and time slots associated with each pattern can also be estimated through TLDA.
    TLDA and MN can jointly learn characteristics of users and POIs. The Geographical
    model captures the geographical influence.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Recent researches show that hierarchical structures can be modeled using hyperbolic
    representation methods [[106](#bib.bib106), [107](#bib.bib107), [108](#bib.bib108)].
    For that reason, Feng et al. [[109](#bib.bib109)] propose a novel Hyperbolic Metric
    Embedding (HME) approach for the next-POI recommendation task. HME can be divided
    into two part i.e., (1) Hyperbolic Metric Embedding: uses Poincaré ball model
    [[107](#bib.bib107)] to learn four different relationships (POI-POI, POI-User,
    POI-Category, and POI-Region) by projecting them in a shared hyperbolic space;
    (2) Recommending with Hyperbolic Embeddings: combines the user preferences and
    POI sequential transitions in the Poincaré ball model an Einstein midpoint aggregation
    method [[110](#bib.bib110), [111](#bib.bib111)]. The geographical distance is
    also considered in this model because users tend to visit the POI that are close
    to them [[112](#bib.bib112)].'
  prefs: []
  type: TYPE_NORMAL
- en: Along with the aforementioned models, recent works have proposed some advanced
    models that take advantage of multiple techniques to improve performance. Zhang
    et al.[[113](#bib.bib113)] use embeddings for geographical influence modeling.
    Wang et al.[[114](#bib.bib114)] use embeddings for predicting the next POIs. Ding
    et al.[[115](#bib.bib115)] use DNN for time-specific POI recommendation. The CNN
    has been studied in terms of POI recommendation in some prior works [[35](#bib.bib35),
    [36](#bib.bib36)]. On the other hand, Massimo et al.[[116](#bib.bib116)] also
    experimented with Inverse Reinforcement Learning (IRL) [[117](#bib.bib117), [118](#bib.bib118),
    [119](#bib.bib119)] to analyze the performance of IRL in POI recommendation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Summary of different paradigms of deep learning models: By analyzing all the
    aforementioned models, we can get a comprehensive picture of how different deep
    learning paradigms have been utilized to handle different aspects of POI recommendation
    models. Since successful recommendation fundamentally depends on historical POI
    information, sequential models (i.e., RNN, LSTM) have been primarily used in recent
    POI recommendation models. Among them, LSTM is the most popular approach due to
    its long term sequential information capturing capability. A large body of works
    has experimented with minor modifications of LSTMs to improve long and short-term
    modeling preferences. Thus, sequence information capture has been the center of
    interest in POI recommendation models. Recent state-of-the-art models are leveraging
    the self-attention transformer mechanism for POI recommendation, which greatly
    suppresses the problems associated with very long sequences. They are also computationally
    parallelizable. Besides capturing historical sequence information, researchers
    have also analyzed the spatial influence in this regard. Due to the nature of
    check-in data, users and POIs form a relationship graph that can be highly useful
    to model the spatial dependency. Thus, graph embedding methods have garnered attention
    in the past couple of years in POI recommendation. LSTM coupled with these graph
    embedding models thus opens up the opportunity to capture both sequential and
    spatiotemporal features from given data. Advanced models have also utilized adversarial
    learning models and specialized embedding methods to achieve state-of-the-art
    performance results.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Table 2: Categorization of Papers'
  prefs: []
  type: TYPE_NORMAL
- en: '| Category | Subcategory | Year | Reference |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Basic RNN | - | 2016 | ST-RNN[[37](#bib.bib37)] |'
  prefs: []
  type: TYPE_TB
- en: '| 2018 | MCI-DNN[[73](#bib.bib73)] |'
  prefs: []
  type: TYPE_TB
- en: '| 2020 | Flashback[[38](#bib.bib38)], ASPPA[[39](#bib.bib39)], LLRec[[40](#bib.bib40)],
    DRLM[[72](#bib.bib72)] |'
  prefs: []
  type: TYPE_TB
- en: '| LSTM | Basic LSTM | 2018 | HST-LSTM[[74](#bib.bib74)], TMCA[[42](#bib.bib42)],
    SLSTM[[83](#bib.bib83)] |'
  prefs: []
  type: TYPE_TB
- en: '| 2019 | LSPL[[75](#bib.bib75)], ASTEN[[77](#bib.bib77)], ATST-LSTM[[80](#bib.bib80)],
    MMR[[81](#bib.bib81)], SGBA[[82](#bib.bib82)] |'
  prefs: []
  type: TYPE_TB
- en: '| 2020 | PLSPL[[76](#bib.bib76)], LSTPM[[41](#bib.bib41)], iMTL[[43](#bib.bib43)],
    CatDM[[44](#bib.bib44)], ARNN[[78](#bib.bib78)], STAR[[79](#bib.bib79)] |'
  prefs: []
  type: TYPE_TB
- en: '| Bi-LSTM | 2020 | GT-HAN[[84](#bib.bib84)], t-LocPred[[86](#bib.bib86)], CAPRE[[87](#bib.bib87)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| Modified LSTM | 2020 | STGN[[88](#bib.bib88)] |'
  prefs: []
  type: TYPE_TB
- en: '| Self-Attention | 2020 | GeoSAN[[48](#bib.bib48)], SANST[[49](#bib.bib49)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| GRU | - | 2018 | DeepMove[[45](#bib.bib45)], CARA[[46](#bib.bib46)] |'
  prefs: []
  type: TYPE_TB
- en: '| 2019 | MGRU[[47](#bib.bib47)] |'
  prefs: []
  type: TYPE_TB
- en: '| Graph Embedding | - | 2016 | GE[[90](#bib.bib90)] |'
  prefs: []
  type: TYPE_TB
- en: '| 2017 | STA[[50](#bib.bib50)] |'
  prefs: []
  type: TYPE_TB
- en: '| 2018 | JLGE[[92](#bib.bib92)] |'
  prefs: []
  type: TYPE_TB
- en: '| 2019 | RELINE[[51](#bib.bib51)] |'
  prefs: []
  type: TYPE_TB
- en: '|  |  | 2020 | DYSTAL[[52](#bib.bib52)], HCT[[96](#bib.bib96)], UP2VEC[[98](#bib.bib98)],
    HMRM[[97](#bib.bib97)] |'
  prefs: []
  type: TYPE_TB
- en: '| GAN | - | 2019 | Geo-ALM[[99](#bib.bib99)], APOIR[[100](#bib.bib100)] |'
  prefs: []
  type: TYPE_TB
- en: '| 2020 | AdattTUL[[101](#bib.bib101)] |'
  prefs: []
  type: TYPE_TB
- en: '| Others | - | 2017 | Geo-Teaser[[23](#bib.bib23)], LCE[[114](#bib.bib114)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| 2018 | CAPE[[102](#bib.bib102)], ST-DME[[115](#bib.bib115)] |'
  prefs: []
  type: TYPE_TB
- en: '| 2019 | Bi-STDDP[[103](#bib.bib103)], TEMN[[104](#bib.bib104)], SSSER [[35](#bib.bib35)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| 2020 | HME[[109](#bib.bib109)], MPR[[120](#bib.bib120)], PGIM[[113](#bib.bib113)],
    CEM [[36](#bib.bib36)] |'
  prefs: []
  type: TYPE_TB
- en: 'Table 3: Model summery and Performance of the state-of-the-art method'
  prefs: []
  type: TYPE_NORMAL
- en: '| Model, Venue year [ref] | Method Summery | Performance |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| ST-RNN, AAAI 2016  [[37](#bib.bib37)] | Use time-specific and distance-specific
    transition matrix for capturing temporal cyclic effect and geographical influence
    respectively. | Gowalla: Rec@5¹=0.1524, Rec@10=0.2714. GTD: Rec@5=0.4986, Rec@10=0.6812
    |'
  prefs: []
  type: TYPE_TB
- en: '| Flashback, IJCAI 2020  [[38](#bib.bib38)] | Model sparse user mobility data
    by doing flashbacks on hidden states in RNNs and uses the weighted average of
    historical hidden states for better capturing spatio-temporal effects. | Foursquare:
    Acc²@5=0.5399, Acc@10=0.6236. Gowalla: Acc@5=0.2754, Acc@10=0.3479. |'
  prefs: []
  type: TYPE_TB
- en: '| ASPPA, IJCAI 2020  [[39](#bib.bib39)] | Automatically identify the semantic
    subsequnce of POIs and discovers their sequential patterns by hierarchically learning
    the latent structure from check-in list and power-law attention mechanism. | Foursquare
    (US): Acc@10=0.3371, Acc@20=0.3950. Gowalla: Acc@10=0.2947, Acc@20=0.3573. |'
  prefs: []
  type: TYPE_TB
- en: '| LLRec (Teacher), WWW 2020  [[40](#bib.bib40)] | Capture long-term, short-term
    preferences, textual feature of POIs and complex dependencies among user preferences
    by using embedding, recurrent component and attention mechanism. | Foursquare:
    Acc@10=0.3542, Acc@20=0.4594 Gowalla: Acc@10=0.3874, Acc@20=0.4781 |'
  prefs: []
  type: TYPE_TB
- en: '| HST-LSTM, IJCAI 2018  [[74](#bib.bib74)] | Use hierarchical model using LSTM
    to encode the periodicity of people’s movement. | Baidu Map: Acc@10=0.4847, Acc@20=0.5657
    |'
  prefs: []
  type: TYPE_TB
- en: '| TMCA, ICDM 2018  [[42](#bib.bib42)] | Capture complex spatial and temporal
    dependencies among historical check-in activities by using LSTM based encoder-decoder
    model, attention mechanism and embedding method. | Gowalla: Rec@5=0.21926, Rec@10=0.27725.
    Foursquare: Rec@5=0.02870, Rec@10=0.04809. |'
  prefs: []
  type: TYPE_TB
- en: '| LSPL, CIKM 2019  [[75](#bib.bib75)] | Capture both sequential and contextual
    information via long-term and short-term preference learning. | Foursquare (NYC):
    Prec³@10=0.3901, Prec@20=0.4461 Foursquare (TKY): Prec@10=0.3986, Prec@20=0.4596.
    |'
  prefs: []
  type: TYPE_TB
- en: '| PLSPL, TKDE 2020  [[76](#bib.bib76)] | Extend their previous work LSPL [[75](#bib.bib75)]
    by introducing user-based linear combination unit which better captures user preferences.
    | Foursquare (NYC): Prec@10=0.3953, Prec@20=0.4475 Foursquare (TKY): Prec@10=0.4020,
    Prec@20=0.4664. |'
  prefs: []
  type: TYPE_TB
- en: '| ASTEN, PAKDD 2019  [[77](#bib.bib77)] | Capture the sequential, temporal
    and geographical influence by using LSTM and attention mechanism. | Foursquare
    (US): Rec@5=0.328, Rec@10=0.414 Foursquare (EU): Rec@5=0.281, Rec@10=0.35'
  prefs: []
  type: TYPE_NORMAL
- en: 'Gowalla: Rec@5=0.152, Rec@10=0.266 |'
  prefs: []
  type: TYPE_NORMAL
- en: '| LSTPM, AAAI 2020  [[41](#bib.bib41)] | Capture long-term preference modeling
    by using a non-local network and short-term preference modeling by using geo-dialated
    LSTM. | Foursquare (NY): Rec@5=0.3372, Rec@10=0.4091 Gowalla: Rec@5=0.2021, Rec@10=0.2510
    |'
  prefs: []
  type: TYPE_TB
- en: '| iMTL, IJCAI 2020  [[43](#bib.bib43)] | Use a two-channel encoder and a task-specific
    decoder for capturing the sequential correlations of activities and location preferences.
    | POI Prediction: Foursquare (CLT): Rec@10=0.0534, Map⁴@10=0.0238'
  prefs: []
  type: TYPE_NORMAL
- en: 'Foursquare (CAL): Rec@10=0.0691, Map@10=0.0443'
  prefs: []
  type: TYPE_NORMAL
- en: 'Foursquare (PHO): Rec@10=0.0769, Map@10=0.0352 |'
  prefs: []
  type: TYPE_NORMAL
- en: '| CatDM, WWW 2020  [[44](#bib.bib44)] | capture temporal influence, geographical
    influence and overcome data sparsity by using two LSTM based deep encoder, two
    filter, metric embedding and attention mechanism. | Foursquare (NYC): Rec@5=0.2407,
    Rec@10=0.3113 Foursquare (TKY): Rec@5=0.2148, Rec@10=0.2739. |'
  prefs: []
  type: TYPE_TB
- en: '| ARNN, AAAI 2020  [[40](#bib.bib40)] | Capture data sparsity by using new
    concept called transition regularity. Also capture sequential, spatial, temporal,
    semantic influence by using embedding, knowledge graph, LSTM and attention mechanism.
    | Foursquare (NY): Acc@10=0.4162, Acc@20=0.4393 Foursquare (TK): Acc@10=0.4285,
    Acc@20=0.4864'
  prefs: []
  type: TYPE_NORMAL
- en: 'Gowalla (SF): Acc@10=0.2336, Acc@20=0.2530 |'
  prefs: []
  type: TYPE_NORMAL
- en: '| GT-HAN, Neurocomputing 2020  [[84](#bib.bib84)] | Capture great variation
    in geographical co-influence across POIs, temporal dependency and sequence dependency
    in check-in list by using embedding layer, Bi-LSTM and attention mechanism. |
    Foursquare: AUC⁸=0.9661, acc@5: 0.13-0.15, acc@10: 0.17-0.19, acc@20: 0.23-0.25'
  prefs: []
  type: TYPE_NORMAL
- en: (depending on latent dimensionality) |
  prefs: []
  type: TYPE_NORMAL
- en: '| t-LocPred, TKDE 2020  [[86](#bib.bib86)] | capture a users’ coarse-grained
    spatiotemporal movement pattern by using CNN and ConvLSTM and fine-grained POI
    check-in information by using spatial-aware memory-augmented LSTM with time-aware
    attention. | Gowalla: MRR⁵=0.247 (C=6, all), Weeplaces: MRR=0.277 (C=6, all),'
  prefs: []
  type: TYPE_NORMAL
- en: 'Brightkite: MRR=0.388 (C=4, all) |'
  prefs: []
  type: TYPE_NORMAL
- en: '| CAPRE, SDM 2020  [[87](#bib.bib87)] | Capture the various perspectives of
    user about POIs along with content-aware and geographical user behavior pattern
    by using character-level CNN, multi-head attention, Bi-LSTM and MLP. | Foursquare:
    Rec@5=0.1724, Rec@10=0.2084 Instagram: Rec@5=0.2934, Rec@10=0.3588 |'
  prefs: []
  type: TYPE_TB
- en: '| STGCN, AAAI 2019  [[88](#bib.bib88)] | Modify the basic LSTM model slightly
    by introducing new gates and cell to capture short-term and long-term preference
    easily. | Foursquare (CA): Acc@5=0.1308, Acc@10=0.1612. Foursquare (SIN): Acc@5=0.2737,
    Acc@10=0.3017.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Gowalla: Acc@5=0.1644, Acc@10=0.2020.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Brightkite: Acc@5=0.4953, Acc@10=0.5231. |'
  prefs: []
  type: TYPE_NORMAL
- en: '1'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recall@K is the presence of the correct POI among the top K recommended POIs
    [[41](#bib.bib41)].
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '2'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Acc@k is 1 if the visited POI appears in the set of top-K recommendation POIs
    and 0 otherwise [[88](#bib.bib88)]. The overall Acc@K is calculated as the average
    value of all testing instances. Also known as Accouracy@K or Hit Rate@k or Hit
    Ratio@k or HR@k.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '3'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Precision@K indicates that whether the ground truth POI appears in the top-k
    recommended POIs [[75](#bib.bib75)].
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '4'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MAP (Mean Average Precision) measures the order of our recommendation list [[75](#bib.bib75)].
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '5'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MRR is the average reciprocal rank of positive examples. This metric reflects
    the overall ranking ability of the model [[39](#bib.bib39)].
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '| Model, Venue year [ref] | Method Summery | Performance |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| GeoSAN, KDD 2020  [[48](#bib.bib48)] | Resolve the sparsity issue by introducing
    a new loss function and represent the hierarchical gridding of each GPS point
    with a self-attention based geography encoder for better use of geographical information.
    | Foursquare: Acc@5=0.3735, Acc@10=0.4867. Gowalla: Acc@5=0.4951, Acc@10=0.6028.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Brightkite: Acc@5=0.5258, Acc@10=0.6425. |'
  prefs: []
  type: TYPE_NORMAL
- en: '| SANST, arXiv 2020  [[49](#bib.bib49)] | Capture the spatial-temporal and
    sequential patterns by using embedding, self-attention network (transformer network),
    Bi-LSTM. | Gowalla: Acc@10=0.2273, Los Angeles: Acc@10=0.3941,'
  prefs: []
  type: TYPE_NORMAL
- en: 'Singapore: Acc@10=0.2417 |'
  prefs: []
  type: TYPE_NORMAL
- en: '| DeepMove, WWW 2018  [[45](#bib.bib45)] | Capture the complex dependencies
    and multi-level periodicity nature of human by using embedding, GRU and attention
    mechanism. | Foursquare (NY): Rec@5=0.3372, Rec@10=0.4091\. Gowalla: Rec@5=0.2021,
    Rec@10=0.2510 |'
  prefs: []
  type: TYPE_TB
- en: '| CARA, SIGIR 2018  [[46](#bib.bib46)] | Capture the different types of impact
    of different contextual information by using embedding, GRU and two gating mechanism.
    | Foursquare: Acc@10=0.8851, Yelp: Acc@10=0.5587, Brightkite: Acc@10=0.7385 |'
  prefs: []
  type: TYPE_TB
- en: '| MGRU, JAIHC 2019  [[47](#bib.bib47)] | Capture dynamic and transition context
    using Multi-GRU (Two special gate are added with GRU). | Foursquare: Rec@10=0.9214,
    Rec@15=0.9214 Gowalla: Rec@10=0.8512, Rec@15=0.8765 |'
  prefs: []
  type: TYPE_TB
- en: '| GE, CIKM 2016  [[90](#bib.bib90)] | Capture data sparsity, context awareness,
    cold start, dynamic of personal preference by using the embedding of four graphs
    into a shared low dimensional space. | Foursquare: Acc@10=0.372, Acc@20=0.435\.
    Gowalla: Acc@10=0.462, Acc@20=0.533. |'
  prefs: []
  type: TYPE_TB
- en: '| STA, arXiv 2017  [[50](#bib.bib50)] | This paper generalizes the knowledge
    Graph Embedding and takes location and time as a spatiotemporal pair for connecting
    users and POIs. | Foursquare: Acc@10=0.439, Acc@20=0.486\. Gowalla: Acc@10=0.488,
    Acc@20=0.540. |'
  prefs: []
  type: TYPE_TB
- en: '| JLGE, DSAA 2018  [[92](#bib.bib92)] | Jointly learn the embeddings of the
    users and the POIs into the same latent space from the six informational graphs
    using LINE model[[93](#bib.bib93)]. | Foursquare: Acc@10=0.410, Acc@20=0.462\.
    Weeplaces: Acc@10=0.488, Acc@20=0.536. |'
  prefs: []
  type: TYPE_TB
- en: '| RELINE, arXiv 2019  [[51](#bib.bib51)] | This paper extends the previously
    discussed paper [[92](#bib.bib92)] by adding two new networks: i.e., stay points
    and routes. | Foursquare: Acc@10=0.410, Acc@20=0.462. Weeplaces: Acc@10=0.488,
    Acc@20=0.536.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Gowalla: Acc@10=0.518, Acc@20=0.556. |'
  prefs: []
  type: TYPE_NORMAL
- en: '| Geo-Teaser, WWW 2017  [[23](#bib.bib23)] | Use Skip-Gram model for temporal
    POI embedding and Bayesian Personalized Ranking for pairwise ranking of POIs.
    A unified framework combines the temporal POI embedding and pairwise ranking model.
    | Foursquare: Prec@5=0.13, Prec@10=0.1, Rec@5=0.15, Rec@10=0.2'
  prefs: []
  type: TYPE_NORMAL
- en: 'Gowalla: Prec@5=0.16, Prec@10=0.13,'
  prefs: []
  type: TYPE_NORMAL
- en: Rec@5=0.07, Rec@10=0.12 |
  prefs: []
  type: TYPE_NORMAL
- en: '| DYSTAL, Information Processing and Management 2020  [[52](#bib.bib52)] |
    Capture complex spatio-temporal patterns of visiting behaviors by jointly learning
    the effects of users’ social relationships, textual reviews, and POIs’ geographical
    proximity using a network embedding method and dynamic factor graph model. | Foursquare
    (SIN): Acc@10=0.232, Rec@10=0.152, Yelp: Acc@10=0.206, Rec@10=0.098 |'
  prefs: []
  type: TYPE_TB
- en: '| HCT, Information Sciences, Elsevier 2020[[96](#bib.bib96)] | Utilize Skip-Gram
    model to model the categorical transitions at different layers of categorical
    hierarchies as well as the hierarchical dependencies between POIs and categories
    | Foursquare(SIN): Prec@5=0.613 Rec@5=0.0403 Foursquare(NYC): Prec@5=0.0585, Rec@5=0.0352'
  prefs: []
  type: TYPE_NORMAL
- en: 'Foursquare(LA): Prec@5=0.0653, Rec@5=0.0305 |'
  prefs: []
  type: TYPE_NORMAL
- en: '| APOIR, 2019  [[100](#bib.bib100)] | Use matrix factorization and GRU to learn
    user preferences and train two competitive component: recommender and discriminator
    to generate prediction. | Yelp: Prec@5=0.1, Rec@5=0.16, MAP@5=0.233, NDCG⁶@5=0.094
    |'
  prefs: []
  type: TYPE_TB
- en: '| CAPE, IJCAI 2018  [[102](#bib.bib102)] | Use text content layer and check-in
    content layer for embeds the POIs and generates their own dataset. | With STELLAR:
    Rec@5=0.2384, Rec@10=0.2989 With LSTM: Rec@5=0.2412, Rec@10=0.3054'
  prefs: []
  type: TYPE_NORMAL
- en: 'With GRU: Rec@5=0.2433, Rec@10=0.3079'
  prefs: []
  type: TYPE_NORMAL
- en: 'With ST-RNN: Rec@5=0.2239, Rec@10=0.2601 |'
  prefs: []
  type: TYPE_NORMAL
- en: '| TEMN, KDD 2019  [[104](#bib.bib104)] | Capture both neighbourhood-based and
    global preferences by using a combination of supervised and unsupervised learning.
    | WeChat (GPR): TEMN (GPR): Acc@5=0.70389, Acc@10=0.81752.'
  prefs: []
  type: TYPE_NORMAL
- en: 'TEMN (CPR): Acc@5=0.72876, Acc@10=0.83398. |'
  prefs: []
  type: TYPE_NORMAL
- en: '| HME, SIGIR 2020  [[109](#bib.bib109)] | Capture POI sequential transitions,
    geographical, semantic and user preferences by using hyperbolic metric embedding
    along with Poincaré ball and Einstein midpoint aggregation method. | Foursquare
    (NYC): Rec@5=0.0962, Rec@10=0.1371 Foursquare (TKY): Rec@5=0.1527, Rec@10=0.2172\.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Gowalla (Houston): Rec@5=0.1533, Rec@10=0.2318 |'
  prefs: []
  type: TYPE_NORMAL
- en: '6'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NDCG (Normalized Discounted Cumulative Gain) measures the quality of top-K ranking
    list [[41](#bib.bib41)].
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Table 4: Descriptions of Datasets'
  prefs: []
  type: TYPE_NORMAL
- en: '| Dataset name | Reference | Date | Region | #User | #POI | #Check-in |'
  prefs: []
  type: TYPE_TB
- en: '| Foursquare | Flashback[[38](#bib.bib38)] | Apr 2012 - Jan 2014 | World |
    46065 | 69005 | 9450342 |'
  prefs: []
  type: TYPE_TB
- en: '| ASPPA[[39](#bib.bib39)] | Apr 2012 - Sep 2013 | US (except Alaska, Hawaii)
    | 49005 | 206097 | 425691 |'
  prefs: []
  type: TYPE_TB
- en: '| LSPL[[75](#bib.bib75)], PLSPL[[76](#bib.bib76)] | Apr 2012 - Feb 2013 | New
    York | 1083 | 38333 | 227428 |'
  prefs: []
  type: TYPE_TB
- en: '| CatDM[[44](#bib.bib44)], ARNN[[78](#bib.bib78)], Bi-STDDP[[103](#bib.bib103)],
    HME[[109](#bib.bib109)] | Tokyo | 2293 | 61858 | 573703 |'
  prefs: []
  type: TYPE_TB
- en: '| ASTEN[[77](#bib.bib77)] | - | USA | 21878 | 21651 | 569091 |'
  prefs: []
  type: TYPE_TB
- en: '| EU | 15387 | 115567 | 3227845 |'
  prefs: []
  type: TYPE_TB
- en: '| LSTPM[[41](#bib.bib41)] | Feb 2010 - Jan 2011 | New York | 934 | 9296 | 52983
    |'
  prefs: []
  type: TYPE_TB
- en: '| iMTL[[43](#bib.bib43)] | Apr 2012 - Sep 2013 | Charlotte | 1580 | 1791 |
    20940 |'
  prefs: []
  type: TYPE_TB
- en: '| Calgary | 301 | 985 | 13954 |'
  prefs: []
  type: TYPE_TB
- en: '| Phoenix | 1623 | 2441 | 22620 |'
  prefs: []
  type: TYPE_TB
- en: '| GT-HAN[[84](#bib.bib84)], APOIR[[100](#bib.bib100)] | Apr 2012 - Sep 2013
    | USA | 24941 | 28593 | 1196248 |'
  prefs: []
  type: TYPE_TB
- en: '| CAPRE[[87](#bib.bib87)] | - | - | 4163 | 121142 | 483813 |'
  prefs: []
  type: TYPE_TB
- en: '| STGN[[88](#bib.bib88)] | Jan 2010 - Feb 2011 | California | 49005 | 206097
    | 425691 |'
  prefs: []
  type: TYPE_TB
- en: '| Aug 2010 - Jul 2011 | Singapore | 30887 | 18995 | 860888 |'
  prefs: []
  type: TYPE_TB
- en: '| GeoSAN[[48](#bib.bib48)] | Apr 2012 - Jan 2014 | World | 12695 | 37344 |
    1941959 |'
  prefs: []
  type: TYPE_TB
- en: '| DeepMove[[45](#bib.bib45)] | Feb 2010 - Jan 2011 | New York | 15639 | 43379
    | 293559 |'
  prefs: []
  type: TYPE_TB
- en: '| CARA[[46](#bib.bib46)] | - | World | 10766 | 10695 | 1336278 |'
  prefs: []
  type: TYPE_TB
- en: '| MGRU[[47](#bib.bib47)] | Aug 2010 - Jul 2011 | Singapore | 4630 | 6176 |
    201525 |'
  prefs: []
  type: TYPE_TB
- en: '| GE[[90](#bib.bib90)] | Sep 2010 - Jan 2011 | World | 114508 | 114,508 | 1434668
    |'
  prefs: []
  type: TYPE_TB
- en: '| STA[[50](#bib.bib50)], JLGE[[92](#bib.bib92)], RELINE[[51](#bib.bib51)] |
    Sep 2010 - Jan 2011 | USA | 114508 | 62462 | 1434668 |'
  prefs: []
  type: TYPE_TB
- en: '| Geo-ALM[[99](#bib.bib99)] | Aug 2010 - Jul 2011 | Singapore | 2321 | 5596
    | 194108 |'
  prefs: []
  type: TYPE_TB
- en: '| DYSTAL[[52](#bib.bib52)] | - | Singapore | 74250 | - | - |'
  prefs: []
  type: TYPE_TB
- en: '| HCT[[96](#bib.bib96)] | - | Singapore | 2676 | 1633 | 116757 |'
  prefs: []
  type: TYPE_TB
- en: '| New York City | 1982 | 2454 | 187750 |'
  prefs: []
  type: TYPE_TB
- en: '| Los Angeles | 2109 | 1576 | 70189 |'
  prefs: []
  type: TYPE_TB
- en: '| Geo-Teaser[[23](#bib.bib23)] | Jan 2011 - Jul 2011 | World | 10034 | 16561
    | 865647 |'
  prefs: []
  type: TYPE_TB
- en: '| Gowalla | ST-RNN[[37](#bib.bib37)] | Feb 2009 - Oct 2010 | World | 10997
    | - | 6400000 |'
  prefs: []
  type: TYPE_TB
- en: '| Flashback[[38](#bib.bib38)] | Feb 2009 - Oct 2010 | World | 52979 | 121851
    | 3300986 |'
  prefs: []
  type: TYPE_TB
- en: '| ASPPA[[39](#bib.bib39)] | Feb 2009 - Oct 2010 | World | 4996 | 6871 | 245157
    |'
  prefs: []
  type: TYPE_TB
- en: '| LLRec[[40](#bib.bib40)], RELINE[[51](#bib.bib51)] | Jan 2009 - Aug 2011 |
    World | 319063 | 2844076 | 36001959 |'
  prefs: []
  type: TYPE_TB
- en: '| TMCA[[42](#bib.bib42)] | Feb 2009 - Oct 2010 | World | 22209 | 50569 | 1493799
    |'
  prefs: []
  type: TYPE_TB
- en: '| ASTEN[[77](#bib.bib77)] | Feb 2009 - Oct 2010 | World | 52484 | 115567 |
    3227845 |'
  prefs: []
  type: TYPE_TB
- en: '| LSTPM[[41](#bib.bib41)] | Feb 2009 - Oct 2010 | World | 5802 | 40868 | 301080
    |'
  prefs: []
  type: TYPE_TB
- en: '| ARNN[[78](#bib.bib78)] | Feb 2009 - Oct 2010 | San Fransisco | 170 | 7340
    | 32058 |'
  prefs: []
  type: TYPE_TB
- en: '| GT-HAN[[84](#bib.bib84)], STGN[[88](#bib.bib88)], APOIR[[100](#bib.bib100)]
    | Feb 2009 - Oct 2010 | World | 18737 | 32510 | 1278274 |'
  prefs: []
  type: TYPE_TB
- en: '| t-LocPred | Jan 2009 - Oct 2010 | Goteborg (Sweden) | 5342 | 12229 | 103787
    |'
  prefs: []
  type: TYPE_TB
- en: '| GeoSAN[[48](#bib.bib48)] | - | - | 31708 | 131329 | 2963373 |'
  prefs: []
  type: TYPE_TB
- en: '| SANST[[49](#bib.bib49)], Geo-ALM[[99](#bib.bib99)] | Feb 2009 - Oct 2010
    | California, Nevada | 10162 | 24250 | 456988 |'
  prefs: []
  type: TYPE_TB
- en: '| MGRU[[47](#bib.bib47)] | Nov 2009 - Oct 2010 | Austin | 2321 | 5596 | 194108
    |'
  prefs: []
  type: TYPE_TB
- en: '| GE[[90](#bib.bib90)], STA[[50](#bib.bib50)], Bi-STDDP[[103](#bib.bib103)]
    | Feb 2009 - Oct 2010 | World | 107092 | 1280969 | 6442892 |'
  prefs: []
  type: TYPE_TB
- en: '| Geo-Teaser[[23](#bib.bib23)] | Jan 2011 - Jul 2011 | World | 3240 | 33578
    | 556453 |'
  prefs: []
  type: TYPE_TB
- en: '| HME[[109](#bib.bib109)] | Nov 2010 - Jun 2011 | Houston | 4627 | 15135 |
    362783 |'
  prefs: []
  type: TYPE_TB
- en: '| Brightkite | t-LocPred[[86](#bib.bib86)] | May 2008 - Oct 2010 | Tokyo |
    2263 | 37196 | 183298 |'
  prefs: []
  type: TYPE_TB
- en: '| STGN[[88](#bib.bib88)] | May 2008 - Oct 2010 | World | 51406 | 772967 | 4747288
    |'
  prefs: []
  type: TYPE_TB
- en: '| GeoSAN[[48](#bib.bib48)] | Apr 2008 - Oct 2010 | World | 5247 | 48181 | 1699579
    |'
  prefs: []
  type: TYPE_TB
- en: '| CARA[[46](#bib.bib46)] | Apr 2008 - Oct 2010 | World | 14374 | 5050 | 681024
    |'
  prefs: []
  type: TYPE_TB
- en: '| WeChat | TEMN[[104](#bib.bib104)] | Sep 2016 - Aug 2017 | Beijing | 28566
    | 13826 | 509589 |'
  prefs: []
  type: TYPE_TB
- en: '| 75973 | 28183 | 5644965 |'
  prefs: []
  type: TYPE_TB
- en: '| Dataset name | Reference | Date | Region | #User | #POI | #Check-in |'
  prefs: []
  type: TYPE_TB
- en: '| Yelp | TMCA[[42](#bib.bib42)] | Jan 2014 - Jun 2017 | World | 11564 | 18683
    | 492489 |'
  prefs: []
  type: TYPE_TB
- en: '| CARA[[46](#bib.bib46)] | - | World | 38945 | 34245 | 981379 |'
  prefs: []
  type: TYPE_TB
- en: '| DYSTAL[[52](#bib.bib52)] | - | Las Vegas | 337084 | 26809 | 1605396 |'
  prefs: []
  type: TYPE_TB
- en: '| APOIR[[100](#bib.bib100)] | - | World | 30887 | 18995 | 860888 |'
  prefs: []
  type: TYPE_TB
- en: '| Baidu | HST-LSTM[[74](#bib.bib74)] | Dec 2015 - Dec 2015 | Peking | - | -
    | - |'
  prefs: []
  type: TYPE_TB
- en: '| Instagram | CAPRE[[87](#bib.bib87)], CAPE[[102](#bib.bib102)] | - | New York
    City | 78233 | 13187 | 2216631 |'
  prefs: []
  type: TYPE_TB
- en: '| Weeplaces | LLRec[[40](#bib.bib40)], JLGE[[92](#bib.bib92)], RELINE[[51](#bib.bib51)]
    | Nov 2003 - Jun 2011 | World | 15799 | 971309 | 7658368 |'
  prefs: []
  type: TYPE_TB
- en: '| t-LocPred[[86](#bib.bib86)] | Nov 2003 - Jun 2011 | New York City | 4855
    | 38537 | 900906 |'
  prefs: []
  type: TYPE_TB
- en: 6 POI Sequence Recommendation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: So far we’ve primarily discussed the next POI recommendation models. However,
    some state-of-the-art methods also recommend a sequence of POIs that are more
    likely to be visited by the user in the future. In POI sequence recommendation
    the input is a sequence of check-ins or check-in list and the output also a check-in
    list. So, we can think of this recommendation as a sequence to sequence (Seq2Seq)
    task. Several state-of-the-art methods have been proposed in recent years for
    solving the POI sequence recommendation task. Here we briefly discuss some of
    them.
  prefs: []
  type: TYPE_NORMAL
- en: Baral et al. [[121](#bib.bib121)] proposed Contextualized Location Sequence
    Recommender (CLoSe) which incorporates different contexts (e.g., social, temporal,
    categorical, and spatial) into the hidden and output layer. This model uses either
    the simple RNN or the LSTM model. The results show that CLoSe-LSTM performs better
    than CLoSe-RNN.
  prefs: []
  type: TYPE_NORMAL
- en: Huang et al. [[122](#bib.bib122)] proposed Dynamic Recommendation of POI Sequence
    (DRPS) which is based on DNN. This model consists of an encoder and a decoder
    module and for getting better performance, this model takes into account the POI
    embedding feature, the geographical and categorical influences of historical trajectories,
    and the positional encoding. This paper also proposed two new evaluation metrics
    for better performance evaluation.
  prefs: []
  type: TYPE_NORMAL
- en: In another work, Lu et al. [[123](#bib.bib123)] proposed Graph-based Latent
    Representation model (GLR) which can capture geographical influence, temporal
    influence, user preference, etc. GLR learns the latent vectors based on word2vec
    [[124](#bib.bib124)] technique. Here, the authors added user preference, temporal
    successive transition influence, geographic influence, and LSTM [[60](#bib.bib60)]
    with GLR model and propose a new model GLR_GT_LSTM which can capture users’ complex
    successive transition behavior.
  prefs: []
  type: TYPE_NORMAL
- en: Alongside these models, Wang et al. [[125](#bib.bib125)], Baral et al. (HiCaPS)
    [[126](#bib.bib126)], Lin et al. [[127](#bib.bib127)] also proposed different
    POI sequence recommendation models. On the other hand, Li et al. [[128](#bib.bib128)]
    worked with a variation of this task, missing POI check-ins prediction by leveraging
    an attention-based seq2seq generative model.
  prefs: []
  type: TYPE_NORMAL
- en: 7 Influential Factors
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In Section [5](#S5 "5 POI Recommendation Models ‣ A Survey on Deep Learning
    Based Point-Of-Interest (POI) Recommendations"), we have highlighted that extensive
    research has been done in the domain of POI recommendation. In all these works,
    researchers have tried to figure out the most influential factors that affect
    Point-of-interest recommendation. It is quite difficult to conclude the factors
    of choosing a next POI as POI recommendation is greatly affected by human behavior
    which changes over time. However, most researchers agree with some common factors
    like sequential effect, geographical influence, semantic effect, social influence,
    temporal influence, etc. that affect POI recommendations. These factors are derived
    from the behavior of the users’ decisions and we need to capture these influential
    factors in our models for a better recommendation of POI. In this section, we
    elaborately discuss these influential factors. In Table [5](#S7.T5 "Table 5 ‣
    7.5 Temporal Influence ‣ 7 Influential Factors ‣ A Survey on Deep Learning Based
    Point-Of-Interest (POI) Recommendations"), we also summarize how different POI
    recommendation models cover these influential factors.
  prefs: []
  type: TYPE_NORMAL
- en: 7.1 Sequential Effect
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The sequential effect of POI recommendation is similar to the analogy of NLP
    problems- such as making a sentence where the next word depends on the previous
    words.
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#bib.bib2), [4](#bib.bib4), [90](#bib.bib90), [51](#bib.bib51)] also show
    that sequential effect puts a major impact on POI recommendation. Zhang et al.[[4](#bib.bib4)]
    extracts sequential patterns from the location sequences of all users and model
    them as a concise location-location transition graph. Then they determine the
    transition probabilities in terms of transition counts and outgoing counts. Finally,
    the model processes the check-in locations according to their arrival order and
    incrementally updates the constructed location-location transition graph. The
    sequential probabilities are derived with additive Markov Chain applied on the
    location-location graph. Xie et al. [[90](#bib.bib90)] designed a fully connected
    deep LSTM network for skeleton-based action recognition. This architecture enables
    fully exploit the inherent correlations among skeleton joints to capture sequential
    effect. Christoforidis et al. [[51](#bib.bib51)] jointly learns the graph embeddings
    of different information networks in the same latent space. The model is optimized
    using negative sampling. All the embeddings of the input bipartite graphs are
    integrated into the model.'
  prefs: []
  type: TYPE_NORMAL
- en: 7.2 Geographical Influence
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Recent researches show that people tend to visit places that are close to him/her
    or are close to the places already visited by that person. Users who check in
    a location within a region have a relatively larger probability to visit the places
    in close proximity. Users tend to go to stores, marketplaces, or visit picnic
    spots that are close to where they live. Also, after visiting a certain tourist
    spot, people tend to go to nearby restaurants or malls. Thus, spatial proximity
    is a worthy concern to predict users’ next location.
  prefs: []
  type: TYPE_NORMAL
- en: '[[29](#bib.bib29), [90](#bib.bib90), [41](#bib.bib41), [129](#bib.bib129),
    [130](#bib.bib130), [102](#bib.bib102)] show great interest in analyzing the geographical
    influence for predicting POIs. Ye et al. [[29](#bib.bib29)] perform spatial analysis
    on real datasets of Foursquare and Whrrl. The study finds the implication of distance
    on user check-in behavior by measuring the probability of a pair of check-ins
    being within a certain distance. The study confirmed the above-mentioned implications
    of the proximity of POI in predicting the next POI. The model introduces a collaborative
    recommendation method based on the naive Bayesian method to realize the POI recommendation.
    The paper proposes a unified framework to perform collaborative recommendation
    that fuses user preference, social influence, and geographical influence. Furthermore,
    the model uses a linear fusion framework to integrate ranked lists provided by
    the three recommender systems. Kefalas et al. [[129](#bib.bib129)] use contextual
    pre-filtering of the information to select the most relevant proximate users for
    the recommendations. The spatial influence of users’ reviews represents the impact
    of proximate users who reviewed similar businesses to the target user. The model
    extends the item-based contextual filtering in two ways, (i) by leveraging the
    proximity factor when computing the similarity of two users and (ii) by considering
    the history of proximate user reviews. Liu et al. [[130](#bib.bib130)] introduce
    a geographical probabilistic factor analysis framework for POI recommendation.
    To learn geographical user preferences, the model encodes the spatial influence
    and user mobility into the user check-in process. Furthermore, the model adopts
    a Bayesian probabilistic non-negative latent factor model for encoding both the
    spatial influence and personalized preferences.'
  prefs: []
  type: TYPE_NORMAL
- en: 7.3 Semantic Effect
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Every POI has some properties and two POIs are semantically close to each other
    if they consist of similar properties. Every human also has his/her own preferences
    and a person wants to visit those POIs which are matched to his/her preferences
    [[131](#bib.bib131)]. So, from the check-in list of a user, we can capture the
    user preferences and try to predict those POIs that are semantically very similar
    to previous check-ins.
  prefs: []
  type: TYPE_NORMAL
- en: '[[131](#bib.bib131), [129](#bib.bib129), [75](#bib.bib75), [42](#bib.bib42),
    [102](#bib.bib102)] are some of the papers that use the semantic information from
    the datasets to predict the next POI. Kefalas et al. [[129](#bib.bib129)] utilize
    the textual influence among the reviews that refer to the similarity between the
    reviews. Ye et al. [[131](#bib.bib131)] uses a semantic annotation technique for
    POI networks to automatically annotate all places with category tags. The annotation
    algorithm learns a binary SVM classifier for each tag in the tag space to support
    multi-label classification. This algorithm extracts features and handles semantic
    annotation from places with the same tag and the relatedness among places. Wu
    et al. [[75](#bib.bib75)] learns the short and long-term contextual features of
    POIs and leverage attention mechanisms to capture users’ preference. Li et al.
    [[42](#bib.bib42)] propose an encoder-decoder neural network model that leverages
    the embedding method to incorporate heterogeneous contextual factors associated
    with each check-in activity, to populate the semantics of check-ins. The paper
    embeds check-in user and time, numerical factors, and categorical factors in contexts.
    Chang et al. [[102](#bib.bib102)] utilize the text content that provides information
    about the characteristics of a POI. They also measure the correlation between
    words by calculating the Jaccard similarity of POIs in their text content. The
    text content layer treats text content as a sentence and trains the word embedding
    vector using Word2Vec [[71](#bib.bib71)]. All these works employed different techniques
    only to capture the semantic features from the POIs for getting better recommendation
    performance.'
  prefs: []
  type: TYPE_NORMAL
- en: 7.4 Social Influence
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Humans are social beings. So, the decisions of a person greatly depend on his/her
    social status, friends, neighbors, culture, etc. These social influences affect
    a person’s interest in visiting a POI. The probability of a user visiting a POI
    is increased when his/her friends give good reviews about that POI [[102](#bib.bib102)].
    To tackle the cold start problems, the social circle of a new user can be heavily
    beneficial and thus, models can learn a user’s preferences by suggesting the same
    POIs of his/her social circle.
  prefs: []
  type: TYPE_NORMAL
- en: '[[51](#bib.bib51), [102](#bib.bib102), [129](#bib.bib129)] use social influence
    to improve their POI predictions. Christoforidis et al.[[51](#bib.bib51)] incorporated
    social influence alongside spatial and temporal context and combined the graphs
    into a unified prediction model. Kefalas et al. [[129](#bib.bib129)] try to capture
    the social influence using users’ reviews. The users having similar vocabularies
    are considered to be related. Here, the social influence corresponds to the correlation
    between the target user and others concerning the lexical analysis of their reviews.
    The abundance of works leveraging social influence proves the importance of social
    effect in POI recommendation.'
  prefs: []
  type: TYPE_NORMAL
- en: 7.5 Temporal Influence
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Human-lives consist of fixed time patterns. A user shows distinct check-in preferences
    at different hours of the day and tends to have similar preferences in consecutive
    hours than non-consecutive hours [[132](#bib.bib132)]. User activities are influenced
    by time. A user will go to a restaurant rather than a bar at noon and people may
    tend to go to visit places when a holiday appears.
  prefs: []
  type: TYPE_NORMAL
- en: '[[133](#bib.bib133), [132](#bib.bib132), [90](#bib.bib90), [51](#bib.bib51),
    [77](#bib.bib77)] considered the temporal effects in POI recommendation systems.
    Gao et al.[[132](#bib.bib132)] introduced a temporal state to represent hours
    of the day. Then they defined the time-dependent user check-in preferences using
    the temporal state. The paper proposes a temporal regularization to minimize an
    objective function using temporal coefficients. Their proposed framework, LRT,
    consists of temporal division, temporal factorization, and temporal aggregation.
    Yuan et al.[[133](#bib.bib133)] perform collaborative filtering by exploiting
    other user’s temporal preferences to POIs. To capture the fixed routine of users’
    daily mobility, the model splits time into hourly slots and model the temporal
    preference to POIs of a user in a time slot by the POIs visited by the user in
    this time slot. They leverage a time factor when computing the similarity between
    two users and consider the historical check-ins at a time in the repository. Doan
    et al. [[77](#bib.bib77)] uses an attention mechanism designed for utilizing spatio-temporal
    information.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Table 5: Descriptions of Influential Factors'
  prefs: []
  type: TYPE_NORMAL
- en: '| Reference | Sequential | Geographical | Semantic | Social | Temporal |'
  prefs: []
  type: TYPE_TB
- en: '| Effect | Influence | Effect | Influence | Influence |'
  prefs: []
  type: TYPE_TB
- en: '| STGN[[88](#bib.bib88)], LSTPM[[41](#bib.bib41)], TMCA[[42](#bib.bib42)],
    ASTEN[[77](#bib.bib77)], Bi-STDDP[[103](#bib.bib103)], GT-HAN[[85](#bib.bib85)],
    Flashback[[38](#bib.bib38)], TEMN[[104](#bib.bib104)], ST-RNN[[37](#bib.bib37)],
    HST-LSTM[[74](#bib.bib74)], DeepMove[[45](#bib.bib45)], SANST[[49](#bib.bib49)]
    | ✓ | ✓ | ✗ | ✗ | ✓ |'
  prefs: []
  type: TYPE_TB
- en: '| LSPL[[75](#bib.bib75)], PLSPL[[76](#bib.bib76)], iMTL[[43](#bib.bib43)],
    ASPPA[[39](#bib.bib39)], ARNN[[78](#bib.bib78)], CARA[[46](#bib.bib46)], GT-HAN[[84](#bib.bib84)],
    t-LocPred[[86](#bib.bib86)], CatDM[[44](#bib.bib44)], GE[[90](#bib.bib90)], MGRU[[47](#bib.bib47)]
    | ✓ | ✓ | ✓ | ✗ | ✓ |'
  prefs: []
  type: TYPE_TB
- en: '| CAPE[[102](#bib.bib102)] | ✗ | ✓ | ✓ | ✓ | ✗ |'
  prefs: []
  type: TYPE_TB
- en: '| GeoSAN[[48](#bib.bib48)], Geo-Teaser[[23](#bib.bib23)] | ✓ | ✓ | ✗ | ✗ |
    ✗ |'
  prefs: []
  type: TYPE_TB
- en: '| CAPRE[[87](#bib.bib87)] | ✓ | ✓ | ✓ | ✓ | ✗ |'
  prefs: []
  type: TYPE_TB
- en: '| STA[[50](#bib.bib50)] | ✗ | ✓ | ✓ | ✗ | ✓ |'
  prefs: []
  type: TYPE_TB
- en: '| JLGE[[92](#bib.bib92)], RELINE[[51](#bib.bib51)], APOIR[[100](#bib.bib100)]
    | ✓ | ✓ | ✗ | ✓ | ✓ |'
  prefs: []
  type: TYPE_TB
- en: '| LLRec (Teacher)[[40](#bib.bib40)] | ✓ | ✓ | ✓ | ✓ | ✓ |'
  prefs: []
  type: TYPE_TB
- en: '| HME[[109](#bib.bib109)] | ✓ | ✓ | ✓ | ✗ | ✗ |'
  prefs: []
  type: TYPE_TB
- en: '| DYSTAL[[52](#bib.bib52)] | ✗ | ✓ | ✓ | ✓ | ✓ |'
  prefs: []
  type: TYPE_TB
- en: '| HCT[[96](#bib.bib96)] | ✗ | ✓ | ✓ | ✗ | ✗ |'
  prefs: []
  type: TYPE_TB
- en: 8 Shortcomings and Challenges
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 8.1 Data Sparsity
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Data sparsity is one of the most crucial problems of building a location recommender
    system because the graphs and matrices are far more sparse than most other recommender
    systems. From a user’s point of view, a person travels to very few locations in
    his/her lifetime compared to the sheer huge number of POIs available to be visited.
    Furthermore, exploring different POIs cost significantly higher than the exploration
    of different options in other fields of recommendation, which further exacerbates
    the data sparsity issue. Consequently, the relationships between users and POIs
    described in the datasets are genuinely sparse. Thus, it is always a challenge
    to design an effective POI recommendation system with this sparse dataset.
  prefs: []
  type: TYPE_NORMAL
- en: 8.2 Cold Start
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When a user joins an LBSN network, the lack of proper characterization of that
    user results in poor initial recommendation performance. Similarly, when a new
    POI is created to be explored, it heavily lags behind the already existing POIs
    in terms of recommendation due to the lack of historical trajectories associated
    with that POI. Since this problem is common to most of the present recommendation
    models, eliminating the cold start problem is a promising research direction in
    POI recommendation.
  prefs: []
  type: TYPE_NORMAL
- en: 8.3 Scarcity of benchmark dataset
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: While popular check-in datasets like Foursquare, Gowalla, Yelp, Weeplaces are
    largely used in the previous works, the sheer scale of these datasets makes them
    impossible to work with all at once. Consequently, most of the prior works take
    only a subset (e.g. check-ins of a city within a specific timeframe) of these
    datasets to evaluate the proposed models. Furthermore, recent advancements in
    POI recommendation show that besides check-ins, data from other modalities such
    as textual description, user reviews, etc. can improve the recommendation performance.
    However, popular datasets do not contain these data which results in the proposal
    of new datasets (e.g. Instagram dataset) that contain these data. The variety
    of datasets used in different models makes it very difficult to compare the performance
    against different state-of-the-art models. A benchmark dataset containing data
    from various modalities can resolve these issues creating a solid ground to assess
    the performance across different models.
  prefs: []
  type: TYPE_NORMAL
- en: 8.4 Lack of online learning
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Analyzing different models in this review, we see that most of the POI recommendation
    models in the literature use offline learning i.e. models can be trained only
    once with the available data before deployment. In a real-world scenario, this
    strategy is not optimal, since everyday users are generating tons of new check-in
    data which carries crucial information about changes in user preferences. An online
    learning strategy that can update the models as new data gets available is thus
    of significant importance so that the model can provide optimal recommendation
    performance over time even in changing circumstances.
  prefs: []
  type: TYPE_NORMAL
- en: 8.5 Privacy Preserved POI Recommendation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Like many other location-based services, user privacy is a major bottleneck
    for the proliferation of POI recommendation systems. Users are not willing to
    share their GPS traces in many cases as from location traces adversaries can reveal
    many sensitive and private information of the user. Thus there is an increasing
    need to devise a privacy preserved POI recommendation system. A couple of non-deep
    learning approaches, Liu et al. [[134](#bib.bib134)] and Chen et al. [[135](#bib.bib135)]
    preserve the privacy of the user data. However, since these approaches also require
    aggregating data from users in a central location, there are still lots of privacy
    concern exist. We envision that POI recommendation techniques can exploit a new
    domain of privacy-preserving learning, namely federated learning, that does not
    require accumulating user data in any central site.
  prefs: []
  type: TYPE_NORMAL
- en: Essentially, federated learning is a machine learning technique that trains
    an algorithm across multiple devices using their local data samples, without exchanging
    them. In traditional distributed learning all data are distributed across multiple
    centralized servers which do not ensure the privacy of user data and data security.
    But in federated learning, a user does not need to share their data. They can
    train a model using their local data and share the model parameters. So, federated
    learning ensures data privacy and data sparsity issues. In this context, Wang
    et al. [[40](#bib.bib40)] recently proposed a model LLRec by generating teacher
    and student models. While the idea is close to the notion of federated learning,
    it does not fully take advantage of the parameter sharing like federated learning.
    Thus, developing federated learning-friendly models is an interesting research
    direction in this domain.
  prefs: []
  type: TYPE_NORMAL
- en: 8.6 Recommendation for Social Groups
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Previous works mostly focus on personalized POI recommendations where user’s
    historical check-ins as well as other attributes are taken into account. However,
    POI recommendation for a group of users has mostly been out of focus in the literature.
    Recommendation for a social group is significantly different from personalized
    POI recommendation, since each group member may have different preferences for
    choosing POIs. The social aspect becomes particularly important when recommending
    POIs for a group of users, which most of the present personalized POI recommendation
    models are unable to handle properly. Wang et al. [[136](#bib.bib136)] used matrix
    factorization and clustering techniques for group POI recommendation. But a simple
    model like this fails to utilize external features which largely limits the model
    performance. Consequently, a deep learning-based POI recommendation model for
    social groups can be particularly helpful for group tourism.
  prefs: []
  type: TYPE_NORMAL
- en: 9 Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this paper, we have presented a comprehensive survey on deep learning based
    POI recommendation systems. We have presented insightful findings of a plethora
    of recent research papers in this emerging area of research. We have categorized
    the POI recommendation models based on different deep learning paradigms and compare
    their competitive (dis)advantages. We have also presented the performance results
    of these techniques w.r.t. different performance metrics for different real datasets.
    We have identified different factors that impact the POI recommendations and provided
    a tabular analysis of each factor. Finally, we have discussed a series of future
    works on POI recommendation that provide a guideline for new researchers in this
    domain. To the best of our knowledge, this work is the first comprehensive review
    of deep learning based POI recommendations.
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] S. Rendle, C. Freudenthaler, L. Schmidt-Thieme, Factorizing personalized
    markov chains for next-basket recommendation, in: Proceedings of the 19th international
    conference on World wide web, 2010, pp. 811–820.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[2] C. Cheng, H. Yang, M. R. Lyu, I. King, Where you like to go next: Successive
    point-of-interest recommendation, in: Twenty-Third international joint conference
    on Artificial Intelligence, 2013.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[3] M. Chen, Y. Liu, X. Yu, Nlpmm: A next location predictor with markov modeling,
    in: Pacific-Asia Conference on Knowledge Discovery and Data Mining, Springer,
    2014, pp. 186–197.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[4] J.-D. Zhang, C.-Y. Chow, Y. Li, Lore: Exploiting sequential influence for
    location recommendations, in: Proceedings of the 22nd ACM SIGSPATIAL International
    Conference on Advances in Geographic Information Systems, 2014, pp. 103–112.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5] J. Ye, Z. Zhu, H. Cheng, What’s your next move: User activity prediction
    in location-based social networks, in: Proceedings of the 2013 SIAM International
    Conference on Data Mining, SIAM, 2013, pp. 171–179.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6] R. Yue-Qiang, W. Ze, S. Xiao-Na, S. Shi-Min, A multi-element hybrid location
    recommendation algorithm for location based social networks, IEEE Access 7 (2019)
    100416–100427.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7] Y. Wen, J. Zhang, Q. Zeng, X. Chen, F. Zhang, Loc2vec-based cluster-level
    transition behavior mining for successive poi recommendation, IEEE Access 7 (2019)
    109311–109319.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[8] R. Mao, Z. Han, Z. Liu, Y. Liu, X. Lv, P. Xuan, Prme-gts: A new successive
    poi recommendation model with temporal and social influences, in: International
    Conference on Advanced Data Mining and Applications, Springer, 2019, pp. 266–274.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[9] X. Xiong, S. Qiao, Y. Li, N. Han, G. Yuan, Y. Zhang, A point-of-interest
    suggestion algorithm in multi-source geo-social networks, Engineering Applications
    of Artificial Intelligence 88 (2020) 103374.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[10] Y. Koren, R. Bell, C. Volinsky, Matrix factorization techniques for recommender
    systems, Computer 42 (8) (2009) 30–37.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[11] D. Lian, C. Zhao, X. Xie, G. Sun, E. Chen, Y. Rui, Geomf: joint geographical
    modeling and matrix factorization for point-of-interest recommendation, in: Proceedings
    of the 20th ACM SIGKDD international conference on Knowledge discovery and data
    mining, 2014, pp. 831–840.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[12] Y. Liu, W. Wei, A. Sun, C. Miao, Exploiting geographical neighborhood
    characteristics for location recommendation, in: Proceedings of the 23rd ACM International
    Conference on Conference on Information and Knowledge Management, 2014, pp. 739–748.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[13] H. Wang, H. Shen, W. Ouyang, X. Cheng, Exploiting poi-specific geographical
    influence for point-of-interest recommendation., in: IJCAI, 2018, pp. 3877–3883.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[14] Y. Su, X. Li, B. Liu, D. Zha, J. Xiang, W. Tang, N. Gao, Fgcrec: Fine-grained
    geographical characteristics modeling for point-of-interest recommendation, in:
    ICC 2020-2020 IEEE International Conference on Communications (ICC), IEEE, 2020,
    pp. 1–6.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[15] Z. Pan, L. Cui, X. Wu, Z. Zhang, X. Li, G. Chen, Deep potential geo-social
    relationship mining for point-of-interest recommendation, IEEE Access 7 (2019)
    99496–99507.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[16] L. Cai, J. Xu, J. Liu, T. Pei, Integrating spatial and temporal contexts
    into a factorization model for poi recommendation, International Journal of Geographical
    Information Science 32 (3) (2018) 524–546.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[17] H. A. Rahmani, M. Aliannejadi, M. Baratchi, F. Crestani, Joint geographical
    and temporal modeling based on matrix factorization for point-of-interest recommendation,
    in: European Conference on Information Retrieval, Springer, 2020, pp. 205–219.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[18] S. Rendle, C. Freudenthaler, Z. Gantner, L. Schmidt-Thieme, Bpr: Bayesian
    personalized ranking from implicit feedback, arXiv preprint arXiv:1205.2618 (2012).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[19] J. He, X. Li, L. Liao, Category-aware next point-of-interest recommendation
    via listwise bayesian personalized ranking., in: IJCAI, Vol. 17, 2017, pp. 1837–1843.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[20] J. He, X. Li, L. Liao, M. Wang, Inferring continuous latent preference
    on transition intervals for next point-of-interest recommendation, in: Joint European
    Conference on Machine Learning and Knowledge Discovery in Databases, Springer,
    2018, pp. 741–756.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[21] Q. Cui, Y. Tang, S. Wu, L. Wang, Distance2pre: Personalized spatial preference
    for next point-of-interest prediction, in: Pacific-Asia Conference on Knowledge
    Discovery and Data Mining, Springer, 2019, pp. 289–301.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[22] S. Zhao, T. Zhao, H. Yang, M. R. Lyu, I. King, STELLAR: spatial-temporal
    latent ranking for successive point-of-interest recommendation, in: D. Schuurmans,
    M. P. Wellman (Eds.), Proceedings of the Thirtieth AAAI Conference on Artificial
    Intelligence, February 12-17, 2016, Phoenix, Arizona, USA, 2016, pp. 315–322.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[23] S. Zhao, T. Zhao, I. King, M. R. Lyu, Geo-teaser: Geo-temporal sequential
    embedding rank for point-of-interest recommendation, in: Proceedings of the 26th
    international conference on world wide web companion, 2017, pp. 153–162.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[24] S. Zhao, I. King, M. R. Lyu, Geo-pairwise ranking matrix factorization
    model for point-of-interest recommendation, in: International Conference on Neural
    Information Processing, Springer, 2017, pp. 368–377.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[25] S. Zhao, M. R. Lyu, I. King, Stellar: Spatial-temporal latent ranking
    model for successive poi recommendation, in: Point-of-Interest Recommendation
    in Location-Based Social Networks, Springer, 2018, pp. 79–94.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[26] R. Gao, J. Li, X. Li, C. Song, Y. Zhou, A personalized point-of-interest
    recommendation model via fusion of geo-social information, Neurocomputing 273
    (2018) 159–170.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[27] W. Liu, Z.-J. Wang, B. Yao, M. Nie, J. Wang, R. Mao, J. Yin, Geographical
    relevance model for long tail point-of-interest recommendation, in: International
    Conference on Database Systems for Advanced Applications, Springer, 2018, pp.
    67–82.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[28] M. Ye, P. Yin, W.-C. Lee, Location recommendation for location-based social
    networks, in: Proceedings of the 18th SIGSPATIAL international conference on advances
    in geographic information systems, 2010, pp. 458–461.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[29] M. Ye, P. Yin, W.-C. Lee, D.-L. Lee, Exploiting geographical influence
    for collaborative point-of-interest recommendation, in: Proceedings of the 34th
    international ACM SIGIR conference on Research and development in Information
    Retrieval, 2011, pp. 325–334.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[30] C. Yang, L. Bai, C. Zhang, Q. Yuan, J. Han, Bridging collaborative filtering
    and semi-supervised learning: a neural approach for poi recommendation, in: Proceedings
    of the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data
    Mining, 2017, pp. 1245–1254.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[31] J. Li, G. Liu, C. Yan, C. Jiang, Lori: a learning-to-rank-based integration
    method of location recommendation, IEEE Transactions on Computational Social Systems
    6 (3) (2019) 430–440.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[32] S. Qiao, N. Han, J. Zhou, R.-H. Li, C. Jin, L. A. Gutierrez, Socialmix:
    A familiarity-based and preference-aware location suggestion approach, Engineering
    Applications of Artificial Intelligence 68 (2018) 192–204.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[33] W. Wang, J. Chen, J. Wang, J. Chen, Z. Gong, Geography-aware inductive
    matrix completion for personalized point-of-interest recommendation in smart cities,
    IEEE Internet of Things Journal 7 (5) (2019) 4361–4370.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[34] R. Baral, S. S. Iyengar, X. Zhu, T. Li, P. Sniatala, Hirecs: A hierarchical
    contextual location recommendation system, IEEE Transactions on Computational
    Social Systems 6 (5) (2019) 1020–1037.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[35] Y. Xu, X. Li, J. Li, C. Wang, R. Gao, Y. Yu, Ssser: Spatiotemporal sequential
    and social embedding rank for successive point-of-interest recommendation, IEEE
    Access 7 (2019) 156804–156823.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[36] M. Chen, Y. Zuo, X. Jia, Y. Liu, X. Yu, K. Zheng, Cem: A convolutional
    embedding model for predicting next locations, IEEE Transactions on Intelligent
    Transportation Systems (2020).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[37] Q. Liu, S. Wu, L. Wang, T. Tan, Predicting the next location: A recurrent
    model with spatial and temporal contexts, in: Thirtieth AAAI conference on artificial
    intelligence, 2016.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[38] D. Yang, B. Fankhauser, P. Rosso, P. Cudre-Mauroux, Location prediction
    over sparse user mobility traces using rnns: Flashback in hidden states!, in:
    Proceedings of the Twenty-Ninth International Joint Conference on Artificial Intelligence,
    IJCAI-20, 2020, pp. 2184–2190.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[39] K. Zhao, Y. Zhang, H. Yin, J. Wang, K. Zheng, X. Zhou, C. Xing, Discovering
    subsequence patterns for next poi recommendation, in: Proceedings of the Twenty-Ninth
    international joint conference on artificial intelligence, 2020, pp. 3216–3222.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[40] Q. Wang, H. Yin, T. Chen, Z. Huang, H. Wang, Y. Zhao, N. Q. Viet Hung,
    Next point-of-interest recommendation on resource-constrained mobile devices,
    in: Proceedings of The Web Conference 2020, 2020, pp. 906–916.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[41] K. Sun, T. Qian, T. Chen, Y. Liang, Q. V. H. Nguyen, H. Yin, Where to
    go next: Modeling long-and short-term user preferences for point-of-interest recommendation,
    in: Proceedings of the AAAI Conference on Artificial Intelligence, Vol. 34, 2020,
    pp. 214–221.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[42] R. Li, Y. Shen, Y. Zhu, Next point-of-interest recommendation with temporal
    and multi-level context attention, in: 2018 IEEE International Conference on Data
    Mining (ICDM), IEEE, 2018, pp. 1110–1115.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[43] L. Zhang, Z. Sun, J. Zhang, Y. Lei, C. Li, Z. Wu, H. Kloeden, F. Klanner,
    An interactive multi-task learning framework for next poi recommendation with
    uncertain check-ins, CAL 301 (985) (2020) 13954.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[44] F. Yu, L. Cui, W. Guo, X. Lu, Q. Li, H. Lu, A category-aware deep model
    for successive poi recommendation on sparse check-in data, in: Proceedings of
    The Web Conference 2020, 2020, pp. 1264–1274.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[45] J. Feng, Y. Li, C. Zhang, F. Sun, F. Meng, A. Guo, D. Jin, Deepmove: Predicting
    human mobility with attentional recurrent networks, in: Proceedings of the 2018
    world wide web conference, 2018, pp. 1459–1468.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[46] J. Manotumruksa, C. Macdonald, I. Ounis, A contextual attention recurrent
    architecture for context-aware venue recommendation, in: The 41st International
    ACM SIGIR Conference on Research & Development in Information Retrieval, 2018,
    pp. 555–564.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[47] K. Kala, M. Nandhini, Context-category specific sequence aware point-of-interest
    recommender system with multi-gated recurrent unit. j ambient intell hum comput
    springer (2019).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[48] D. Lian, Y. Wu, Y. Ge, X. Xie, E. Chen, Geography-aware sequential location
    recommendation, in: Proceedings of the 26th ACM SIGKDD International Conference
    on Knowledge Discovery & Data Mining, 2020, pp. 2009–2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[49] Q. Guo, J. Qi, Sanst: A self-attentive network for next point-of-interest
    recommendation, arXiv preprint arXiv:2001.10379 (2020).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[50] B. Liu, T. Qian, B. Liu, L. Hong, Z. You, Y. Li, Learning spatiotemporal-aware
    representation for poi recommendation, arXiv preprint arXiv:1704.08853 (2017).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[51] G. Christoforidis, P. Kefalas, A. N. Papadopoulos, Y. Manolopoulos, Reline:
    Point-of-interest recommendations using multiple network embeddings, arXiv preprint
    arXiv:1902.00773 (2019).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[52] X. Xiong, F. Xiong, J. Zhao, S. Qiao, Y. Li, Y. Zhao, Dynamic discovery
    of favorite locations in spatio-temporal social networks, Information Processing
    & Management 57 (6) (2020) 102337.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[53] J. Bao, Y. Zheng, D. Wilkie, M. Mokbel, Recommendations in location-based
    social networks: a survey, GeoInformatica 19 (3) (2015) 525–565.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[54] Y. Liu, T.-A. N. Pham, G. Cong, Q. Yuan, An experimental evaluation of
    point-of-interest recommendation in location-based social networks (2017).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[55] S. Zhao, I. King, M. R. Lyu, A survey of point-of-interest recommendation
    in location-based social networks, arXiv preprint arXiv:1607.00647 (2016).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[56] X. Zheng, J. Han, A. Sun, A survey of location prediction on twitter,
    IEEE Transactions on Knowledge and Data Engineering 30 (9) (2018) 1652–1671.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[57] S. Liu, User modeling for point-of-interest recommendations in location-based
    social networks: The state of the art, Mobile Information Systems 2018 (2018).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[58] S. Wang, J. Cao, P. Yu, Deep learning for spatio-temporal data mining:
    A survey, IEEE Transactions on Knowledge and Data Engineering (2020).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[59] S. Xu, X. Fu, J. Cao, B. Liu, Z. Wang, Survey on user location prediction
    based on geo-social networking data, World Wide Web (2020) 1–44.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[60] S. Hochreiter, J. Schmidhuber, Long short-term memory, Neural computation
    9 (1997) 1735–80. [doi:10.1162/neco.1997.9.8.1735](https://doi.org/10.1162/neco.1997.9.8.1735).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[61] K. Cho, B. Van Merriënboer, C. Gulcehre, D. Bahdanau, F. Bougares, H. Schwenk,
    Y. Bengio, Learning phrase representations using rnn encoder-decoder for statistical
    machine translation, arXiv preprint arXiv:1406.1078 (2014).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[62] D. Bahdanau, K. Cho, Y. Bengio, Neural machine translation by jointly
    learning to align and translate, arXiv preprint arXiv:1409.0473 (2014).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[63] I. Sutskever, O. Vinyals, Q. V. Le, Sequence to sequence learning with
    neural networks, in: Advances in neural information processing systems, 2014,
    pp. 3104–3112.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[64] A. Vaswani, N. Shazeer, N. Parmar, J. Uszkoreit, L. Jones, A. N. Gomez,
    Ł. Kaiser, I. Polosukhin, Attention is all you need, in: Advances in neural information
    processing systems, 2017, pp. 5998–6008.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[65] I. Goodfellow, J. Pouget-Abadie, M. Mirza, B. Xu, D. Warde-Farley, S. Ozair,
    A. Courville, Y. Bengio, Generative adversarial nets, in: Advances in neural information
    processing systems, 2014, pp. 2672–2680.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[66] T. L. Griffiths, M. I. Jordan, J. B. Tenenbaum, D. M. Blei, Hierarchical
    topic models and the nested chinese restaurant process, in: Advances in neural
    information processing systems, 2004, pp. 17–24.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[67] S. El Hihi, Y. Bengio, Hierarchical recurrent neural networks for long-term
    dependencies, in: Advances in neural information processing systems, 1996, pp.
    493–499.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[68] A. Kusupati, M. Singh, K. Bhatia, A. Kumar, P. Jain, M. Varma, Fastgrnn:
    A fast, accurate, stable and tiny kilobyte sized gated recurrent neural network,
    in: Advances in Neural Information Processing Systems, 2018, pp. 9017–9028.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[69] X. Ma, P. Zhang, S. Zhang, N. Duan, Y. Hou, M. Zhou, D. Song, A tensorized
    transformer for language modeling, in: Advances in Neural Information Processing
    Systems, 2019, pp. 2232–2242.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[70] G. Hinton, O. Vinyals, J. Dean, Distilling the knowledge in a neural network,
    arXiv preprint arXiv:1503.02531 (2015).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[71] T. Mikolov, K. Chen, G. Corrado, J. Dean, Efficient estimation of word
    representations in vector space, arXiv preprint arXiv:1301.3781 (2013).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[72] Z. Huang, X. Lin, H. Liu, B. Zhang, Y. Chen, Y. Tang, Deep representation
    learning for location-based recommendation, IEEE Transactions on Computational
    Social Systems (2020).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[73] J. Liao, T. Liu, M. Liu, J. Wang, Y. Wang, H. Sun, Multi-context integrated
    deep neural network model for next location prediction, IEEE Access 6 (2018) 21980–21990.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[74] D. Kong, F. Wu, Hst-lstm: A hierarchical spatial-temporal long-short term
    memory network for location prediction., in: IJCAI, Vol. 18, 2018, pp. 2341–2347.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[75] Y. Wu, K. Li, G. Zhao, X. Qian, Long-and short-term preference learning
    for next poi recommendation, in: Proceedings of the 28th ACM International Conference
    on Information and Knowledge Management, 2019, pp. 2301–2304.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[76] Y. Wu, K. Li, G. Zhao, Q. Xueming, Personalized long-and short-term preference
    learning for next poi recommendation, IEEE Transactions on Knowledge and Data
    Engineering (2020).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[77] K. D. Doan, G. Yang, C. K. Reddy, An attentive spatio-temporal neural
    model for successive point of interest recommendation, in: Pacific-Asia Conference
    on Knowledge Discovery and Data Mining, Springer, 2019, pp. 346–358.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[78] Q. Guo, Z. Sun, J. Zhang, Y.-L. Theng, An attentional recurrent neural
    network for personalized next location recommendation, in: Proceedings of the
    AAAI Conference on Artificial Intelligence, Vol. 34, 2020, pp. 83–90.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[79] H. Wang, H. Shen, X. Cheng, Modeling poi-specific spatial-temporal context
    for point-of-interest recommendation, in: Pacific-Asia Conference on Knowledge
    Discovery and Data Mining, Springer, 2020, pp. 130–141.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[80] L. Huang, Y. Ma, S. Wang, Y. Liu, An attention-based spatiotemporal lstm
    network for next poi recommendation, IEEE Transactions on Services Computing (2019).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[81] L. Li, Y. Liu, J. Wu, L. He, G. Ren, Multi-modal representation learning
    for successive poi recommendation, in: Asian Conference on Machine Learning, 2019,
    pp. 441–456.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[82] K. Yang, J. Zhu, Next poi recommendation via graph embedding representation
    from h-deepwalk on hybrid network, IEEE Access 7 (2019) 171105–171113.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[83] S. Zhao, X. Chen, I. King, M. R. Lyu, Personalized sequential check-in
    prediction: Beyond geographical and temporal contexts, in: 2018 IEEE International
    Conference on Multimedia and Expo (ICME), IEEE, 2018, pp. 1–6.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[84] T. Liu, J. Liao, Z. Wu, Y. Wang, J. Wang, Exploiting geographical-temporal
    awareness attention for next point-of-interest recommendation, Neurocomputing
    (2020).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[85] T. Liu, J. Liao, Z. Wu, Y. Wang, J. Wang, A geographical-temporal awareness
    hierarchical attention network for next point-of-interest recommendation, in:
    Proceedings of the 2019 on International Conference on Multimedia Retrieval, 2019,
    pp. 7–15.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[86] C. H. Liu, Y. Wang, C. Piao, Z. Dai, Y. Yuan, G. Wang, D. Wu, Time-aware
    location prediction by convolutional area-of-interest modeling and memory-augmented
    attentive lstm, IEEE Transactions on Knowledge and Data Engineering (2020).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[87] B. Chang, Y. Koh, D. Park, J. Kang, Content-aware successive point-of-interest
    recommendation, in: Proceedings of the 2020 SIAM International Conference on Data
    Mining, SIAM, 2020, pp. 100–108.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[88] P. Zhao, A. Luo, Y. Liu, F. Zhuang, J. Xu, Z. Li, V. S. Sheng, X. Zhou,
    Where to go next: A spatio-temporal gated network for next poi recommendation,
    in: Proceedings of the AAAI Conference on Artificial Intelligence, Vol. 33, 2019,
    pp. 5877–5884.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[89] W.-C. Kang, J. McAuley, Self-attentive sequential recommendation, in:
    2018 IEEE International Conference on Data Mining (ICDM), IEEE, 2018, pp. 197–206.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[90] M. Xie, H. Yin, H. Wang, F. Xu, W. Chen, S. Wang, Learning graph-based
    poi embedding for location-based recommendation, in: Proceedings of the 25th ACM
    International on Conference on Information and Knowledge Management, 2016, pp.
    15–24.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[91] Y. Lin, Z. Liu, M. Sun, Y. Liu, X. Zhu, Learning entity and relation embeddings
    for knowledge graph completion, in: AAAI, 2015, pp. 2181–2187.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[92] G. Christoforidis, P. Kefalas, A. Papadopoulos, Y. Manolopoulos, Recommendation
    of points-of-interest using graph embeddings, in: 2018 IEEE 5th International
    Conference on Data Science and Advanced Analytics (DSAA), IEEE, 2018, pp. 31–40.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[93] J. Tang, M. Qu, M. Wang, M. Zhang, J. Yan, Q. Mei, Line: Large-scale information
    network embedding, in: Proceedings of the 24th international conference on world
    wide web, 2015, pp. 1067–1077.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[94] H. Lin, J. Jia, J. Qiu, Y. Zhang, G. Shen, L. Xie, J. Tang, L. Feng, T.-S.
    Chua, Detecting stress based on social interactions in social networks, IEEE Transactions
    on Knowledge and Data Engineering 29 (9) (2017) 1820–1833.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[95] X. Xiong, Y. Li, S. Qiao, N. Han, Y. Wu, J. Peng, B. Li, An emotional
    contagion model for heterogeneous social media with multiple behaviors, Physica
    A: Statistical Mechanics and its Applications 490 (2018) 185–202.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[96] L. Zhang, Z. Sun, J. Zhang, H. Kloeden, F. Klanner, Modeling hierarchical
    category transition for next poi recommendation with uncertain check-ins, Information
    Sciences 515 (2020) 169–190.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[97] M. Chen, Y. Zhao, Y. Liu, X. Yu, K. Zheng, Modeling spatial trajectories
    with attribute representation learning, IEEE Transactions on Knowledge and Data
    Engineering (2020).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[98] Y. Qiao, X. Luo, C. Li, H. Tian, J. Ma, Heterogeneous graph-based joint
    representation learning for users and pois in location-based social network, Information
    Processing & Management 57 (2) (2020) 102151.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[99] W. Liu, Z.-J. Wang, B. Yao, J. Yin, Geo-alm: Poi recommendation by fusing
    geographical information and adversarial learning mechanism., in: IJCAI, 2019,
    pp. 1807–1813.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[100] F. Zhou, R. Yin, K. Zhang, G. Trajcevski, T. Zhong, J. Wu, Adversarial
    point-of-interest recommendation, in: The World Wide Web Conference, 2019, pp.
    3462–34618.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[101] Q. Gao, F. Zhang, F. Yao, A. Li, L. Mei, F. Zhou, Adversarial mobility
    learning for human trajectory classification, IEEE Access 8 (2020) 20563–20576.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[102] B. Chang, Y. Park, D. Park, S. Kim, J. Kang, Content-aware hierarchical
    point-of-interest embedding model for successive poi recommendation., in: IJCAI,
    2018, pp. 3301–3307.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[103] D. Xi, F. Zhuang, Y. Liu, J. Gu, H. Xiong, Q. He, Modelling of bi-directional
    spatio-temporal dependence and users’ dynamic preferences for missing poi check-in
    identification, in: Proceedings of the AAAI Conference on Artificial Intelligence,
    Vol. 33, 2019, pp. 5458–5465.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[104] X. Zhou, C. Mascolo, Z. Zhao, Topic-enhanced memory networks for personalised
    point-of-interest recommendation, in: Proceedings of the 25th ACM SIGKDD International
    Conference on Knowledge Discovery & Data Mining, 2019, pp. 3018–3028.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[105] X. Zhou, A. Noulas, C. Mascolo, Z. Zhao, Discovering latent patterns
    of urban cultural interactions in wechat for modern city planning, in: Proceedings
    of the 24th ACM SIGKDD International Conference on Knowledge Discovery & Data
    Mining, 2018, pp. 1069–1078.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[106] C. De Sa, A. Gu, C. Ré, F. Sala, Representation tradeoffs for hyperbolic
    embeddings, Proceedings of machine learning research 80 (2018) 4460.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[107] M. Nickel, D. Kiela, Poincaré embeddings for learning hierarchical representations,
    in: Advances in neural information processing systems, 2017, pp. 6338–6347.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[108] M. Nickel, D. Kiela, Learning continuous hierarchies in the lorentz model
    of hyperbolic geometry, arXiv preprint arXiv:1806.03417 (2018).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[109] S. Feng, L. V. Tran, G. Cong, L. Chen, J. Li, F. Li, Hme: A hyperbolic
    metric embedding approach for next-poi recommendation, in: Proceedings of the
    43rd International ACM SIGIR Conference on Research and Development in Information
    Retrieval, 2020, pp. 1429–1438.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[110] C. Gulcehre, M. Denil, M. Malinowski, A. Razavi, R. Pascanu, K. M. Hermann,
    P. Battaglia, V. Bapst, D. Raposo, A. Santoro, et al., Hyperbolic attention networks,
    arXiv preprint arXiv:1805.09786 (2018).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[111] A. A. Ungar, Analytic hyperbolic geometry: Mathematical foundations and
    applications, World Scientific, 2005.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[112] S. Feng, X. Li, Y. Zeng, G. Cong, Y. M. Chee, Personalized ranking metric
    embedding for next new poi recommendation, in: IJCAI’15 Proceedings of the 24th
    International Conference on Artificial Intelligence, ACM, 2015, pp. 2069–2075.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[113] Y. Zhang, G. Liu, A. Liu, Y. Zhang, Z. Li, X. Zhang, Q. Li, Personalized
    geographical influence modeling for poi recommendation, IEEE Intelligent Systems
    (2020).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[114] Y. Wang, M. Chen, X. Yu, Y. Liu, Lce: A location category embedding model
    for predicting the category labels of pois, in: International Conference on Neural
    Information Processing, Springer, 2017, pp. 710–720.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[115] R. Ding, Z. Chen, X. Li, Spatial-temporal distance metric embedding for
    time-specific poi recommendation, IEEE Access 6 (2018) 67035–67045.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[116] D. Massimo, F. Ricci, Harnessing a generalised user behaviour model for
    next-poi recommendation, in: Proceedings of the 12th ACM Conference on Recommender
    Systems, 2018, pp. 402–406.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[117] D. Ramachandran, E. Amir, Bayesian inverse reinforcement learning., in:
    IJCAI, Vol. 7, 2007, pp. 2586–2591.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[118] G. Neu, C. Szepesvári, Training parsers by inverse reinforcement learning,
    Machine learning 77 (2-3) (2009) 303.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[119] B. D. Ziebart, A. L. Maas, J. A. Bagnell, A. K. Dey, Maximum entropy
    inverse reinforcement learning., in: Aaai, Vol. 8, Chicago, IL, USA, 2008, pp.
    1433–1438.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[120] H. Luo, J. Zhou, Z. Bao, S. Li, J. S. Culpepper, H. Ying, H. Liu, H. Xiong,
    Spatial object recommendation with hints: When spatial granularity matters, in:
    Proceedings of the 43rd International ACM SIGIR Conference on Research and Development
    in Information Retrieval, 2020, pp. 781–790.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[121] R. Baral, S. Iyengar, T. Li, N. Balakrishnan, Close: contextualized location
    sequence recommender, in: Proceedings of the 12th ACM conference on recommender
    systems, 2018, pp. 470–474.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[122] J. Huang, Y. Liu, Y. Chen, C. Jia, Dynamic recommendation of poi sequence
    responding to historical trajectory, ISPRS International Journal of Geo-Information
    8 (10) (2019) 433.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[123] Y.-S. Lu, J.-L. Huang, Glr: A graph-based latent representation model
    for successive poi recommendation, Future Generation Computer Systems 102 (2020)
    230–244.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[124] Q. Le, T. Mikolov, Distributed representations of sentences and documents,
    in: International conference on machine learning, 2014, pp. 1188–1196.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[125] M.-F. Wang, Y.-S. Lu, J.-L. Huang, Spent: A successive poi recommendation
    method using similarity-based poi embedding and recurrent neural network with
    temporal influence, in: 2019 IEEE International Conference on Big Data and Smart
    Computing (BigComp), IEEE, 2019, pp. 1–8.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[126] R. Baral, S. Iyengar, T. Li, X. Zhu, Hicaps: hierarchical contextual
    poi sequence recommender, in: Proceedings of the 26th ACM SIGSPATIAL International
    Conference on Advances in Geographic Information Systems, 2018, pp. 436–439.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[127] I.-C. Lin, Y.-S. Lu, W.-Y. Shih, J.-L. Huang, Successive poi recommendation
    with category transition and temporal influence, in: 2018 IEEE 42nd Annual Computer
    Software and Applications Conference (COMPSAC), Vol. 2, IEEE, 2018, pp. 57–62.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[128] Y. Li, Y. Luo, Z. Zhang, S. Sadiq, P. Cui, Context-aware attention-based
    data augmentation for poi recommendation, in: 2019 IEEE 35th International Conference
    on Data Engineering Workshops (ICDEW), IEEE, 2019, pp. 177–184.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[129] P. Kefalas, Y. Manolopoulos, A time-aware spatio-textual recommender
    system, Expert Systems with Applications 78 (2017) 396–406.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[130] B. Liu, Y. Fu, Z. Yao, H. Xiong, Learning geographical preferences for
    point-of-interest recommendation, in: Proceedings of the 19th ACM SIGKDD international
    conference on Knowledge discovery and data mining, 2013, pp. 1043–1051.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[131] M. Ye, D. Shou, W.-C. Lee, P. Yin, K. Janowicz, On the semantic annotation
    of places in location-based social networks, in: Proceedings of the 17th ACM SIGKDD
    international conference on Knowledge discovery and data mining, 2011, pp. 520–528.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[132] H. Gao, J. Tang, X. Hu, H. Liu, Exploring temporal effects for location
    recommendation on location-based social networks, in: Proceedings of the 7th ACM
    conference on Recommender systems, 2013, pp. 93–100.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[133] Q. Yuan, G. Cong, Z. Ma, A. Sun, N. M. Thalmann, Time-aware point-of-interest
    recommendation, in: Proceedings of the 36th international ACM SIGIR conference
    on Research and development in information retrieval, 2013, pp. 363–372.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[134] A. Liu, W. Wang, Z. Li, G. Liu, Q. Li, X. Zhou, X. Zhang, A privacy-preserving
    framework for trust-oriented point-of-interest recommendation, IEEE Access 6 (2017)
    393–404.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[135] C. Chen, Z. Liu, P. Zhao, J. Zhou, X. Li, Privacy preserving point-of-interest
    recommendation using decentralized matrix factorization, arXiv preprint arXiv:2003.05610
    (2020).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[136] X. Wang, M. Nguyen, J. Carr, L. Cui, K. Lim, A group preference-based
    privacy-preserving poi recommender system, ICT Express (2020).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
