- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-09-06 20:08:32'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: '[1712.02777] Deep learning Approach for Classifying, Detecting and Predicting
    Photometric Redshifts of Quasars in the Sloan Digital Sky Survey Stripe 82'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://ar5iv.labs.arxiv.org/html/1712.02777](https://ar5iv.labs.arxiv.org/html/1712.02777)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '¹¹institutetext: LUPM UMR 5299 CNRS/UM, Université de Montpellier, CC 72, 34095
    Montpellier Cedex 05, France ²²institutetext: CPPM, CNRS-IN2P3, Université Aix
    Marseille II, CC 907, 13288 Marseille cedex 9, France'
  prefs: []
  type: TYPE_NORMAL
- en: '²²email: pasquet@cppm.in2p3.fr ³³institutetext: LIRMM UMR 5506 - team ICAR,
    Université de Montpellier, Campus St Priest, 34090 Montpellier ⁴⁴institutetext:
    LSIS UMR 7296, CNRS, ENSAM, Université De Toulon et Aix-Marseille, Bâtiment Polytech,
    13397 Marseille'
  prefs: []
  type: TYPE_NORMAL
- en: '⁴⁴email: jerome.pasquet@lsis.org'
  prefs: []
  type: TYPE_NORMAL
- en: +
  prefs: []
  type: TYPE_NORMAL
- en: Deep learning Approach for Classifying, Detecting and Predicting Photometric
    Redshifts of Quasars in the Sloan Digital Sky Survey Stripe 82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: J. Pasquet-Itam 1122    J. Pasquet 3344(Accepted November 3, 2017)
  prefs: []
  type: TYPE_NORMAL
- en: We apply a convolutional neural network (CNN) to classify and detect quasars
    in the Sloan Digital Sky Survey Stripe 82 and also to predict the photometric
    redshifts of quasars. The network takes the variability of objects into account
    by converting light curves into images. The width of the images, noted $w$, corresponds
    to the five magnitudes ugriz and the height of the images, noted $h$, represents
    the date of the observation. The CNN provides good results since its precision
    is $0.988$ for a recall of $0.90$, compared to a precision of $0.985$ for the
    same recall with a random forest classifier. Moreover 175 new quasar candidates
    are found with the CNN considering a fixed recall of $0.97$. The combination of
    probabilities given by the CNN and the random forest makes good performance even
    better with a precision of $0.99$ for a recall of $0.90$.
  prefs: []
  type: TYPE_NORMAL
- en: For the redshift predictions, the CNN presents excellent results which are higher
    than those obtained with a feature extraction step and different classifiers (a
    K-nearest-neighbors, a support vector machine, a random forest and a gaussian
    process classifier). Indeed, the accuracy of the CNN within $|\Delta z|<0.1$ can
    reach 78.09$\%$, within $|\Delta z|<0.2$ reaches 86.15$\%$, within $|\Delta z|<0.3$
    reaches 91.2$\%$ and the value of rms is 0.359\. The performance of the KNN decreases
    for the three $|\Delta z|$ regions, since within the accuracy of $|\Delta z|<0.1$,
    $|\Delta z|<0.2$ and $|\Delta z|<0.3$ is 73.72$\%$, 82.46$\%$ and 90.09$\%$ respectively,
    and the value of rms amounts to 0.395\. So the CNN successfully reduces the dispersion
    and the catastrophic redshifts of quasars. This new method is very promising for
    the future of big databases like the Large Synoptic Survey Telescope.
  prefs: []
  type: TYPE_NORMAL
- en: 'Key Words.:'
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Methods: data analysis – Techniques: photometric – Techniques: image processing
    – quasars: general – Surveys'
  prefs: []
  type: TYPE_NORMAL
- en: 1 Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Quasars are powered by accretion onto supermassive black holes at the dynamical
    centers of their host galaxies, producing high luminosities spanning a broad range
    of frequencies. They are of paramount importance in astronomy. For example, their
    studies can inform on massive blackhole (e.g. Portinari et al. ([2012](#bib.bib38))).
    Moreover, as they are the most luminous Active Galactic Nuclei (AGN), they can
    be seen far across the Universe. So they give clues to the evolution and structure
    of galaxies (e.g. Hopkins et al. ([2006](#bib.bib20))). They are also used as
    background objects to study the absorption of intergalactic matter in the line
    of sight, which have many applications in Cosmology (e.g. Lopez et al. ([2008](#bib.bib30))).
    With the advent of large and dedicated surveys such as the Sloan Digital Sky Survey
    (SDSS; York et al. ([2000](#bib.bib50))) and the 2dF Quasar Redshift Survey (2QZ;
    Croom et al. ([2009](#bib.bib10))), the number of known quasars has rapidly increased.
    Thus, the SDSS DR7 Quasar catalog (Schneider et al. ([2010](#bib.bib43))) contains
    105,783 spectroscopically confirmed quasars. The catalog covers an area of $\simeq
    9380\,\,\textrm{deg}^{2}$ and the quasar redshifts range from 0.065 to 5.46.
  prefs: []
  type: TYPE_NORMAL
- en: With the soon coming of the Large Synoptic Survey Telescope (LSST Science Collaboration
    ([2009](#bib.bib31))), it is important to develop classification tools for quasar
    detection given the huge amount of future data. In this way, machine learning
    algorithms are being used increasingly. These algorithms permit to predict the
    label of an object thanks to the extraction of different features which characterize
    the object (e.g. the color of the source). Several classifiers are now commonly
    used in astronomy like random forests which are a set of decision trees (Quinlan
    ([1986](#bib.bib39))), Naives Bayes (Duda & Hart ([1973](#bib.bib12))), Neural
    Networks (Rumelhart et al. ([1986](#bib.bib41))) and Support Vector Machines (Cortes
    & Vapnik ([1995](#bib.bib7))). These methods are very powerful in classification
    and detection of variable objects in astronomy (e.g. Eyer & Blake ([2005](#bib.bib13));
    Dubath et al. ([2011](#bib.bib11)); Blomme et al. ([2011](#bib.bib4)); Rimoldini
    et al. ([2012](#bib.bib40)); Peng et al. ([2012](#bib.bib36)); Peters et al. ([2015](#bib.bib37))).
    We can also cite the recent work of Hernitschek et al. ([2016](#bib.bib19)) on
    the classification and the detection of QSOs in the Pan-STARR S1 (PS1) $3\pi$
    survey. This is a multi-epoch survey that covered three quarters of the sky at
    typically 35 epochs between 2010 and the beginning of 2014 with five filters ($g_{P1}$,
    $r_{P1}$, $i_{P1}$, $z_{P1}$, $y_{P1}$). They use a random forest classifier and
    colors and a structure function as features, to identify 1,000,000 QSO candidates.
  prefs: []
  type: TYPE_NORMAL
- en: The main motivation for this work is to propose a new classification and a detection
    method for quasars in the Sloan Digital Sky Survey Stripe 82, that can be easily
    adapted to large future surveys like LSST or DES (The Dark Energy Survey Collaboration
    ([2005](#bib.bib47))). The algorithms mentioned above, involves a feature extraction
    step but the set of features can be incomplete to characterize the variability
    of quasars. That is why we proposed to use another branch of machine learning
    namely deep learning. It is a supervised learning which takes raw data into account
    and extracts by itself the best features for a given problem. This method gives
    very good results in many fields. In particular we use a Convolutional Neural
    Network (CNN) architecture which gives excellent results in several signal processing
    challenges as Imagenet (Russakovsky et al. ([2015](#bib.bib42))), LifeClef (Joly
    et al. ([2016](#bib.bib26))) etc… This approach is very recent in Astronomy and
    its first applications show good results, for example for the classification of
    galaxy morphologies from astronomical images (Huertas-Company et al. ([2015](#bib.bib21))).
  prefs: []
  type: TYPE_NORMAL
- en: In this work, we propose an innovative architecture based on a CNN to detect
    and classify quasars from light curves, thus taking into account the variability
    of objects. We also apply this kind of architecture to estimate the photometric
    redshifts of quasars. The estimation of photometric redshifts by a CNN classifier
    is an original method which is very promising. This paper is organized as follows.
    In Section 2, we introduce the Stripe 82 data set. In Section 3, we describe the
    CNN architecture and processing. In Section 4, we propose our CNN architecture
    for the detection and the classification of quasars. In Section 5, we analyze
    and discuss the new quasar candidates detected by our method. Then, we compare
    our algorithm with a random forest classifier and combine them. In Section 6 we
    propose to use a similar CNN architecture to predict the photometric redshifts
    of quasars. Finally we summarize our results in Section 7.
  prefs: []
  type: TYPE_NORMAL
- en: 2 Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![Refer to caption](img/45439edb0bf45a05b95c66801f9bc2c9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1: Two examples of variable object types in the UWVSC catalog. On left
    panel, it is a quasar light curve and on right panel a RR Lyrae light curve.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/6f6f92d6cb36e4d2f21af736f8f4a93f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2: Distribution of spectroscopic redshifts of known quasars in the UWVSC
    catalog.'
  prefs: []
  type: TYPE_NORMAL
- en: The Sloan Digital Sky Survey (SDSS) is a multi-filter imaging and spectroscopic
    redshift survey using a dedicated 2.5-meter telescope at Apache Point observatory
    in New Mexico. It provides deep photometry ($r<22.5$) in five passbands (ugriz).
    The SDSS has imaged a 2.5 degree wide stripe along the Celestial Equator in the
    Southern Galactic Cap several times, called Stripe 82\. It is a deeper survey
    of 275 $\textrm{deg}^{2}$. It was previously imaged about once to three times
    a year from 2000 to 2005 (SDSS-I), then with an increased cadence of 10-20 times
    a year from 2005 to 2008 (SDSS-II) as part of the SDSS-II supernovae survey (Frieman
    et al. ([2008](#bib.bib15))). There are on average 53 epochs, over a time span
    of 5 to 10 years (Abazajian et al. ([2009](#bib.bib1))).
  prefs: []
  type: TYPE_NORMAL
- en: 'The imaging data used in our work consists of objects solely from the publicly
    available variable source catalog (UWVSC; Ivezić et al. ([2007](#bib.bib24)),
    Sesar et al. ([2007](#bib.bib44))) constructed by researchers at the University
    of Washington. This catalog contains 67,507 unresolved, variable candidates with
    $g\leq 20.5\,\,\textrm{mag}$, at least 10 observations in both g and r bands,
    and a light curve with a root-mean-scatter (rms) $>0.05$ mag and $\chi^{2}$ per
    degree of freedom $>3$ in both g and r bands. Among the data, some variable objects
    have been identified, they are essentially quasars and pulsating stars (see Figure
    [1](#S2.F1 "Figure 1 ‣ 2 Data ‣ Deep learning Approach for Classifying, Detecting
    and Predicting Photometric Redshifts of Quasars in the Sloan Digital Sky Survey
    Stripe 82")). However a large part of the data consists of unknown variable objects.
    In this way this catalog is interesting to identify new variable objects. This
    catalog and all light curves are publicly available.¹¹1http://www.astro.washington.edu/users/ivezic/sdss/catalogs/S82variables.html
    We use the UWVSC as the basis for learning and testing for several reasons: 1)
    it contains over 9000 known spectroscopically confirmed quasars (Meusinger et al.
    ([2011](#bib.bib32))) whose the distribution of redshifts is shown in Figure [2](#S2.F2
    "Figure 2 ‣ 2 Data ‣ Deep learning Approach for Classifying, Detecting and Predicting
    Photometric Redshifts of Quasars in the Sloan Digital Sky Survey Stripe 82") ;
    2) it is a robust variable catalog with a good photometry; 3) the catalog is a
    useful testbed for time domain science to prepare future data sets like LSST.'
  prefs: []
  type: TYPE_NORMAL
- en: 3 The Convolutional Neural Network
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this work, we are particularly interested in CNN which are an approach to
    deep learning methods that are proving their worth in many research fields.
  prefs: []
  type: TYPE_NORMAL
- en: 3.1 Light Curve Images
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As a CNN takes images as input, we had to find a way to convert a light curve
    to an image taking into account the variability of objects which gives a crucial
    information for the classification of variable objects. Thus, we propose to create
    images whose the width is represented by the five magnitudes (u, g, r, i and z),
    and the height corresponds to the date of the observation. In Stripe 82, there
    are a maximum of 3340 days of observation so images should have a dimension of
    5$\times$3340 pixels. However processing these images is very costly in VRAM memory,
    so we divided the time interval of a light curve by averaging the observations
    taken on two consecutive days, so as to get images of dimensions of 5$\times$1670
    pixels. Then 60 pixels were appended to the edges of the image to avoid side-effects.
    Therefore the size of the final images, called hereafter, LCI (Light Curve Images),
    is 5$\times$1700 pixels.
  prefs: []
  type: TYPE_NORMAL
- en: In order to increase the robustness of the network, the learning needs to be
    free of the positions of points. To do this, we generate new light curves by making
    time translations for all points on a given light curve. Thus only the global
    shape of the light curve is taken into account and no positions of points are
    considered as more important than others. This process is similar to that of classical
    data augmentation (Le Guennec et al. ([2016](#bib.bib29)); Krizhevsky et al. ([2012](#bib.bib27)))
    in the CNN learning and increases the size of the database by a factor of 13.
  prefs: []
  type: TYPE_NORMAL
- en: 3.2 Introduction to the CNN
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Refer to caption](img/1e2a8259be396cc77aab33cf1a282671.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3: Representation of two convolution layers of a network. The first
    layer is composed of 3 neurons making a convolution between the input image and
    their kernels. The second layer includes two neurons making a sum of convolutions
    as defined in the equation [1](#S3.E1 "In 3.2.1 Convolution ‣ 3.2 Introduction
    to the CNN ‣ 3 The Convolutional Neural Network ‣ Deep learning Approach for Classifying,
    Detecting and Predicting Photometric Redshifts of Quasars in the Sloan Digital
    Sky Survey Stripe 82").'
  prefs: []
  type: TYPE_NORMAL
- en: 'An artificial neuron is a computational model inspired by natural neurons.
    A natural neuron is an electrically excitable cell that processes and transmits
    information via synapses which are connected with other cells. When the signal
    received is strong enough (higher than a specific threshold), the neuron is activated
    and emits a signal which might activate other neurons. Artificial neurons do not
    reproduce the complexity of real neurons, but the global structure is quite similar.
    Indeed, input data are multiplied by weights and then computed by a mathematical
    function which determines the activation of the neuron. An artificial neural network
    is then composed of different neuron layers connected with each other. A layer
    of rank $n$ takes as input the output of the layer of rank $n-1$. The nomenclature
    of layers is the following: i) a layer whose input is not connected to the output
    of another layer, but to the raw data is called input layer; ii) a layer whose
    output is not connected is called an output layer; iii) a layer is called ”hidden”
    if it has either input or output. Each layer is composed of several tens of thousands
    of neurons. In the specific case of a CNN, neurons perform convolution (see Section
    [3.2.1](#S3.SS2.SSS1 "3.2.1 Convolution ‣ 3.2 Introduction to the CNN ‣ 3 The
    Convolutional Neural Network ‣ Deep learning Approach for Classifying, Detecting
    and Predicting Photometric Redshifts of Quasars in the Sloan Digital Sky Survey
    Stripe 82")) and pooling operations (see Section [3.2.2](#S3.SS2.SSS2 "3.2.2 Pooling
    ‣ 3.2 Introduction to the CNN ‣ 3 The Convolutional Neural Network ‣ Deep learning
    Approach for Classifying, Detecting and Predicting Photometric Redshifts of Quasars
    in the Sloan Digital Sky Survey Stripe 82")). Layers are sequentially processed
    as follows: first, a convolution operation is applied on raw input data; then
    the output signal is modified by a non linear function; finally a pooling operation
    can be processed. Note that the output of a layer could be considered as a set
    of images. In CNN terminology, each image has named feature map. After all convolution
    and pooling layers, the last convolution layer is connected to a succession of
    layers called ”fully connected layers” and operating as a classical neural network.
    The last one uses a softmax operation to give a probability that the input light
    curve is either a quasar light curve or another object. To perform the learning
    phase, parameters of convolution and fully connected layers are tuned using a
    stochastic gradient descent specific to the given problem, in this case the recognition
    of quasar light curves. This optimization process is very costly, but it can be
    highly parallelizable. We use the Caffe (Jia et al. ([2014](#bib.bib25))) framework
    to train our CNN. The results are obtained using a GTX Titan X card, packed in
    3,072 cores with a 1 GHz base.'
  prefs: []
  type: TYPE_NORMAL
- en: 3.2.1 Convolution
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'If we consider a layer or a set of feature maps as input, the first step is
    to apply convolutions. For the first layer, the convolution is done between the
    input image and a filter. Each filter leads to a filtered image. Convolution layers
    are composed of convolutif neurons. Each convolutif neuron applies the sum of
    2D convolutions between the input feature maps and its kernel. In the simple case
    where only one feature map is passed into the input convolutif neuron, the 2D
    convolution between the K kernel of size $w\times h$ and the input feature map
    $I\in\mathbb{R}^{2}$ is noted $\mathbf{I}*\mathbf{K}$ and is defined as: $(I*K)_{x,y}=\sum_{x^{\prime}=x-\frac{w}{2}}^{x+\frac{w}{2}}\,\,\sum_{y^{\prime}=y-\frac{h}{2}}^{y+\frac{h}{2}}\mathbf{K}_{x^{\prime}+\frac{w}{2}-x,\,y^{\prime}+\frac{h}{2}-y}\mathbf{I}_{x^{\prime},y^{\prime}}$
    with (x,y) the coordinates of a given pixel into the output feature map.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the case of convolutional neural networks, a neuron takes as input each
    of $p$ feature maps of the previously layer noted $I^{l}$ with $l\in\{0...p\}$.
    The resulting feature map is the sum of $p$ 2D convolutions between the kernel
    $K^{l}$ and the map $I^{l}$ (see Figure [3](#S3.F3 "Figure 3 ‣ 3.2 Introduction
    to the CNN ‣ 3 The Convolutional Neural Network ‣ Deep learning Approach for Classifying,
    Detecting and Predicting Photometric Redshifts of Quasars in the Sloan Digital
    Sky Survey Stripe 82")) and is defined as:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | $(\mathbf{I}*\mathbf{K})=\sum_{l=0}^{p}(\mathbf{K}^{l}\mathbf{*I}^{l})$
    |  | (1) |'
  prefs: []
  type: TYPE_TB
- en: In this work we propose to use two types of convolutions that we call “temporal
    convolutions” and “filter convolutions”. The temporal convolutions use a kernel
    with a x-dimension of 1 pixel, so the five magnitudes (u, g, r, i and z) are convoluted
    separately, and with a y-dimension variable in the interval {5, 11, 21, 41} pixels.
    Thus the temporal convolutions take into account a value of magnitude at different
    times and at different resolutions. The advantage of this type of convolutions
    is to create a network which is able to detect short and long variability patterns.
  prefs: []
  type: TYPE_NORMAL
- en: The filter convolutions use a kernel with a dimension of $5\times 1$ pixels,
    so they merge the values of the five magnitudes in order to integrate the information
    from color which is an important feature to characterize variable objects, at
    a given time.
  prefs: []
  type: TYPE_NORMAL
- en: 3.2.2 Pooling
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The network can be composed of pooling layers which quantify the information
    while reducing the data volume. The Pooling Layer operates independently on each
    feature map. On each feature map, it slides a specific filter which represents
    the local distribution. The two most used methods consist in selecting only the
    maximal or the mean value of the data in the local region. As the observational
    data are not continuous in time, several pixels in the LCI are equal to zero.
    Thus we decide to adapt the pooling by the mean, i.e. we don’t taking into account
    the null pixels in the computation of the mean. Our architecture includes this
    improvement of the pooling on the first pooling layers of the network. The others
    layers contain a max pooling.
  prefs: []
  type: TYPE_NORMAL
- en: 3.2.3 Activation Functions
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The convolution layers are followed by non linear transformations whose goal
    is to solve the non-linear classification problems. The two most used functions
    are the ReLU (Rectify Lineair Unit, Nair & Hinton ([2010](#bib.bib33))) defined
    by $f(x)=max(x,0)$ and the hyperbolic tangent. In our network, to saturate the
    input signal we apply a hyperbolic tangent function on all of the first convolution
    layers. The other layers use a PReLU (He et al. ([2015](#bib.bib18))) function
    defined as: <math id="S3.SS2.SSS3.p1.2.m2.5" class="ltx_Math" alttext="f(x)=\begin{cases}\alpha
    x&amp;x<0\\'
  prefs: []
  type: TYPE_NORMAL
- en: x&amp;x\geq 0\end{cases}" display="inline"><semantics id="S3.SS2.SSS3.p1.2.m2.5a"><mrow
    id="S3.SS2.SSS3.p1.2.m2.5.6" xref="S3.SS2.SSS3.p1.2.m2.5.6.cmml"><mrow id="S3.SS2.SSS3.p1.2.m2.5.6.2"
    xref="S3.SS2.SSS3.p1.2.m2.5.6.2.cmml"><mi id="S3.SS2.SSS3.p1.2.m2.5.6.2.2" xref="S3.SS2.SSS3.p1.2.m2.5.6.2.2.cmml">f</mi><mo
    lspace="0em" rspace="0em" id="S3.SS2.SSS3.p1.2.m2.5.6.2.1" xref="S3.SS2.SSS3.p1.2.m2.5.6.2.1.cmml">​</mo><mrow
    id="S3.SS2.SSS3.p1.2.m2.5.6.2.3.2" xref="S3.SS2.SSS3.p1.2.m2.5.6.2.cmml"><mo stretchy="false"
    id="S3.SS2.SSS3.p1.2.m2.5.6.2.3.2.1" xref="S3.SS2.SSS3.p1.2.m2.5.6.2.cmml">(</mo><mi
    id="S3.SS2.SSS3.p1.2.m2.5.5" xref="S3.SS2.SSS3.p1.2.m2.5.5.cmml">x</mi><mo stretchy="false"
    id="S3.SS2.SSS3.p1.2.m2.5.6.2.3.2.2" xref="S3.SS2.SSS3.p1.2.m2.5.6.2.cmml">)</mo></mrow></mrow><mo
    id="S3.SS2.SSS3.p1.2.m2.5.6.1" xref="S3.SS2.SSS3.p1.2.m2.5.6.1.cmml">=</mo><mrow
    id="S3.SS2.SSS3.p1.2.m2.4.4" xref="S3.SS2.SSS3.p1.2.m2.5.6.3.1.cmml"><mo id="S3.SS2.SSS3.p1.2.m2.4.4.5"
    xref="S3.SS2.SSS3.p1.2.m2.5.6.3.1.1.cmml">{</mo><mtable columnspacing="5pt" rowspacing="0pt"
    id="S3.SS2.SSS3.p1.2.m2.4.4.4" xref="S3.SS2.SSS3.p1.2.m2.5.6.3.1.cmml"><mtr id="S3.SS2.SSS3.p1.2.m2.4.4.4a"
    xref="S3.SS2.SSS3.p1.2.m2.5.6.3.1.cmml"><mtd class="ltx_align_left" columnalign="left"
    id="S3.SS2.SSS3.p1.2.m2.4.4.4b" xref="S3.SS2.SSS3.p1.2.m2.5.6.3.1.cmml"><mrow
    id="S3.SS2.SSS3.p1.2.m2.1.1.1.1.1.1" xref="S3.SS2.SSS3.p1.2.m2.1.1.1.1.1.1.cmml"><mi
    id="S3.SS2.SSS3.p1.2.m2.1.1.1.1.1.1.2" xref="S3.SS2.SSS3.p1.2.m2.1.1.1.1.1.1.2.cmml">α</mi><mo
    lspace="0em" rspace="0em" id="S3.SS2.SSS3.p1.2.m2.1.1.1.1.1.1.1" xref="S3.SS2.SSS3.p1.2.m2.1.1.1.1.1.1.1.cmml">​</mo><mi
    id="S3.SS2.SSS3.p1.2.m2.1.1.1.1.1.1.3" xref="S3.SS2.SSS3.p1.2.m2.1.1.1.1.1.1.3.cmml">x</mi></mrow></mtd><mtd
    class="ltx_align_left" columnalign="left" id="S3.SS2.SSS3.p1.2.m2.4.4.4c" xref="S3.SS2.SSS3.p1.2.m2.5.6.3.1.cmml"><mrow
    id="S3.SS2.SSS3.p1.2.m2.2.2.2.2.2.1" xref="S3.SS2.SSS3.p1.2.m2.2.2.2.2.2.1.cmml"><mi
    id="S3.SS2.SSS3.p1.2.m2.2.2.2.2.2.1.2" xref="S3.SS2.SSS3.p1.2.m2.2.2.2.2.2.1.2.cmml">x</mi><mo
    id="S3.SS2.SSS3.p1.2.m2.2.2.2.2.2.1.1" xref="S3.SS2.SSS3.p1.2.m2.2.2.2.2.2.1.1.cmml"><</mo><mn
    id="S3.SS2.SSS3.p1.2.m2.2.2.2.2.2.1.3" xref="S3.SS2.SSS3.p1.2.m2.2.2.2.2.2.1.3.cmml">0</mn></mrow></mtd></mtr><mtr
    id="S3.SS2.SSS3.p1.2.m2.4.4.4d" xref="S3.SS2.SSS3.p1.2.m2.5.6.3.1.cmml"><mtd class="ltx_align_left"
    columnalign="left" id="S3.SS2.SSS3.p1.2.m2.4.4.4e" xref="S3.SS2.SSS3.p1.2.m2.5.6.3.1.cmml"><mi
    id="S3.SS2.SSS3.p1.2.m2.3.3.3.3.1.1" xref="S3.SS2.SSS3.p1.2.m2.3.3.3.3.1.1.cmml">x</mi></mtd><mtd
    class="ltx_align_left" columnalign="left" id="S3.SS2.SSS3.p1.2.m2.4.4.4f" xref="S3.SS2.SSS3.p1.2.m2.5.6.3.1.cmml"><mrow
    id="S3.SS2.SSS3.p1.2.m2.4.4.4.4.2.1" xref="S3.SS2.SSS3.p1.2.m2.4.4.4.4.2.1.cmml"><mi
    id="S3.SS2.SSS3.p1.2.m2.4.4.4.4.2.1.2" xref="S3.SS2.SSS3.p1.2.m2.4.4.4.4.2.1.2.cmml">x</mi><mo
    id="S3.SS2.SSS3.p1.2.m2.4.4.4.4.2.1.1" xref="S3.SS2.SSS3.p1.2.m2.4.4.4.4.2.1.1.cmml">≥</mo><mn
    id="S3.SS2.SSS3.p1.2.m2.4.4.4.4.2.1.3" xref="S3.SS2.SSS3.p1.2.m2.4.4.4.4.2.1.3.cmml">0</mn></mrow></mtd></mtr></mtable></mrow></mrow><annotation-xml
    encoding="MathML-Content" id="S3.SS2.SSS3.p1.2.m2.5b"><apply id="S3.SS2.SSS3.p1.2.m2.5.6.cmml"
    xref="S3.SS2.SSS3.p1.2.m2.5.6"><apply id="S3.SS2.SSS3.p1.2.m2.5.6.2.cmml" xref="S3.SS2.SSS3.p1.2.m2.5.6.2"><ci
    id="S3.SS2.SSS3.p1.2.m2.5.6.2.2.cmml" xref="S3.SS2.SSS3.p1.2.m2.5.6.2.2">𝑓</ci><ci
    id="S3.SS2.SSS3.p1.2.m2.5.5.cmml" xref="S3.SS2.SSS3.p1.2.m2.5.5">𝑥</ci></apply><apply
    id="S3.SS2.SSS3.p1.2.m2.5.6.3.1.cmml" xref="S3.SS2.SSS3.p1.2.m2.4.4"><csymbol
    cd="latexml" id="S3.SS2.SSS3.p1.2.m2.5.6.3.1.1.cmml" xref="S3.SS2.SSS3.p1.2.m2.4.4.5">cases</csymbol><apply
    id="S3.SS2.SSS3.p1.2.m2.1.1.1.1.1.1.cmml" xref="S3.SS2.SSS3.p1.2.m2.1.1.1.1.1.1"><ci
    id="S3.SS2.SSS3.p1.2.m2.1.1.1.1.1.1.2.cmml" xref="S3.SS2.SSS3.p1.2.m2.1.1.1.1.1.1.2">𝛼</ci><ci
    id="S3.SS2.SSS3.p1.2.m2.1.1.1.1.1.1.3.cmml" xref="S3.SS2.SSS3.p1.2.m2.1.1.1.1.1.1.3">𝑥</ci></apply><apply
    id="S3.SS2.SSS3.p1.2.m2.2.2.2.2.2.1.cmml" xref="S3.SS2.SSS3.p1.2.m2.2.2.2.2.2.1"><ci
    id="S3.SS2.SSS3.p1.2.m2.2.2.2.2.2.1.2.cmml" xref="S3.SS2.SSS3.p1.2.m2.2.2.2.2.2.1.2">𝑥</ci><cn
    type="integer" id="S3.SS2.SSS3.p1.2.m2.2.2.2.2.2.1.3.cmml" xref="S3.SS2.SSS3.p1.2.m2.2.2.2.2.2.1.3">0</cn></apply><ci
    id="S3.SS2.SSS3.p1.2.m2.3.3.3.3.1.1.cmml" xref="S3.SS2.SSS3.p1.2.m2.3.3.3.3.1.1">𝑥</ci><apply
    id="S3.SS2.SSS3.p1.2.m2.4.4.4.4.2.1.cmml" xref="S3.SS2.SSS3.p1.2.m2.4.4.4.4.2.1"><ci
    id="S3.SS2.SSS3.p1.2.m2.4.4.4.4.2.1.2.cmml" xref="S3.SS2.SSS3.p1.2.m2.4.4.4.4.2.1.2">𝑥</ci><cn
    type="integer" id="S3.SS2.SSS3.p1.2.m2.4.4.4.4.2.1.3.cmml" xref="S3.SS2.SSS3.p1.2.m2.4.4.4.4.2.1.3">0</cn></apply></apply></apply></annotation-xml><annotation
    encoding="application/x-tex" id="S3.SS2.SSS3.p1.2.m2.5c">f(x)=\begin{cases}\alpha
    x&x<0\\ x&x\geq 0\end{cases}</annotation></semantics></math> , with $\alpha$ an
    hyperparameter defined by back-propagation.
  prefs: []
  type: TYPE_NORMAL
- en: 4 Our CNN architecture
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![Refer to caption](img/c33e458e9ba061261fcc91c78c44d0ba.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4: Representation of the architecture that we are proposing. The structure
    is subdivided into five successive processing blocks at different temporal resolutions.
    Two types of convolutions are used: temporal convolutions with four kernel sizes:
    $41\times 1$, $21\times 1$, $11\times 1$ and $5\times 1$ and filter convolutions
    with a kernel size of $5\times 1$.'
  prefs: []
  type: TYPE_NORMAL
- en: The overall structure can be subdivided into successive processing blocks at
    different temporal resolutions (4, 8, 16, 32 and 64 days) as shown in Figure [4](#S4.F4
    "Figure 4 ‣ 4 Our CNN architecture ‣ Deep learning Approach for Classifying, Detecting
    and Predicting Photometric Redshifts of Quasars in the Sloan Digital Sky Survey
    Stripe 82"), on five levels of depth. The initial resolution of LCI is two days
    per pixel. At each processing level, this resolution is reduced by a factor of
    2, by a max-pooling. Moreover, each processing block is powered by a set of feature
    maps coming from an average-pooling retrieved a parallel on the first light curve
    image. These feature maps are then convoluted by three types of temporal convolutions,
    processing images by three different filter sizes. This set of temporal convolutions
    is similar to a multi-resolutions process which is used in modern architectures
    like the GoogleNet network (Szegedy et al. ([2015](#bib.bib46))). The resulting
    feature maps are then transmitted to the processing block of the associated resolution.
    We note $\mathbb{F}_{i}$ the set of resulting feature maps transmitted to the
    processing block $i$. Thus as shown in Figure [4](#S4.F4 "Figure 4 ‣ 4 Our CNN
    architecture ‣ Deep learning Approach for Classifying, Detecting and Predicting
    Photometric Redshifts of Quasars in the Sloan Digital Sky Survey Stripe 82"),
    feature maps whose a pixel is represented by 4 days are transmitted to the module
    A, and those whose a pixel is represented by 8 days are transmitted to the module
    B, etc…
  prefs: []
  type: TYPE_NORMAL
- en: In a first step, a filter convolution (MC1 in schema [4](#S4.F4 "Figure 4 ‣
    4 Our CNN architecture ‣ Deep learning Approach for Classifying, Detecting and
    Predicting Photometric Redshifts of Quasars in the Sloan Digital Sky Survey Stripe
    82")) is applied on $\mathbb{F}_{A}$. The feature maps resulting from MC1 are
    noted $\mathbb{F}^{\prime}_{A}$. We then apply two temporal convolutions (TC7
    and TC8) with weights called ”shared”. This term can be explained by the difference
    of the convolution kernels applied to the sets $\mathbb{F}_{A}$ and $\mathbb{F}^{\prime}_{A}$.
    We modify the standard convolutions so a given kernel can be applied on two sets
    of feature maps with different sizes. The goal is to highlight similar temporal
    patterns between two sets of feature maps $\mathbb{F}_{A}$ and $\mathbb{F}^{\prime}_{A}$,
    and so between mixed and not-mixed magnitudes amongst themselves. The feature
    maps coming from the convolution layers TC7 and TC8 on the set $\mathbb{F}_{A}$
    are concatenated and then pooled in the pooling layer P4\. The resulting feature
    maps are noted $\Omega_{B}$ and then transmitted to the processing block B. The
    same process is applied to the set of feature maps $\mathbb{F}^{\prime}_{A}$ giving
    the set $\Omega^{\prime}_{B}$.
  prefs: []
  type: TYPE_NORMAL
- en: 'The second processing block performs a temporal convolution with two kernels
    of different sizes (TC12 and TC13) on $\mathbb{F}_{B}$. The resulting feature
    maps are then transmitted to two layers: C7 and MC2\. In the C7 layer, they are
    concatenated with the set $\Omega_{B}$. In the MC2 layer, they are convoluted
    by a filter. The resulting feature maps are concatenated with that of the set
    $\Omega^{\prime}_{B}$. The set of produced feature maps are temporally convoluted
    with shared weights in the TC14 layer. The result is then pooled and transmitted
    to the processing block C.'
  prefs: []
  type: TYPE_NORMAL
- en: The functioning of the rest of the blocks are similar to that of block B. The
    number of feature maps and the size of each layer are noted in Table [A1](#A1.T1
    "Table A1 ‣ Appendix A Appendix ‣ Deep learning Approach for Classifying, Detecting
    and Predicting Photometric Redshifts of Quasars in the Sloan Digital Sky Survey
    Stripe 82") in the appendix. We can remark that the processing block E transmits
    only feature maps whose magnitudes are merged, which are then temporally convoluted
    and transmitted to the fully connected layers. After convolution layers, the size
    of feature maps are 53$\times$1 pixel.
  prefs: []
  type: TYPE_NORMAL
- en: In the network architecture we use two processes to avoid over fitting. First,
    all the feature maps are normalized using the batch normalization (Ioffe & Szegedy
    ([2015](#bib.bib23))). Second, the outputs of the fully connected layers are randomly
    dropout (Srivastava et al. ([2014](#bib.bib45))). During the back-propagation
    processing, the network has to determine a large number of parameters, namely
    1,802,032 in the convolution layers and 11,468,80 in the fully-connected layers.
  prefs: []
  type: TYPE_NORMAL
- en: 5 Classification Results
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 5.1 Experimental protocol
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We did five cross-validations of the database by always selecting 75$\%$ of
    the LCI for the learning base and 25$\%$ for the testing base.For each of the
    five cross-validations, each CNN completed its learning on 60 epochs (during an
    epoch, each LCI is transmitted to the network and its error is back-propagated).
    Each CNN has three outputs on the softmax layer corresponding to the following
    classes : quasars, pulsating stars (RR Lyrae and $\delta$ Scuti) and other objects.
    During the testing phase, each CNN gives a list of detected quasars in the testing
    base. We merge the lists given by each CNN into one list that we evaluate.'
  prefs: []
  type: TYPE_NORMAL
- en: 5.2 Results
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Refer to caption](img/c86faea7f802fe4da7ccb6996e5b6823.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5: The left histogram illustrates the performance of the CNN depending
    on the median g-band magnitude. The right histogram shows the performance of the
    CNN in function of the redshift. On each histogram the blue bars represent the
    number of well detected quasars by the CNN and the green bars the total number
    of quasars inside the corresponding bin. The recall is indicated over each couple
    of bars.'
  prefs: []
  type: TYPE_NORMAL
- en: The performance of the CNN is given on Figure [5](#S5.F5 "Figure 5 ‣ 5.2 Results
    ‣ 5 Classification Results ‣ Deep learning Approach for Classifying, Detecting
    and Predicting Photometric Redshifts of Quasars in the Sloan Digital Sky Survey
    Stripe 82") in function of the magnitude and the redshift. We can notice that
    for a g-band magnitude below 17 magnitudes, the value of the recall decreases
    until a recall of 50%. It is due to the too low number of examples of very bright
    quasars in the training set. Indeed there are only 22 light curves of quasars
    in the training database with magnitudes between 15 and 17\. However the recall
    is similar whatever magnitudes above 17 for the g-band magnitude. It is a very
    interesting result because it means that the CNN performance does not depend on
    the magnitude but only on the number of objects in the training database. This
    effect is less visible on the right histogram of Figure [5](#S5.F5 "Figure 5 ‣
    5.2 Results ‣ 5 Classification Results ‣ Deep learning Approach for Classifying,
    Detecting and Predicting Photometric Redshifts of Quasars in the Sloan Digital
    Sky Survey Stripe 82"). Indeed, it is enough to consider only 5% of the training
    database to reach a recall between 98% and 99%. This experiment shows that the
    CNN is invariant to redshift.
  prefs: []
  type: TYPE_NORMAL
- en: In the testing base, for a fixed recall of 0.97, 175 new quasars detected by
    the CNN have never been identified before. We call them quasar candidates. Figure
    [6](#S5.F6 "Figure 6 ‣ 5.2 Results ‣ 5 Classification Results ‣ Deep learning
    Approach for Classifying, Detecting and Predicting Photometric Redshifts of Quasars
    in the Sloan Digital Sky Survey Stripe 82") represents the spatial distribution
    of found quasars in the testing base by the CNN. The red crosses characterize
    the new quasar candidates.
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/5dfc422472d267dd837b18b98399658e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6: Spatial distribution of quasars detected by the CNN during the testing
    phase. The gray crosses represent the well-known detected quasars, and the red
    crosses are the 175 new quasar candidates. They are uniformly distributed in the
    sky.'
  prefs: []
  type: TYPE_NORMAL
- en: As we can see, the quasars detected by the CNN are distributed in an uniform
    manner. Figure [7](#S5.F7 "Figure 7 ‣ 5.2 Results ‣ 5 Classification Results ‣
    Deep learning Approach for Classifying, Detecting and Predicting Photometric Redshifts
    of Quasars in the Sloan Digital Sky Survey Stripe 82") shows the average number
    of quasars in the sky per square degree, detected by the CNN, against the recall.
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/d6174c38a8f91ffc6e83fb84cb889ba9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7: Average number of quasars in the sky per square degree, detected
    by the CNN, against the recall. The larger the recall, the higher the number of
    the detected quasars is. For a recall of 0.92, the average number of detected
    quasars is 20 per square degree. Then this number is drastically increased since
    the precision is reduced and so the contamination of non-quasar sources is increased.'
  prefs: []
  type: TYPE_NORMAL
- en: As the recall increases, the number of quasars per square degree increases,
    which is consistent as we detected more and more quasars. For a recall around
    0.92, the average number of quasars per square degree is about 20\. Then, this
    number is drastically increased because the precision is reduced and the sample
    is contaminated by sources which are not quasars.
  prefs: []
  type: TYPE_NORMAL
- en: It is also interesting to highlight that a well known property of quasars is
    met by the new quasar candidates, namely a ”bluer when brighter” tendency. This
    trend has been well established in the UV/optical color variations in quasar (e.g.
    Cristiani et al. ([1997](#bib.bib9)), Giveon et al. ([1999](#bib.bib16)), Vanden
    Berk et al. ([2004](#bib.bib48))). Figure [8](#S5.F8 "Figure 8 ‣ 5.2 Results ‣
    5 Classification Results ‣ Deep learning Approach for Classifying, Detecting and
    Predicting Photometric Redshifts of Quasars in the Sloan Digital Sky Survey Stripe
    82") represents the amplitude of variations of detected quasars in the u-band
    filter against the r-band filter at different recalls. We note that $83.6\%$ and
    $88.7\%$ of variation amplitudes in the u-band filter are larger than in the r-band
    filter for a recall of 0.90 and 0.97 respectively. Thus the detected quasars show
    larger variation amplitudes in bluer bands and so a strong wavelength dependence.
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/9fdc25b733207d4315de07102f7ead0a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8: Amplitudes of variation of quasars detected by the CNN from the u-band
    filter against those from the r-band filter at three different recalls: 0.90,
    0.95 and 0.97\. The black crosses represent all the known quasars during the testing
    phase. The red crosses are the 175 new quasar candidates. The dashed line represent
    the line $y=x$. The quasars show larger variation amplitudes in bluer-bands. This
    tendency highlights a strong wavelength dependence.'
  prefs: []
  type: TYPE_NORMAL
- en: 5.3 Comparison with a random forest classifier
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We compare the performance of our algorithm with that of a random forest classifier
    whose we empirically estimated the best parameters on the same database. It contains
    400 decision trees and an unlimited depth. The features used are included in a
    python library named FATS (Feature Analysis for Time Series, Nun et al. ([2015](#bib.bib34)))
    which is a compilation of some of the existing light-curve features.
  prefs: []
  type: TYPE_NORMAL
- en: At a fixed recall of 0.90, the precision is 0.988 for the CNN and 0.985 for
    the random forest. Then for a fixed recall of 0.97, the precision is 0.964 and
    0.973 for the CNN and the random forest respectively. The performances of the
    two methods are closed and a little better for the random forest. A possible explication
    concerns the number of freedom degrees. Indeed for the random forest, about 640
    000 parameters are defined whereas for the CNN there are about 13 000 000\. Thus,
    due to the large number of parameters that have to be determined by backpropagation,
    the CNN should have better performance with more data, especially with large surveys.
  prefs: []
  type: TYPE_NORMAL
- en: 5.4 Combination of a CNN and a random forest
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We combine the probabilities given by the CNN and the random forest by averaging
    them. For a fixed recall of 0.90 the precision is 0.99 and for a recall of 0.97,
    the precision is 0.98\. Thus the combination of the two classifiers makes good
    performance even better. Figure [9](#S5.F9 "Figure 9 ‣ 5.4 Combination of a CNN
    and a random forest ‣ 5 Classification Results ‣ Deep learning Approach for Classifying,
    Detecting and Predicting Photometric Redshifts of Quasars in the Sloan Digital
    Sky Survey Stripe 82") shows the receiver operating characteristic curve (ROC
    curve hereafter) which is a graphical plot that illustrates the performance of
    a classifier by plotting the precision against the recall. We can see that the
    random forest performance (red curve) is better than that of the CNN (black curve)
    until a recall of 0.978, where the CNN performance slightly drops. Moreover the
    ROC curve representing the combination of the two classifiers (green curve) is
    above the two others and shows that combining a CNN classifier and a random forest
    classifier gives better classification performance. The improvement obtained by
    the combination of the CNN and the random forest can be explained by the complementarity
    between the features given to the random forest and the features extracted by
    the CNN. Indeed, features used by the random forest are defined by the user and
    are specific for the classification of light curves of variable objects in general
    but they could not be perfectly designed for this classification problem that
    we considered. On another side the CNN learns from scratch without any prior.
    The CNN found relevant features which are specific to the used database and so
    complete the information given by the features used by the RF. However, since
    the CNN learns features from the data, if there is not a large number of examples
    for a kind of objects, such as the high redshift quasars, the CNN does not find
    and learn the best features. In this case, it is relevant to use the results from
    the random forest to improve the classification. So depending on the number of
    data, the random forest features or the CNN features can complete each other.
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/129ebd81f2a9d23eac762b1f11226f12.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9: ROC curve which plots the precision of the classifier against the
    recall. The performance of the CNN classifier is represented by black dots, those
    of the random forest by red plus and the performance of the combination of the
    two classifiers is represented by green crosses.'
  prefs: []
  type: TYPE_NORMAL
- en: 6 Photometric redshifts of quasars
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Photometric redshifts are a way to determine the redshift of an object by using
    only the apparent magnitudes through different filters, or photometric images.
    They constitute a powerful technique because they allow us to be free of spectroscopy
    data which are limited by the brightness of the source and by the cost of instruments.
    This methodology has been developed by Baum (Baum ([1962](#bib.bib2))) by observing
    the Spectral Energy Distribution (SED) of six elliptic galaxies in the Virgo cluster
    in nine bands from 3730Å to 9875Å. The approach using template-fitting models
    which extracts features from celestial observational information and then matches
    them with the designed templates constructed by theoretical models or real observations
    has been used intensively (e.g. Bolzonella et al. ([2000](#bib.bib5)), Coupon
    et al. ([2009](#bib.bib8)) Ilbert et al. ([2010](#bib.bib22))). However the accuracy
    of the method strongly depends on simulated or real data. Moreover, the emergence
    of massive photometric data obtained by multiple large-scale sky surveys suggests
    the need of an automatic method such as machine learning algorithms. Several methods
    were used to estimate photometric redshifts of galaxies or quasars like a K-nearest
    neighbors (e.g. Zhang et al. ([2013](#bib.bib52)), Kügler et al. ([2015](#bib.bib28))),
    an artificial neural network (e.g. Firth et al. ([2003](#bib.bib14)), Collister
    & Lahav ([2004](#bib.bib6)), Blake et al. ([2007](#bib.bib3)), Oyaizu et al. ([2008](#bib.bib35)),
    Yèche et al. ([2010](#bib.bib49)), Zhang et al. ([2009](#bib.bib51))), both a
    K-nearest neighbors and a support vector machine (Han et al. ([2016](#bib.bib17))).
  prefs: []
  type: TYPE_NORMAL
- en: We propose to predict the photometric redshifts of quasars with a CNN. For that,
    we use 80% of the quasar light curves for the training database and 20% for the
    testing database. To reduce the variability we cross validate the experiment and
    only show the mean of the results. The distribution of known spectroscopy redshifts
    are sliced in 60 bins of 0.04 in width. We used a network with a similar architecture
    that is represented in Figure [4](#S4.F4 "Figure 4 ‣ 4 Our CNN architecture ‣
    Deep learning Approach for Classifying, Detecting and Predicting Photometric Redshifts
    of Quasars in the Sloan Digital Sky Survey Stripe 82"). The softmax gives the
    probability of belonging to each redshifts class. To predict the final regression
    value, results of each class are added by weighting them by the probability given
    by the Softmax. Again, the network takes the LCI as input (see Section [3.1](#S3.SS1
    "3.1 Light Curve Images ‣ 3 The Convolutional Neural Network ‣ Deep learning Approach
    for Classifying, Detecting and Predicting Photometric Redshifts of Quasars in
    the Sloan Digital Sky Survey Stripe 82")) so as to include the information of
    the variability of objects in the estimation of redshifts.
  prefs: []
  type: TYPE_NORMAL
- en: To evaluate the proposed method, we compare it with a more classical approach
    using an extraction of features. For that, we compared the performances of four
    classifiers namely a K-nearest neighbors (KNN), a support vector machine (SVM,
    with linear and Gaussian kernels), a random forest (RF) and a Gaussian process
    classifier.
  prefs: []
  type: TYPE_NORMAL
- en: '| Feature | Absolute error | $\chi^{2}$ | best K |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Mean | 0.282 | 0.239 | 2 |'
  prefs: []
  type: TYPE_TB
- en: '| Mean+error | 0.283 | 0.240 | 2 |'
  prefs: []
  type: TYPE_TB
- en: '| Mean+color+error | 0.263 | 0.199 | 3 |'
  prefs: []
  type: TYPE_TB
- en: '| Mean+color amplitudes+error | 0.253 | 0.182 | 4 |'
  prefs: []
  type: TYPE_TB
- en: '|  |'
  prefs: []
  type: TYPE_TB
- en: '| color+error | 0.226 | 0.163 | 4 |'
  prefs: []
  type: TYPE_TB
- en: '| color | 0.226 | 0.156 | 6 |'
  prefs: []
  type: TYPE_TB
- en: 'Table 1: Evaluation of the K-Nearest Neighbors classifier efficiency using
    different features based on the absolute error and the error given by a $\chi^{2}$
    test. K is the number of neighbors taking into account by the KNN algorithm.'
  prefs: []
  type: TYPE_NORMAL
- en: For each of these classifiers, we used the best combination of features among
    the mean of magnitudes, the magnitude errors, the amplitude of magnitudes, the
    colors and all characteristics included in the python library FATS. In the evaluation,
    the best results are obtained by using a KNN and only the color as a characteristic.
    Indeed as we can see in Table [1](#S6.T1 "Table 1 ‣ 6 Photometric redshifts of
    quasars ‣ Deep learning Approach for Classifying, Detecting and Predicting Photometric
    Redshifts of Quasars in the Sloan Digital Sky Survey Stripe 82") a learning phase
    with only the color as a feature shows the lower absolute error of 0.226 and the
    lower residual of the $\chi^{2}$ test with a value of 0.156\. In this case, the
    number of neighbors taking into account, indicated by the number K in the Table
    [1](#S6.T1 "Table 1 ‣ 6 Photometric redshifts of quasars ‣ Deep learning Approach
    for Classifying, Detecting and Predicting Photometric Redshifts of Quasars in
    the Sloan Digital Sky Survey Stripe 82"), is equal to 6\. Thus we use the performance
    of the KNN by extracting only the color to be compared to the performance of the
    CNN (see Table [1](#S6.T1 "Table 1 ‣ 6 Photometric redshifts of quasars ‣ Deep
    learning Approach for Classifying, Detecting and Predicting Photometric Redshifts
    of Quasars in the Sloan Digital Sky Survey Stripe 82")).
  prefs: []
  type: TYPE_NORMAL
- en: '|  | $&#124;\Delta z&#124;<0.1$ (%) | $&#124;\Delta z&#124;<0.2$ (%) | $&#124;\Delta
    z&#124;<0.3$ (%) | RMS |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| CNN | 79.32 | 86.64 | 91.69 | 0.352 |'
  prefs: []
  type: TYPE_TB
- en: '| KNN | 73.72 | 82.46 | 90.09 | 0.395 |'
  prefs: []
  type: TYPE_TB
- en: '| KNN+CNN | 80.43 | 87.07 | 91.75 | 0.349 |'
  prefs: []
  type: TYPE_TB
- en: 'Table 2: Comparisons of the accuracy and the dispersion obtained with the CNN,
    the KNN and the merge of the KNN and the CNN, by computing the percentages in
    different $|\Delta z|$ ranges and the Root Mean Square (RMS).'
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/50f0dab990e63319f2d216af2eceab30.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10: Panels A and B compare the photometric redshifts predicted by the
    KNN and the CNN respectively against the spectroscopic redshifts. The color indicates
    the density of quasars in percentages. Redder the color, higher the density of
    quasars is. The line $y=x$ is red which means that the density of quasars is the
    highest and so the two methods well estimate most of the photometric redshifts
    compared to spectroscopic redshifts. Panel C is the difference in percentages
    between the density of quasars given by the CNN and the density of quasars obtained
    by the KNN, noted $\Delta d$. In other words, when $\Delta d$ is positive (resp.
    negative), the color is red (resp. blue), and it means that the density of quasars
    given by the CNN (resp. KNN) is higher than those obtained by the KNN (resp. CNN).'
  prefs: []
  type: TYPE_NORMAL
- en: Figure [10](#S6.F10 "Figure 10 ‣ 6 Photometric redshifts of quasars ‣ Deep learning
    Approach for Classifying, Detecting and Predicting Photometric Redshifts of Quasars
    in the Sloan Digital Sky Survey Stripe 82") compares photometric redshifts predicted
    by the KNN (panel A) and the CNN (panel B) against the spectroscopic redshifts
    of around 9000 quasars. The color indicates the density of quasars in percentages.
    We note $d_{CNN}$ and $d_{KNN}$ the density of quasars in percentages given by
    the CNN and the KNN approaches respectively. Redder the color, higher the density
    of quasars is. For the two methods, the density of quasars is the highest on the
    line y=x, showing that the most of photometric redshifts are well estimated by
    the two classifiers. We remark that the density is the highest for redshifts below
    2.5, since the database contains a small number of high redshifts, less than 10$\%$
    which is then divided between the training and the testing databases.
  prefs: []
  type: TYPE_NORMAL
- en: Panel C in Figure [10](#S6.F10 "Figure 10 ‣ 6 Photometric redshifts of quasars
    ‣ Deep learning Approach for Classifying, Detecting and Predicting Photometric
    Redshifts of Quasars in the Sloan Digital Sky Survey Stripe 82") compares the
    two approaches in the estimation of the photometric redshifts since it represents
    the difference between the density in percentages, $d_{CNN}$ and $d_{KNN}$ noted
    $\Delta d$. When the value of $\Delta d$ is positive (positive values are represented
    by the red color on the plot), the density of quasars given by the CNN is higher
    than those obtained by the KNN. Contrariwise when the value of $\Delta d$ is negative
    (negative values are represented by the blue color on the plot) the density of
    quasars given by the KNN is higher than those given by the CNN. We can see that
    the line $y=x$ appears in red color, so the values of $\Delta d$ are positives
    showing that the density of quasars obtained by the CNN is higher than those given
    by the KNN and so that the CNN better predicts redshifts equals to spectroscopic
    redshifts than the KNN. On the contrary, the regions around the line $y=x$ are
    in blue meaning that the KNN has a higher error rate than the CNN and predict
    more catastrophic redshifts.
  prefs: []
  type: TYPE_NORMAL
- en: The better accuracy of the CNN is also visible if we compare the distribution
    of the absolute error in the estimation of photometric redshifts of the two methods
    (see Figure [11](#S6.F11 "Figure 11 ‣ 6 Photometric redshifts of quasars ‣ Deep
    learning Approach for Classifying, Detecting and Predicting Photometric Redshifts
    of Quasars in the Sloan Digital Sky Survey Stripe 82")). Indeed we can see that
    the histogram is narrower for the estimations of photometric redshifts made by
    the CNN (red histogram) than those made by the KNN (blue histogram). In addition
    the percentage of redshift estimations with an absolute error higher than 0.1,
    0.2 and 0.3 are respectively of 38.03%, 24.06% and 19.07% for the CNN; for the
    KNN they are of 45.78%, 30.04% and 22.89%. Thus the number of catastrophic photometric
    redshifts is significantly reduced with the CNN.
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/a876c28d9da740e831f93e7c4fa5b40c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 11: The blue and red histograms represent the distribution of the absolute
    error for the estimation of photometric redshifts by using a KNN and a CNN classifiers
    respectively. The number of catastrophic redshifts is reduced with the CNN as
    the percentage of redshift estimation with an absolute error higher than 0.1 is
    about 45.78% for the KNN and 38.03% for the CNN.'
  prefs: []
  type: TYPE_NORMAL
- en: 'We also define two quantities frequently used to evaluate accuracy and dispersion
    of the used method that are the percentages in different $|\Delta z|$ ranges defined
    as:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | $\Delta z=\frac{z_{spec}-z_{phot}}{1+z_{spec}}$ |  | (2) |'
  prefs: []
  type: TYPE_TB
- en: and the Root Mean Square (RMS) of $|\Delta z|$ to test our redshifts prediction
    approach. The better accuracy of the CNN is confirmed (see Table [2](#S6.T2 "Table
    2 ‣ 6 Photometric redshifts of quasars ‣ Deep learning Approach for Classifying,
    Detecting and Predicting Photometric Redshifts of Quasars in the Sloan Digital
    Sky Survey Stripe 82")) since the proportions of $|\Delta z|$ are equals to 78.09$\%$,
    86.15$\%$, 91.2$\%$ for the CNN, against 73.72$\%$, 82.46$\%$, 90.09$\%$ for the
    KNN. This means that more photometric redshifts are estimated with a low error
    by the CNN than the KNN. In addition, the dispersion of photometric redshifts
    is also lower with the CNN, since the RMS is 0.352 for the CNN against 0.395 for
    the KNN.
  prefs: []
  type: TYPE_NORMAL
- en: However the CNN has worse performance than the KNN for the prediction of redshifts
    higher than 2.5 (which is visible on Panel C in Figure [10](#S6.F10 "Figure 10
    ‣ 6 Photometric redshifts of quasars ‣ Deep learning Approach for Classifying,
    Detecting and Predicting Photometric Redshifts of Quasars in the Sloan Digital
    Sky Survey Stripe 82")). It is due to the small number of redshifts higher than
    2.5 in the database. There are only 600 quasars with $z_{spec}>2.5$ in the learning
    database and the CNN needs a lot of examples to converge.
  prefs: []
  type: TYPE_NORMAL
- en: 'To solve this problem, after the training of the KNN and the CNN we combine
    these two approaches in a KNN+CNN architecture. The final prediction of the KNN+CNN
    architecture will depend on the redshift predicted by the KNN model. If the KNN
    predicts a redshift higher than 2.5, this prediction is used as the final prediction.
    Otherwise, the prediction given by the CNN is used as the final prediction. We
    note $p_{KNN}$ and $p_{CNN}$ the prediction given by the KNN and the CNN respectively.
    The prediction given by the KNN+CNN architecture, noted $p_{KNN+CNN}$ is defined
    as:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | <math id="S6.E3.m1.4" class="ltx_Math" alttext="p_{KNN+CNN}=\begin{cases}p_{KNN}&amp;\textrm{if
    }p_{KNN}>2.5\\ p_{CNN}&amp;\textrm{Otherwise}\\'
  prefs: []
  type: TYPE_NORMAL
- en: \end{cases}" display="block"><semantics id="S6.E3.m1.4a"><mrow id="S6.E3.m1.4.5"
    xref="S6.E3.m1.4.5.cmml"><msub id="S6.E3.m1.4.5.2" xref="S6.E3.m1.4.5.2.cmml"><mi
    id="S6.E3.m1.4.5.2.2" xref="S6.E3.m1.4.5.2.2.cmml">p</mi><mrow id="S6.E3.m1.4.5.2.3"
    xref="S6.E3.m1.4.5.2.3.cmml"><mrow id="S6.E3.m1.4.5.2.3.2" xref="S6.E3.m1.4.5.2.3.2.cmml"><mi
    id="S6.E3.m1.4.5.2.3.2.2" xref="S6.E3.m1.4.5.2.3.2.2.cmml">K</mi><mo lspace="0em"
    rspace="0em" id="S6.E3.m1.4.5.2.3.2.1" xref="S6.E3.m1.4.5.2.3.2.1.cmml">​</mo><mi
    id="S6.E3.m1.4.5.2.3.2.3" xref="S6.E3.m1.4.5.2.3.2.3.cmml">N</mi><mo lspace="0em"
    rspace="0em" id="S6.E3.m1.4.5.2.3.2.1a" xref="S6.E3.m1.4.5.2.3.2.1.cmml">​</mo><mi
    id="S6.E3.m1.4.5.2.3.2.4" xref="S6.E3.m1.4.5.2.3.2.4.cmml">N</mi></mrow><mo id="S6.E3.m1.4.5.2.3.1"
    xref="S6.E3.m1.4.5.2.3.1.cmml">+</mo><mrow id="S6.E3.m1.4.5.2.3.3" xref="S6.E3.m1.4.5.2.3.3.cmml"><mi
    id="S6.E3.m1.4.5.2.3.3.2" xref="S6.E3.m1.4.5.2.3.3.2.cmml">C</mi><mo lspace="0em"
    rspace="0em" id="S6.E3.m1.4.5.2.3.3.1" xref="S6.E3.m1.4.5.2.3.3.1.cmml">​</mo><mi
    id="S6.E3.m1.4.5.2.3.3.3" xref="S6.E3.m1.4.5.2.3.3.3.cmml">N</mi><mo lspace="0em"
    rspace="0em" id="S6.E3.m1.4.5.2.3.3.1a" xref="S6.E3.m1.4.5.2.3.3.1.cmml">​</mo><mi
    id="S6.E3.m1.4.5.2.3.3.4" xref="S6.E3.m1.4.5.2.3.3.4.cmml">N</mi></mrow></mrow></msub><mo
    id="S6.E3.m1.4.5.1" xref="S6.E3.m1.4.5.1.cmml">=</mo><mrow id="S6.E3.m1.4.4" xref="S6.E3.m1.4.5.3.1.cmml"><mo
    id="S6.E3.m1.4.4.5" xref="S6.E3.m1.4.5.3.1.1.cmml">{</mo><mtable columnspacing="5pt"
    displaystyle="true" rowspacing="0pt" id="S6.E3.m1.4.4.4" xref="S6.E3.m1.4.5.3.1.cmml"><mtr
    id="S6.E3.m1.4.4.4a" xref="S6.E3.m1.4.5.3.1.cmml"><mtd class="ltx_align_left"
    columnalign="left" id="S6.E3.m1.4.4.4b" xref="S6.E3.m1.4.5.3.1.cmml"><msub id="S6.E3.m1.1.1.1.1.1.1"
    xref="S6.E3.m1.1.1.1.1.1.1.cmml"><mi id="S6.E3.m1.1.1.1.1.1.1.2" xref="S6.E3.m1.1.1.1.1.1.1.2.cmml">p</mi><mrow
    id="S6.E3.m1.1.1.1.1.1.1.3" xref="S6.E3.m1.1.1.1.1.1.1.3.cmml"><mi id="S6.E3.m1.1.1.1.1.1.1.3.2"
    xref="S6.E3.m1.1.1.1.1.1.1.3.2.cmml">K</mi><mo lspace="0em" rspace="0em" id="S6.E3.m1.1.1.1.1.1.1.3.1"
    xref="S6.E3.m1.1.1.1.1.1.1.3.1.cmml">​</mo><mi id="S6.E3.m1.1.1.1.1.1.1.3.3" xref="S6.E3.m1.1.1.1.1.1.1.3.3.cmml">N</mi><mo
    lspace="0em" rspace="0em" id="S6.E3.m1.1.1.1.1.1.1.3.1a" xref="S6.E3.m1.1.1.1.1.1.1.3.1.cmml">​</mo><mi
    id="S6.E3.m1.1.1.1.1.1.1.3.4" xref="S6.E3.m1.1.1.1.1.1.1.3.4.cmml">N</mi></mrow></msub></mtd><mtd
    class="ltx_align_left" columnalign="left" id="S6.E3.m1.4.4.4c" xref="S6.E3.m1.4.5.3.1.cmml"><mrow
    id="S6.E3.m1.2.2.2.2.2.1" xref="S6.E3.m1.2.2.2.2.2.1.cmml"><mrow id="S6.E3.m1.2.2.2.2.2.1.2"
    xref="S6.E3.m1.2.2.2.2.2.1.2.cmml"><mtext id="S6.E3.m1.2.2.2.2.2.1.2.2" xref="S6.E3.m1.2.2.2.2.2.1.2.2a.cmml">if </mtext><mo
    lspace="0em" rspace="0em" id="S6.E3.m1.2.2.2.2.2.1.2.1" xref="S6.E3.m1.2.2.2.2.2.1.2.1.cmml">​</mo><msub
    id="S6.E3.m1.2.2.2.2.2.1.2.3" xref="S6.E3.m1.2.2.2.2.2.1.2.3.cmml"><mi id="S6.E3.m1.2.2.2.2.2.1.2.3.2"
    xref="S6.E3.m1.2.2.2.2.2.1.2.3.2.cmml">p</mi><mrow id="S6.E3.m1.2.2.2.2.2.1.2.3.3"
    xref="S6.E3.m1.2.2.2.2.2.1.2.3.3.cmml"><mi id="S6.E3.m1.2.2.2.2.2.1.2.3.3.2" xref="S6.E3.m1.2.2.2.2.2.1.2.3.3.2.cmml">K</mi><mo
    lspace="0em" rspace="0em" id="S6.E3.m1.2.2.2.2.2.1.2.3.3.1" xref="S6.E3.m1.2.2.2.2.2.1.2.3.3.1.cmml">​</mo><mi
    id="S6.E3.m1.2.2.2.2.2.1.2.3.3.3" xref="S6.E3.m1.2.2.2.2.2.1.2.3.3.3.cmml">N</mi><mo
    lspace="0em" rspace="0em" id="S6.E3.m1.2.2.2.2.2.1.2.3.3.1a" xref="S6.E3.m1.2.2.2.2.2.1.2.3.3.1.cmml">​</mo><mi
    id="S6.E3.m1.2.2.2.2.2.1.2.3.3.4" xref="S6.E3.m1.2.2.2.2.2.1.2.3.3.4.cmml">N</mi></mrow></msub></mrow><mo
    id="S6.E3.m1.2.2.2.2.2.1.1" xref="S6.E3.m1.2.2.2.2.2.1.1.cmml">></mo><mn id="S6.E3.m1.2.2.2.2.2.1.3"
    xref="S6.E3.m1.2.2.2.2.2.1.3.cmml">2.5</mn></mrow></mtd></mtr><mtr id="S6.E3.m1.4.4.4d"
    xref="S6.E3.m1.4.5.3.1.cmml"><mtd class="ltx_align_left" columnalign="left" id="S6.E3.m1.4.4.4e"
    xref="S6.E3.m1.4.5.3.1.cmml"><msub id="S6.E3.m1.3.3.3.3.1.1" xref="S6.E3.m1.3.3.3.3.1.1.cmml"><mi
    id="S6.E3.m1.3.3.3.3.1.1.2" xref="S6.E3.m1.3.3.3.3.1.1.2.cmml">p</mi><mrow id="S6.E3.m1.3.3.3.3.1.1.3"
    xref="S6.E3.m1.3.3.3.3.1.1.3.cmml"><mi id="S6.E3.m1.3.3.3.3.1.1.3.2" xref="S6.E3.m1.3.3.3.3.1.1.3.2.cmml">C</mi><mo
    lspace="0em" rspace="0em" id="S6.E3.m1.3.3.3.3.1.1.3.1" xref="S6.E3.m1.3.3.3.3.1.1.3.1.cmml">​</mo><mi
    id="S6.E3.m1.3.3.3.3.1.1.3.3" xref="S6.E3.m1.3.3.3.3.1.1.3.3.cmml">N</mi><mo lspace="0em"
    rspace="0em" id="S6.E3.m1.3.3.3.3.1.1.3.1a" xref="S6.E3.m1.3.3.3.3.1.1.3.1.cmml">​</mo><mi
    id="S6.E3.m1.3.3.3.3.1.1.3.4" xref="S6.E3.m1.3.3.3.3.1.1.3.4.cmml">N</mi></mrow></msub></mtd><mtd
    class="ltx_align_left" columnalign="left" id="S6.E3.m1.4.4.4f" xref="S6.E3.m1.4.5.3.1.cmml"><mtext
    id="S6.E3.m1.4.4.4.4.2.1" xref="S6.E3.m1.4.4.4.4.2.1a.cmml">Otherwise</mtext></mtd></mtr></mtable></mrow></mrow><annotation-xml
    encoding="MathML-Content" id="S6.E3.m1.4b"><apply id="S6.E3.m1.4.5.cmml" xref="S6.E3.m1.4.5"><apply
    id="S6.E3.m1.4.5.2.cmml" xref="S6.E3.m1.4.5.2"><csymbol cd="ambiguous" id="S6.E3.m1.4.5.2.1.cmml"
    xref="S6.E3.m1.4.5.2">subscript</csymbol><ci id="S6.E3.m1.4.5.2.2.cmml" xref="S6.E3.m1.4.5.2.2">𝑝</ci><apply
    id="S6.E3.m1.4.5.2.3.cmml" xref="S6.E3.m1.4.5.2.3"><apply id="S6.E3.m1.4.5.2.3.2.cmml"
    xref="S6.E3.m1.4.5.2.3.2"><ci id="S6.E3.m1.4.5.2.3.2.2.cmml" xref="S6.E3.m1.4.5.2.3.2.2">𝐾</ci><ci
    id="S6.E3.m1.4.5.2.3.2.3.cmml" xref="S6.E3.m1.4.5.2.3.2.3">𝑁</ci><ci id="S6.E3.m1.4.5.2.3.2.4.cmml"
    xref="S6.E3.m1.4.5.2.3.2.4">𝑁</ci></apply><apply id="S6.E3.m1.4.5.2.3.3.cmml"
    xref="S6.E3.m1.4.5.2.3.3"><ci id="S6.E3.m1.4.5.2.3.3.2.cmml" xref="S6.E3.m1.4.5.2.3.3.2">𝐶</ci><ci
    id="S6.E3.m1.4.5.2.3.3.3.cmml" xref="S6.E3.m1.4.5.2.3.3.3">𝑁</ci><ci id="S6.E3.m1.4.5.2.3.3.4.cmml"
    xref="S6.E3.m1.4.5.2.3.3.4">𝑁</ci></apply></apply></apply><apply id="S6.E3.m1.4.5.3.1.cmml"
    xref="S6.E3.m1.4.4"><csymbol cd="latexml" id="S6.E3.m1.4.5.3.1.1.cmml" xref="S6.E3.m1.4.4.5">cases</csymbol><apply
    id="S6.E3.m1.1.1.1.1.1.1.cmml" xref="S6.E3.m1.1.1.1.1.1.1"><csymbol cd="ambiguous"
    id="S6.E3.m1.1.1.1.1.1.1.1.cmml" xref="S6.E3.m1.1.1.1.1.1.1">subscript</csymbol><ci
    id="S6.E3.m1.1.1.1.1.1.1.2.cmml" xref="S6.E3.m1.1.1.1.1.1.1.2">𝑝</ci><apply id="S6.E3.m1.1.1.1.1.1.1.3.cmml"
    xref="S6.E3.m1.1.1.1.1.1.1.3"><ci id="S6.E3.m1.1.1.1.1.1.1.3.2.cmml" xref="S6.E3.m1.1.1.1.1.1.1.3.2">𝐾</ci><ci
    id="S6.E3.m1.1.1.1.1.1.1.3.3.cmml" xref="S6.E3.m1.1.1.1.1.1.1.3.3">𝑁</ci><ci id="S6.E3.m1.1.1.1.1.1.1.3.4.cmml"
    xref="S6.E3.m1.1.1.1.1.1.1.3.4">𝑁</ci></apply></apply><apply id="S6.E3.m1.2.2.2.2.2.1.cmml"
    xref="S6.E3.m1.2.2.2.2.2.1"><apply id="S6.E3.m1.2.2.2.2.2.1.2.cmml" xref="S6.E3.m1.2.2.2.2.2.1.2"><ci
    id="S6.E3.m1.2.2.2.2.2.1.2.2a.cmml" xref="S6.E3.m1.2.2.2.2.2.1.2.2"><mtext id="S6.E3.m1.2.2.2.2.2.1.2.2.cmml"
    xref="S6.E3.m1.2.2.2.2.2.1.2.2">if </mtext></ci><apply id="S6.E3.m1.2.2.2.2.2.1.2.3.cmml"
    xref="S6.E3.m1.2.2.2.2.2.1.2.3"><csymbol cd="ambiguous" id="S6.E3.m1.2.2.2.2.2.1.2.3.1.cmml"
    xref="S6.E3.m1.2.2.2.2.2.1.2.3">subscript</csymbol><ci id="S6.E3.m1.2.2.2.2.2.1.2.3.2.cmml"
    xref="S6.E3.m1.2.2.2.2.2.1.2.3.2">𝑝</ci><apply id="S6.E3.m1.2.2.2.2.2.1.2.3.3.cmml"
    xref="S6.E3.m1.2.2.2.2.2.1.2.3.3"><ci id="S6.E3.m1.2.2.2.2.2.1.2.3.3.2.cmml" xref="S6.E3.m1.2.2.2.2.2.1.2.3.3.2">𝐾</ci><ci
    id="S6.E3.m1.2.2.2.2.2.1.2.3.3.3.cmml" xref="S6.E3.m1.2.2.2.2.2.1.2.3.3.3">𝑁</ci><ci
    id="S6.E3.m1.2.2.2.2.2.1.2.3.3.4.cmml" xref="S6.E3.m1.2.2.2.2.2.1.2.3.3.4">𝑁</ci></apply></apply></apply><cn
    type="float" id="S6.E3.m1.2.2.2.2.2.1.3.cmml" xref="S6.E3.m1.2.2.2.2.2.1.3">2.5</cn></apply><apply
    id="S6.E3.m1.3.3.3.3.1.1.cmml" xref="S6.E3.m1.3.3.3.3.1.1"><csymbol cd="ambiguous"
    id="S6.E3.m1.3.3.3.3.1.1.1.cmml" xref="S6.E3.m1.3.3.3.3.1.1">subscript</csymbol><ci
    id="S6.E3.m1.3.3.3.3.1.1.2.cmml" xref="S6.E3.m1.3.3.3.3.1.1.2">𝑝</ci><apply id="S6.E3.m1.3.3.3.3.1.1.3.cmml"
    xref="S6.E3.m1.3.3.3.3.1.1.3"><ci id="S6.E3.m1.3.3.3.3.1.1.3.2.cmml" xref="S6.E3.m1.3.3.3.3.1.1.3.2">𝐶</ci><ci
    id="S6.E3.m1.3.3.3.3.1.1.3.3.cmml" xref="S6.E3.m1.3.3.3.3.1.1.3.3">𝑁</ci><ci id="S6.E3.m1.3.3.3.3.1.1.3.4.cmml"
    xref="S6.E3.m1.3.3.3.3.1.1.3.4">𝑁</ci></apply></apply><ci id="S6.E3.m1.4.4.4.4.2.1a.cmml"
    xref="S6.E3.m1.4.4.4.4.2.1"><mtext id="S6.E3.m1.4.4.4.4.2.1.cmml" xref="S6.E3.m1.4.4.4.4.2.1">Otherwise</mtext></ci></apply></apply></annotation-xml><annotation
    encoding="application/x-tex" id="S6.E3.m1.4c">p_{KNN+CNN}=\begin{cases}p_{KNN}&\textrm{if
    }p_{KNN}>2.5\\ p_{CNN}&\textrm{Otherwise}\\ \end{cases}</annotation></semantics></math>
    |  | (3) |
  prefs: []
  type: TYPE_NORMAL
- en: So, when the CNN does not have enough examples to learn a robust model, i.e
    for the high redshift estimations, the KNN model is used.
  prefs: []
  type: TYPE_NORMAL
- en: The performance given by the KNN+CNN architecture is a very interesting results
    as shown in Table [2](#S6.T2 "Table 2 ‣ 6 Photometric redshifts of quasars ‣ Deep
    learning Approach for Classifying, Detecting and Predicting Photometric Redshifts
    of Quasars in the Sloan Digital Sky Survey Stripe 82"). Indeed, the combination
    of the two classifiers reduces the number of catastrophic redshifts and the dispersion,
    since the proportions of $|\Delta z|$ are now equal to 80.43$\%$, 87.07$\%$, 91.75$\%$
    and the value of RMS is 0.349.
  prefs: []
  type: TYPE_NORMAL
- en: 7 Conclusions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First, we have presented an original method based on a convolution neural network
    to classify and identify quasars in Stripe 82\. The network takes the Light Curve
    Images as input which are built from light curves of each object in the five ugriz
    filters, so as to include both the crucial information of the variabiliy and the
    colors in the learning of the network. The CNN classifier presents good results
    for the classification of quasars with a precision of 0.988 at a fixed recall
    of 0.90\. For the same recall, the precision given by a random forest (RF) is
    0.985\. The very promising result is obtained by the combination of the CNN and
    the RF giving precisions of 0.99 for a recall of 0.90.
  prefs: []
  type: TYPE_NORMAL
- en: Then, during the testing phase 175 new quasar candidates were detected by the
    CNN, with a fixed recall of 0.97\. They are uniformly spatially distributed and
    they validate the tendency ”bluer when brighter”.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we have used a CNN to predict the photometric redshifts of quasars.
    The performance of the CNN is higher than that of the KNN at redshifts below 2.5
    with the best parameters determined experimentally. Indeed, the proportions of
    $|\Delta z|$ and rms error of predicted photometry redshifts are 78.09$\%$, 86.15$\%$,
    91.2$\%$ and 0.359 for the CNN; for the KNN they are 73.72$\%$, 82.46$\%$, 90.09$\%$
    and 0.395. The number of catastrophic redshift is also reduced by using a CNN,
    since the number of photometric redshifts with an absolute error higher than 0.1
    is about 38.03$\%$ for the CNN against 45.78$\%$ for the KNN. Moreover the combination
    of a CNN and a KNN is a very promising method which better estimates redshifts
    higher than 2.5 and reduces the dispersion and the number of catastrophic redshifts.
  prefs: []
  type: TYPE_NORMAL
- en: Several improvements can be made for further studies. The most trivial is to
    use another catalog with a larger amount of data, because Deep Learning usually
    shows better results when there is more information. The second improvement consists
    of not dividing by averaging observations taken on two consecutive days, during
    the creation of the LCI. Indeed it is an approximation needed to reduce the computational
    cost, but it could be interesting to evaluate its impact on the results. Another
    interesting improvement is to take the errors into account in the learning phase
    which could show important information.
  prefs: []
  type: TYPE_NORMAL
- en: In conclusion we wish to emphasis that the development of a method able to estimate
    well the photometric redshifts using only photometric information is essential
    for the future of big databases like LSST. Understanding that Deep Learning is
    more and more efficient as the size of the data increases, the future of this
    method is very promising.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Abazajian et al. (2009) Abazajian, K. N., Adelman-McCarthy, J. K., Agüeros,
    M. A., et al. 2009, ApJS, 182, 543
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Baum (1962) Baum, W. A. 1962, in IAU Symposium, Vol. 15, Problems of Extra-Galactic
    Research, ed. G. C. McVittie, 390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blake et al. (2007) Blake, C., Collister, A., Bridle, S., & Lahav, O. 2007,
    MNRAS, 374, 1527
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blomme et al. (2011) Blomme, J., Sarro, L. M., O’Donovan, F. T., et al. 2011,
    MNRAS, 418, 96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bolzonella et al. (2000) Bolzonella, M., Miralles, J.-M., & Pelló, R. 2000,
    A&A, 363, 476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Collister & Lahav (2004) Collister, A. A. & Lahav, O. 2004, PASP, 116, 345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cortes & Vapnik (1995) Cortes, C. & Vapnik, V. 1995, Mach. Learn., 20, 273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Coupon et al. (2009) Coupon, J., Ilbert, O., Kilbinger, M., et al. 2009, A&A,
    500, 981
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cristiani et al. (1997) Cristiani, S., Trentini, S., La Franca, F., & Andreani,
    P. 1997, A&A, 321, 123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Croom et al. (2009) Croom, S. M., Richards, G. T., Shanks, T., et al. 2009,
    MNRAS, 392, 19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dubath et al. (2011) Dubath, P., Rimoldini, L., Süveges, M., et al. 2011, MNRAS,
    414, 2602
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Duda & Hart (1973) Duda, R. O. & Hart, P. E. 1973, Pattern classification and
    scene analysis, A Wiley-interscience publication (J. Wiley & Sons)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eyer & Blake (2005) Eyer, L. & Blake, C. 2005, MNRAS, 358, 30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Firth et al. (2003) Firth, A. E., Lahav, O., & Somerville, R. S. 2003, MNRAS,
    339, 1195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Frieman et al. (2008) Frieman, J. A., Bassett, B., Becker, A., et al. 2008,
    AJ, 135, 338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Giveon et al. (1999) Giveon, U., Maoz, D., Kaspi, S., Netzer, H., & Smith, P. S.
    1999, MNRAS, 306, 637
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Han et al. (2016) Han, B., Ding, H.-P., Zhang, Y.-X., & Zhao, Y.-H. 2016, Research
    in Astronomy and Astrophysics, 16, 074
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'He et al. (2015) He, K., Zhang, X., Ren, S., & Sun, J. 2015, in Proceedings
    of the 2015 IEEE International Conference on Computer Vision (ICCV), ICCV ’15
    (Washington, DC, USA: IEEE Computer Society), 1026–1034'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hernitschek et al. (2016) Hernitschek, N., Schlafly, E. F., Sesar, B., et al.
    2016, ApJ, 817, 73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hopkins et al. (2006) Hopkins, P. F., Hernquist, L., Cox, T. J., et al. 2006,
    ApJS, 163, 1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Huertas-Company et al. (2015) Huertas-Company, M., Gravet, R., Cabrera-Vives,
    G., et al. 2015, ApJS, 221, 8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ilbert et al. (2010) Ilbert, O., Salvato, M., Le Floc’h, E., et al. 2010, ApJ,
    709, 644
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ioffe & Szegedy (2015) Ioffe, S. & Szegedy, C. 2015, in Proceedings of the 32nd
    International Conference on Machine Learning (ICML-15), ed. D. Blei & F. Bach
    (JMLR Workshop and Conference Proceedings), 448–456
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ivezić et al. (2007) Ivezić, Ž., Smith, J. A., Miknaitis, G., et al. 2007, AJ,
    134, 973
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jia et al. (2014) Jia, Y., Shelhamer, E., Donahue, J., et al. 2014, arXiv preprint
    arXiv:1408.5093
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Joly et al. (2016) Joly, A., Goëau, H., Glotin, H., et al. 2016, LifeCLEF 2016:
    Multimedia Life Species Identification Challenges, ed. N. Fuhr, P. Quaresma, T. Gonçalves,
    B. Larsen, K. Balog, C. Macdonald, L. Cappellato, & N. Ferro (Cham: Springer International
    Publishing), 286–310'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Krizhevsky et al. (2012) Krizhevsky, A., Sutskever, I., & Hinton, G. E. 2012,
    in Advances in Neural Information Processing Systems 25: 26th Annual Conference
    on Neural Information Processing Systems 2012\. Proceedings of a meeting held
    December 3-6, 2012, Lake Tahoe, Nevada, United States., 1106–1114'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kügler et al. (2015) Kügler, S. D., Polsterer, K., & Hoecker, M. 2015, A&A,
    576, A132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Le Guennec et al. (2016) Le Guennec, A., Malinowski, S., & Tavenard, R. 2016,
    in ECML/PKDD Workshop on Advanced Analytics and Learning on Temporal Data, Riva
    Del Garda, Italy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lopez et al. (2008) Lopez, S., Barrientos, L. F., Lira, P., et al. 2008, ApJ,
    679, 1144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LSST Science Collaboration (2009) LSST Science Collaboration. 2009, [arXiv :0912.0201]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Meusinger et al. (2011) Meusinger, H., Hinze, A., & de Hoon, A. 2011, A&A, 525,
    A37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nair & Hinton (2010) Nair, V. & Hinton, G. E. 2010, in Proceedings of the 27th
    International Conference on Machine Learning (ICML-10), ed. J. Fürnkranz & T. Joachims
    (Omnipress), 807–814
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nun et al. (2015) Nun, I., Protopapas, P., Sim, B., et al. 2015 [arXiv:1506.00010]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oyaizu et al. (2008) Oyaizu, H., Lima, M., Cunha, C. E., et al. 2008, ApJ, 674,
    768
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peng et al. (2012) Peng, N., Zhang, Y., Zhao, Y., & Wu, X.-b. 2012, MNRAS, 425,
    2599
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peters et al. (2015) Peters, C. M., Richards, G. T., Myers, A. D., et al. 2015,
    ApJ, 811, 95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Portinari et al. (2012) Portinari, L., Kotilainen, J., Falomo, R., & Decarli,
    R. 2012, MNRAS, 420, 732
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Quinlan (1986) Quinlan, J. R. 1986 (Hingham, MA, USA: Kluwer Academic Publishers),
    81–106'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rimoldini et al. (2012) Rimoldini, L., Dubath, P., Süveges, M., et al. 2012,
    MNRAS, 427, 2917
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Rumelhart et al. (1986) Rumelhart, D. E., Hinton, G. E., & Williams, R. J.
    1986 (Cambridge, MA, USA: MIT Press), 318–362'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Russakovsky et al. (2015) Russakovsky, O., Deng, J., Su, H., et al. 2015, International
    Journal of Computer Vision (IJCV), 115, 211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Schneider et al. (2010) Schneider, D. P., Richards, G. T., Hall, P. B., et al.
    2010, AJ, 139, 2360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sesar et al. (2007) Sesar, B., Ivezić, Ž., Lupton, R. H., et al. 2007, AJ, 134,
    2236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Srivastava et al. (2014) Srivastava, N., Hinton, G., Krizhevsky, A., Sutskever,
    I., & Salakhutdinov, R. 2014, Journal of Machine Learning Research, 15, 1929
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Szegedy et al. (2015) Szegedy, C., Liu, W., Jia, Y., et al. 2015, in 2015 IEEE
    Conference on Computer Vision and Pattern Recognition (CVPR), 1–9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Dark Energy Survey Collaboration (2005) The Dark Energy Survey Collaboration.
    2005, ArXiv Astrophysics e-prints [astro-ph/0510346]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vanden Berk et al. (2004) Vanden Berk, D. E., Wilhite, B. C., Kron, R. G., et al.
    2004, ApJ, 601, 692
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yèche et al. (2010) Yèche, C., Petitjean, P., Rich, J., et al. 2010, A&A, 523,
    A14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: York et al. (2000) York, D. G., Adelman, J., Anderson, Jr., J. E., et al. 2000,
    AJ, 120, 1579
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhang et al. (2009) Zhang, Y., Li, L., & Zhao, Y. 2009, MNRAS, 392, 233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhang et al. (2013) Zhang, Y., Ma, H., Peng, N., Zhao, Y., & Wu, X.-b. 2013,
    AJ, 146, 22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Appendix A Appendix
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| Layers | Inputs | Kernel size | $h\times w$ | #feature maps |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| P1, P2 | LCI |'
  prefs: []
  type: TYPE_TB
- en: '&#124; $5\times 1$, $11\times 1$ &#124;'
  prefs: []
  type: TYPE_NORMAL
- en: '&#124; (stride 2) &#124;'
  prefs: []
  type: TYPE_NORMAL
- en: '| $850\times 5$ | 1, 1 |'
  prefs: []
  type: TYPE_TB
- en: '| TC1, TC2, TC3 | P1 | $11\times 1$, $21\times 1$, $41\times 1$ | $850\times
    5$ | 16, 16,16 |'
  prefs: []
  type: TYPE_TB
- en: '| TC4, TC5, TC6 | P2 | $11\times 1$, $21\times 1$, $41\times 1$ | $850\times
    5$ | 16, 16, 16 |'
  prefs: []
  type: TYPE_TB
- en: '| MC1 | C1 | $1\times 5$ | $850\times 1$ | 96 |'
  prefs: []
  type: TYPE_TB
- en: '| TC7, TC8 | MC1 and C1 | $11\times 1$, $21\times 1$ | $850\times 5$ or $850\times
    1$ | 24, 24 |'
  prefs: []
  type: TYPE_TB
- en: '| P3 | C2 | $3\times 1$ (stride 2) | $425\times 1$ | 48 |'
  prefs: []
  type: TYPE_TB
- en: '| P4 | C3 | $3\times 1$ (stride 2) | $425\times 5$ | 48 |'
  prefs: []
  type: TYPE_TB
- en: '| P5 | LCI | $21\times 1$ (stride 4) | $425\times 5$ | 1 |'
  prefs: []
  type: TYPE_TB
- en: '| TC9, TC10, TC11 | P5 | $5\times 1$, $11\times 1$, $21\times 1$ | $425\times
    5$ | 16,16,16 |'
  prefs: []
  type: TYPE_TB
- en: '| TC12, TC13 | C4 | $11\times 1$, $21\times 1$ | $425\times 5$ | 24, 24 |'
  prefs: []
  type: TYPE_TB
- en: '| MC2 | C5 | $1\times 5$ | $425\times 1$ | 48 |'
  prefs: []
  type: TYPE_TB
- en: '| TC14 | C6 and C7 | $11\times 1$ | $425\times 1$ or $425\times 5$ | 96, 96
    |'
  prefs: []
  type: TYPE_TB
- en: '| P6 | TC14 | $3\times 1$ (stride 2) | $212\times 1$ | 96 |'
  prefs: []
  type: TYPE_TB
- en: '| P7 | TC14 | $3\times 1$ (stride 2) | $212\times 5$ | 96 |'
  prefs: []
  type: TYPE_TB
- en: '| TC15 | P6 and P7 | $11\times 1$ | $425\times 1$ or $425\times 5$ | 48, 48
    |'
  prefs: []
  type: TYPE_TB
- en: '| P8 | TC15 | $3\times 1$ (stride 2) | $106\times 1$ | 48 |'
  prefs: []
  type: TYPE_TB
- en: '| P9 | TC15 | $3\times 1$ (stride 2) | $106\times 5$ | 48 |'
  prefs: []
  type: TYPE_TB
- en: '| P10 | LCI | $41\times 1$ (stride 16) | $106\times 5$ | 1 |'
  prefs: []
  type: TYPE_TB
- en: '| TC16, TC17, TC18 | P10 | $5\times 1$, $11\times 1$, $21\times 1$ | $106\times
    5$ | 16, 16, 16 |'
  prefs: []
  type: TYPE_TB
- en: '| TC19 | C8 | $11\times 1$ | $106\times 5$ | 48 |'
  prefs: []
  type: TYPE_TB
- en: '| MC3 | TC19 | $1\times 5$ | $106\times 1$ | 48 |'
  prefs: []
  type: TYPE_TB
- en: '| TC20 | C9 and C10 | $11\times 1$ | $106\times 1$ or $106\times 5$ | 128,
    128 |'
  prefs: []
  type: TYPE_TB
- en: '| P11 | TC20 | $3\times 1$ (stride 2) | $53\times 1$ | 48 |'
  prefs: []
  type: TYPE_TB
- en: '| P12 | TC20 | $3\times 1$ (stride 2) | $53\times 5$ | 48 |'
  prefs: []
  type: TYPE_TB
- en: '| P13 | LCI | $61\times 1$ (stride 32) | $53\times 5$ | 1 |'
  prefs: []
  type: TYPE_TB
- en: '| TC21, TC22, TC23 | P13 | $5\times 1$, $11\times 1$, $21\times 1$ | $53\times
    5$ | 16, 16, 16 |'
  prefs: []
  type: TYPE_TB
- en: '| TC24 | C11 | $11\times 1$ | $53\times 5$ | 64 |'
  prefs: []
  type: TYPE_TB
- en: '| TC25, TC26 | C12 | $11\times 1$, $21\times 1$ | $53\times 5$ | 64, 64 |'
  prefs: []
  type: TYPE_TB
- en: '| MC4 | C13 | $1\times 5$ | $53\times 1$ | 64 |'
  prefs: []
  type: TYPE_TB
- en: '| TC27, TC28, TC29, TC30 | C14 | $5\times 1$, $11\times 1$, $21\times 1$, $41\times
    1$ | $53\times 1$ | 48, 48, 48, 48 |'
  prefs: []
  type: TYPE_TB
- en: '| FC1, FC2 | C15, FC1 | - | - | 1024, 1024 |'
  prefs: []
  type: TYPE_TB
- en: 'Table A1: Characteristics of each layer of the CNN architecture: the name of
    the layer, the input layer, the size of the convolution kernel (in pixels), the
    size in pixels (height$\times$width) of resulting feature maps and the number
    of resulting feature maps. The concatenation layers are not represented here but
    they are present in Figure [4](#S4.F4 "Figure 4 ‣ 4 Our CNN architecture ‣ Deep
    learning Approach for Classifying, Detecting and Predicting Photometric Redshifts
    of Quasars in the Sloan Digital Sky Survey Stripe 82").'
  prefs: []
  type: TYPE_NORMAL
