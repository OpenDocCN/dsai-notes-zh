- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '类别: 未分类'
- en: 'date: 2024-09-06 19:56:52'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '日期: 2024-09-06 19:56:52'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: '[2102.09759] Applications of deep learning in congestion detection, prediction
    and alleviation: A survey'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[2102.09759] 深度学习在拥堵检测、预测和缓解中的应用：综述'
- en: 来源：[https://ar5iv.labs.arxiv.org/html/2102.09759](https://ar5iv.labs.arxiv.org/html/2102.09759)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://ar5iv.labs.arxiv.org/html/2102.09759](https://ar5iv.labs.arxiv.org/html/2102.09759)
- en: 'Applications of deep learning in congestion detection, prediction and alleviation:
    A survey'
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深度学习在拥堵检测、预测和缓解中的应用：综述
- en: Nishant Kumar
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Nishant Kumar
- en: ETH Zurich
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 苏黎世联邦理工学院
- en: Future Resilient Systems
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 未来弹性系统
- en: Singapore-ETH Centre
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 新加坡-ETH 中心
- en: 1 CREATE Way
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 1 CREATE Way
- en: '#06-01 CREATE Tower'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '#06-01 CREATE Tower'
- en: Singapore-138602
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 新加坡-138602
- en: nishant.kumar@sec.ethz.ch \AndMartin Raubal
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: nishant.kumar@sec.ethz.ch \AndMartin Raubal
- en: ETH Zurich
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 苏黎世联邦理工学院
- en: Department of Civil,
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 土木工程系,
- en: Environmental and Geomatic Engineering
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 环境与测绘工程
- en: Stefano-Franscini-Platz 5
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Stefano-Franscini-Platz 5
- en: 8093 Zurich
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 8093 苏黎世
- en: Switzerland
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 瑞士
- en: mraubal@ethz.ch
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: mraubal@ethz.ch
- en: Abstract
  id: totrans-22
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 摘要
- en: Detecting, predicting, and alleviating traffic congestion are targeted at improving
    the level of service of the transportation network. With increasing access to
    larger datasets of higher resolution, the relevance of deep learning for such
    tasks is increasing. Several comprehensive survey papers in recent years have
    summarised the deep learning applications in the transportation domain. However,
    the system dynamics of the transportation network vary greatly between the non-congested
    state and the congested state – thereby necessitating the need for a clear understanding
    of the challenges specific to congestion prediction. In this survey, we present
    the current state of deep learning applications in the tasks related to detection,
    prediction, and alleviation of congestion. Recurring and non-recurring congestion
    are discussed separately. Our survey leads us to uncover inherent challenges and
    gaps in the current state of research. Finally, we present some suggestions for
    future research directions as answers to the identified challenges.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 检测、预测和缓解交通拥堵旨在提高交通网络的服务水平。随着对更大、更高分辨率数据集的访问增加，深度学习在这些任务中的相关性也在上升。近年来，几篇综合性综述论文总结了深度学习在交通领域的应用。然而，交通网络的系统动态在非拥堵状态和拥堵状态之间差异很大，因此需要对拥堵预测特有的挑战有清晰的了解。在本综述中，我们展示了深度学习在检测、预测和缓解拥堵任务中的当前状态。我们分别讨论了重复性和非重复性拥堵。我们的调查揭示了当前研究状态中的固有挑战和不足。最后，我们提出了一些未来研究方向的建议，以应对识别出的挑战。
- en: '*K*eywords deep learning  $\cdot$ transportation  $\cdot$ congestion  $\cdot$
    recurring  $\cdot$ non-recurring  $\cdot$ accidents'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*K*eywords 深度学习  $\cdot$ 交通  $\cdot$ 拥堵  $\cdot$ 重复性  $\cdot$ 非重复性  $\cdot$
    事故'
- en: 1 Introduction
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1 介绍
- en: Traffic congestion decreases the level of serviceability (LOS) of road networks.
    A decrease in LOS results in direct and indirect costs to society. Extensive studies
    have been carried out to estimate the impacts of congestion on the economy and
    society as a whole (Weisbrod et al., [2001](#bib.bib140); Litman, [2016](#bib.bib77)).
    The first-hand impact of traffic congestion is the lost working hours. Schrank
    et al. ([2012](#bib.bib108)) estimated that in a single year, the USA alone lost
    a total of 8.8 billion working hours due to congestion. The detrimental impacts
    of congestion skyrocket when the value of time, as a commodity, increases drastically
    during emergencies. Being stuck in traffic impacts the behaviour of individuals. Hennessy
    and Wiesenthal ([1999](#bib.bib53)) report that high congestion levels can result
    in aggressive behaviour by drivers. This aggression can manifest itself into aggressive
    driving, thereby increasing the chances of accidents (Li et al., [2020](#bib.bib69)).
    High levels of congestion also result in higher greenhouse gas emissions (Barth
    and Boriboonsomsin, [2009](#bib.bib9)).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 交通拥堵降低了道路网络的服务水平（LOS）。LOS 的下降导致了社会的直接和间接成本。大量研究已对拥堵对经济和社会整体的影响进行评估（Weisbrod
    et al., [2001](#bib.bib140); Litman, [2016](#bib.bib77)）。交通拥堵的直接影响是工作时间的损失。Schrank
    et al. ([2012](#bib.bib108)) 估计，仅在一年内，美国因拥堵损失了总计 88 亿小时的工作时间。由于紧急情况导致时间作为商品的价值大幅上升，拥堵的负面影响飙升。陷入交通中会影响个人的行为。Hennessy
    和 Wiesenthal ([1999](#bib.bib53)) 报告称，高拥堵水平可能导致司机的攻击性行为。这种攻击性可能表现为激进驾驶，从而增加事故的发生率（Li
    et al., [2020](#bib.bib69)）。高水平的拥堵还会导致温室气体排放量增加（Barth 和 Boriboonsomsin, [2009](#bib.bib9)）。
- en: In terms of tractability, congestion prediction is a more difficult problem
    than traffic prediction during uncongested conditions (Yu et al., [2017](#bib.bib150)).
    An early warning system enables traffic controllers to put alleviation measures
    in place. The infrastructure required for traffic data collection has improved
    over the decades. This improvement, in conjunction with the increased availability
    of computational resources, has enabled transportation researchers to leverage
    the predictive capabilities of deep neural networks for this domain. In this survey,
    we discuss the applications of deep learning in the detection, prediction, and
    alleviation of congestion. We investigate various aspects of the two types of
    congestion – recurring and non-recurring. Towards the end of this survey, we identify
    some gaps in the current state of the research in this field and present future
    research directions.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 从可处理性角度来看，拥堵预测比非拥堵条件下的交通预测要困难得多 （Yu et al., [2017](#bib.bib150)）。早期预警系统使交通控制者能够采取缓解措施。用于交通数据收集的基础设施在几十年中得到了改进。这一改进，加上计算资源的增加，使得交通研究人员能够利用深度神经网络的预测能力。在本综述中，我们讨论了深度学习在拥堵检测、预测和缓解中的应用。我们调查了两种类型的拥堵——周期性和非周期性。综述的最后，我们识别了当前研究领域的一些空白，并提出了未来的研究方向。
- en: 2 Preliminaries
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2 前言
- en: The target audience of this survey paper are researchers from two backgrounds-
    transportation and deep learning. In the following two subsections, we cover the
    preliminaries and introduce the terminology which is used throughout the survey.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 本综述论文的目标读者是来自交通和深度学习两个领域的研究人员。在接下来的两个小节中，我们将介绍前言部分，并介绍在本综述中使用的术语。
- en: 2.1 Relevant concepts and terms in deep learning
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.1 深度学习中的相关概念和术语
- en: 'An artificial neuron is a function as shown in [Equation 1](#S2.E1 "1 ‣ 2.1
    Relevant concepts and terms in deep learning ‣ 2 Preliminaries ‣ Applications
    of deep learning in congestion detection, prediction and alleviation: A survey")'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 人工神经元是如 [方程式 1](#S2.E1 "1 ‣ 2.1 深度学习中的相关概念和术语 ‣ 2 前言 ‣ 深度学习在拥堵检测、预测和缓解中的应用：综述")所示的一个函数。
- en: '|  | $y_{i}=\varphi\left(\sum_{j=0}^{m}w_{ij}x_{ij}\right)$ |  | (1) |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '|  | $y_{i}=\varphi\left(\sum_{j=0}^{m}w_{ij}x_{ij}\right)$ |  | (1) |'
- en: 'where $x_{ij}$ is the $j^{th}$ feature (dimension) of the $i^{th}$ $m$-dimensional
    data point in the dataset; $w_{j}$ (called weights) is the coefficient which is
    tuned during the training process of the neural network; $\varphi$ is a nonlinear
    activation function; $y_{i}$ is the output of the function on input $x_{i}$. Commonly
    used activation functions are: sigmoid ($\varphi(x)=\frac{1}{1+e^{-x}}$), tanh
    ($\varphi(x)=\frac{e^{2x}-1}{e^{2x}+1}$) and relu ($\varphi(x)=max(x,0)$).'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 $x_{ij}$ 是数据集中第 $i$ 个 $m$ 维数据点的第 $j^{th}$ 特征（维度）；$w_{j}$（称为权重）是神经网络训练过程中调整的系数；$\varphi$
    是一个非线性激活函数；$y_{i}$ 是输入 $x_{i}$ 的函数输出。常用的激活函数有：sigmoid ($\varphi(x)=\frac{1}{1+e^{-x}}$)、tanh
    ($\varphi(x)=\frac{e^{2x}-1}{e^{2x}+1}$) 和 relu ($\varphi(x)=max(x,0)$)。
- en: '![Refer to caption](img/f1aa6238cf875ae952881ad5e89466f9.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![参考说明](img/f1aa6238cf875ae952881ad5e89466f9.png)'
- en: 'Figure 1: A fully connected layered neural network with two hidden layers.
    The term ‘layered’ is often omitted in the literature. In this survey, we refer
    to these as feed forward neural networks. An enlarged diagram of a single artificial
    neuron is presented separately to show its three components -- inputs, weighted
    sum, and nonlinear activation. The input data point has $n$ features (also called
    dimensions). Image sources: Single neuron image obtained from Chrislb - Own work,
    [wikimedia public domain CC BY-SA 3.0)](https://commons.wikimedia.org/w/index.php?curid=224550).
    The layered network created using Nn-svg (LeNail, [2019](#bib.bib68))'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1：一个具有两个隐藏层的全连接层神经网络。文献中通常省略“层”这一术语。在本综述中，我们将这些称为前馈神经网络。单个人工神经元的放大图单独展示，以显示其三个组成部分——输入、加权和非线性激活。输入数据点有
    $n$ 个特征（也称为维度）。图片来源：单个神经元图像由 Chrislb - 自制，[维基共享资源公共领域 CC BY-SA 3.0)](https://commons.wikimedia.org/w/index.php?curid=224550)。使用
    Nn-svg 创建的层次网络 (LeNail, [2019](#bib.bib68))
- en: 2.1.1 Fully connected layered neural networks
  id: totrans-36
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 2.1.1 全连接层神经网络
- en: 'The network shown in [Figure 1](#S2.F1 "Figure 1 ‣ 2.1 Relevant concepts and
    terms in deep learning ‣ 2 Preliminaries ‣ Applications of deep learning in congestion
    detection, prediction and alleviation: A survey") is a fully connected layered
    neural network. In such neural networks, the outputs from all neurons from a previous
    layer are fed as inputs to all neurons in the next layer. The literature on neural
    networks often omits the term ‘layered’ and uses the terms fully connected neural
    network (FCNN) in its place. The usage can be a source of confusion because a
    fully connected network might imply the presence of connections between all neurons
    in the neural network, not just between layers placed next to each other. In order
    to ensure proper terminology, in this survey we stick to the term feed forward
    neural network (FFNN) to imply fully connected layered neural networks (Goodfellow
    et al., [2016](#bib.bib43), Chapter 6). Additionally, we observed that several
    papers referred to in this survey used the term artificial neural network (ANN)
    to denote FFNN. In this survey, however, we stick to FFNN and avoid using ANN
    in its place.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如[图1](#S2.F1 "图1 ‣ 2.1 深度学习中的相关概念和术语 ‣ 2 初步知识 ‣ 深度学习在拥堵检测、预测和缓解中的应用：调查")所示的网络是一个完全连接的分层神经网络。在这种神经网络中，前一层所有神经元的输出都作为输入传递给下一层的所有神经元。文献中通常省略了“分层”这个术语，而使用“完全连接神经网络”（FCNN）来代替。这种用法可能会造成混淆，因为完全连接网络可能暗示神经网络中所有神经元之间都有连接，而不仅仅是相邻层之间的连接。为了确保术语的准确性，在本调查中我们坚持使用“前馈神经网络”（FFNN）来指代完全连接的分层神经网络（Goodfellow
    等，[2016](#bib.bib43)，第6章）。此外，我们观察到本调查中提到的几篇论文使用“人工神经网络”（ANN）一词来表示FFNN。然而，在本调查中，我们坚持使用FFNN，并避免使用ANN来代替。
- en: 'When placed parallel to each other, several such neurons form a layer of the
    neural network. When several layers are stacked one after the other, a feed forward
    neural network (FFNN) is formed. In this context, stacking refers to passing the
    output of one function or unit to another. The formation of a neural network using
    neurons is shown in [Figure 1](#S2.F1 "Figure 1 ‣ 2.1 Relevant concepts and terms
    in deep learning ‣ 2 Preliminaries ‣ Applications of deep learning in congestion
    detection, prediction and alleviation: A survey"). As we increase the stacking,
    the depth of the neural network increases. The literature on neural networks does
    not specify a pre-defined threshold for the depth, in order to demarcate deep
    and shallow networks. Any neural network having more than one hidden layer can
    be referred to as a deep neural network (Schmidhuber, [2015](#bib.bib107)). A
    deep neural network can learn more abstract representations of the data compared
    to a shallow network. The link between depth and abstractions is easily observed
    when working with image data as shown in [Figure 2](#S2.F2 "Figure 2 ‣ 2.1.2 CNNs
    and RNNs ‣ 2.1 Relevant concepts and terms in deep learning ‣ 2 Preliminaries
    ‣ Applications of deep learning in congestion detection, prediction and alleviation:
    A survey"). We shall frequently use the terms depth and layers in this survey.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当多个这样的神经元平行放置时，形成了神经网络的一层。当多个层一个接一个地堆叠时，形成了一个前馈神经网络（FFNN）。在这个背景下，堆叠指的是将一个函数或单元的输出传递给另一个函数或单元。使用神经元形成神经网络的示意图见[图1](#S2.F1
    "图1 ‣ 2.1 深度学习中的相关概念和术语 ‣ 2 初步知识 ‣ 深度学习在拥堵检测、预测和缓解中的应用：调查")。随着堆叠的增加，神经网络的深度也会增加。文献中并没有规定一个预定义的深度阈值来划分深层和浅层网络。任何具有多个隐藏层的神经网络都可以被称为深层神经网络（Schmidhuber，[2015](#bib.bib107)）。与浅层网络相比，深层神经网络可以学习数据的更抽象的表示。深度与抽象之间的关系在处理图像数据时尤为明显，如[图2](#S2.F2
    "图2 ‣ 2.1.2 CNN和RNN ‣ 2.1 深度学习中的相关概念和术语 ‣ 2 初步知识 ‣ 深度学习在拥堵检测、预测和缓解中的应用：调查")所示。在本调查中，我们将频繁使用“深度”和“层”这两个术语。
- en: For supervised learning tasks using deep learning, such as the prediction of
    congestion, the goal is to train a deep learning model so that it learns a mapping
    from input data to the output data. Let us consider a traffic prediction task
    where the goal is to predict the traffic flow at $n$ locations 1 minute into the
    future. The input data $x$ is a vector of length $n$ and varies at every minute
    $t$. Training the deep learning model implies assuming the existence of an underlying
    function $f$ such that $x(t+1)=f(x(t))$ and then, attempt to approximate $f$ by
    adapting the weights of the model. In order to approximate the function $f(x)$,
    a loss function $L$ is minimised. The most commonly used loss function is mean
    squared error. The minimisation is carried out using the backpropagation algorithm (LeCun
    et al., [1988](#bib.bib67)). Backpropagation refers to the propagation of errors
    from the loss function to the previous layers using the chain rule of differentiation.
    In order to guarantee that the function approximated by the deep learning model
    is not arbitrary, the loss is computed on new unseen data (test data) after the
    training process. If the values of loss function on training data and test data
    are similar, the model is said to generalise well. Several techniques for better
    generalisation of deep learning models have been explored. The most commonly used
    technique is dropout (Srivastava et al., [2014](#bib.bib118)). In this survey,
    we pay special attention to the generalisation techniques which have been developed
    by leveraging upon the domain knowledge from transportation.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 对于使用深度学习的监督学习任务，例如拥堵预测，其目标是训练一个深度学习模型，使其学习从输入数据到输出数据的映射。我们考虑一个交通预测任务，目标是预测 $n$
    个地点在 1 分钟后的交通流量。输入数据 $x$ 是一个长度为 $n$ 的向量，在每分钟 $t$ 时变化。训练深度学习模型意味着假设存在一个基础函数 $f$，使得
    $x(t+1)=f(x(t))$，然后尝试通过调整模型的权重来逼近 $f$。为了逼近函数 $f(x)$，需要最小化一个损失函数 $L$。最常用的损失函数是均方误差。最小化过程使用反向传播算法（LeCun
    等人，[1988](#bib.bib67)）。反向传播指的是通过链式法则将误差从损失函数传播到前一层。为了保证深度学习模型逼近的函数不是任意的，训练过程后在新未见数据（测试数据）上计算损失。如果训练数据和测试数据上的损失函数值相似，则模型被认为具有良好的泛化能力。为提高深度学习模型的泛化能力，已经探索了几种技术。最常用的技术是
    dropout（Srivastava 等人，[2014](#bib.bib118)）。在这项调查中，我们特别关注利用运输领域知识开发的泛化技术。
- en: 2.1.2 CNNs and RNNs
  id: totrans-40
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 2.1.2 CNN 和 RNN
- en: 'Traffic data vary over space and time. Two families of neural network architectures
    are particularly suited to capture such inter-dependencies: CNN and RNN.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 交通数据在空间和时间上变化。两类神经网络架构特别适合捕捉这些相互依赖性：CNN 和 RNN。
- en: 'Convolutional Neural Networks: CNN stands for Convolutional Neural Network.
    Historically, CNNs have been popularly used in image-classification problems due
    to their ability to capture the correlation between nearby pixels of an image.
    A deep-CNN is able to capture the correlations between pixels placed far apart
    in the image. In a typical CNN architecture, the first few layers are convolutional
    blocks, interspersed with pooling layers. Fully connected layers are present just
    before the output layer. Pooling is a downsampling technique used to report summary
    statistics from a neighbourhood (Goodfellow et al., [2016](#bib.bib43), chap. 9).
    The most commonly used pooling method with CNNs is max-pooling, wherein the maximum
    value of the activation is selected from a region (Albawi et al., [2017](#bib.bib3)).
    Pooling helps reduce the complexity of the deep learning model and also learn
    representations that are invariant to small local translations of the input data.
    The effectiveness of deep CNNs in capturing the spatial dependencies in the image
    is illustrated in [Figure 2](#S2.F2 "Figure 2 ‣ 2.1.2 CNNs and RNNs ‣ 2.1 Relevant
    concepts and terms in deep learning ‣ 2 Preliminaries ‣ Applications of deep learning
    in congestion detection, prediction and alleviation: A survey"). When applied
    to traffic data such as a 2-D image of grid-wise congestion level, the CNN models
    can capture the spatial dependencies.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '卷积神经网络：CNN 代表卷积神经网络。历史上，由于能够捕捉图像中相邻像素之间的相关性，CNN 常用于图像分类问题。深度 CNN 能够捕捉图像中远离的像素之间的相关性。在典型的
    CNN 架构中，前几层是卷积块，夹杂着池化层。全连接层位于输出层之前。池化是一种下采样技术，用于从邻域中报告汇总统计数据（Goodfellow 等，[2016](#bib.bib43)，第
    9 章）。与 CNN 最常用的池化方法是最大池化，其中从一个区域中选择激活的最大值（Albawi 等，[2017](#bib.bib3)）。池化有助于减少深度学习模型的复杂性，同时学习对输入数据的小局部平移不变的表示。深度
    CNN 在捕捉图像中空间依赖性的有效性在 [图 2](#S2.F2 "Figure 2 ‣ 2.1.2 CNNs and RNNs ‣ 2.1 Relevant
    concepts and terms in deep learning ‣ 2 Preliminaries ‣ Applications of deep learning
    in congestion detection, prediction and alleviation: A survey") 中得到了说明。当应用于诸如网格状拥堵水平的
    2D 图像等交通数据时，CNN 模型可以捕捉空间依赖性。'
- en: 'Recurrent Neural Networks: Based on the previous example, if we extend our
    assumed underlying function $f$ to be dependent on the previous 10 time steps
    instead of just one, ($x(t+1)=f(x(t),x(t-1),x(t-2),x(t-3),..x(t-10))$, training
    an FFNN can be achieved by concatenating sequences of 10 input vectors to create
    input vectors ($x^{\prime}(t)$) of length ($n*10$). The other option is to do
    backpropagation through time. This is accomplished using Recurrent Neural Networks
    (RNNs) as shown in [Figure 4](#S2.F4 "Figure 4 ‣ 2.1.4 Commonly used metrics ‣
    2.1 Relevant concepts and terms in deep learning ‣ 2 Preliminaries ‣ Applications
    of deep learning in congestion detection, prediction and alleviation: A survey").
    A RNN has a feedback loop in the connection, as opposed to the feed forward neural
    networks. The feedback loop can be unravelled to uncover the back propagation
    in time. When time series data are passed in sequence as an input to a RNN, the
    RNN maintains an internal state from one time-step to the next. At time $t+1$,
    the hidden state is influenced by the the input at time $t$ and the previous hidden
    state. This helps the RNNs to unravel the temporal dependencies in the data. Long-short-term-memory
    (LSTM) introduced in Hochreiter and Schmidhuber ([1997](#bib.bib54)), is an improvement
    over the traditional RNN. LSTM networks can detect dependencies between data points
    which are far apart in time (Greff et al., [2016](#bib.bib45)). At time $t$, an
    LSTM cell is characterised by the state of four logic gates- input ($i_{t}$),
    output ($o_{t}$), cell state ($c_{t}$) and forget ($f_{t}$) gates. Using our example
    of the vector $x(t)$, the hidden state ($h_{t}$) of an LSTM unit can be formalised
    using equations 2-6 (Tian et al., [2018](#bib.bib127); Wang et al., [2019](#bib.bib137)).'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '循环神经网络：基于之前的例子，如果我们将假设的基础函数 $f$ 扩展到依赖于之前的 10 个时间步而不是仅仅一个时间步（$x(t+1)=f(x(t),x(t-1),x(t-2),x(t-3),..x(t-10))$），可以通过将
    10 个输入向量的序列连接起来，创建长度为 ($n*10$) 的输入向量 ($x^{\prime}(t)$) 来实现 FFNN 的训练。另一种选择是进行时间反向传播。这通过使用循环神经网络（RNN）来实现，如 [图
    4](#S2.F4 "Figure 4 ‣ 2.1.4 Commonly used metrics ‣ 2.1 Relevant concepts and
    terms in deep learning ‣ 2 Preliminaries ‣ Applications of deep learning in congestion
    detection, prediction and alleviation: A survey")所示。与前馈神经网络不同，RNN 在连接中具有反馈环路。反馈环路可以展开以揭示时间上的反向传播。当时间序列数据作为输入传递到
    RNN 时，RNN 维护从一个时间步到下一个时间步的内部状态。在时间 $t+1$ 时，隐藏状态受到时间 $t$ 的输入和之前隐藏状态的影响。这有助于 RNN
    揭示数据中的时间依赖关系。长短期记忆（LSTM），由 Hochreiter 和 Schmidhuber ([1997](#bib.bib54)) 提出，是对传统
    RNN 的改进。LSTM 网络可以检测在时间上相距较远的数据点之间的依赖关系 （Greff 等，[2016](#bib.bib45)）。在时间 $t$ 时，LSTM
    单元由四个逻辑门的状态特征 - 输入 ($i_{t}$)、输出 ($o_{t}$)、单元状态 ($c_{t}$) 和遗忘 ($f_{t}$) 门。使用我们示例中的向量
    $x(t)$，LSTM 单元的隐藏状态 ($h_{t}$) 可以通过方程 2-6 表示 （Tian 等，[2018](#bib.bib127)；Wang 等，[2019](#bib.bib137)）。'
- en: '|  | $i_{t}=\sigma\left(W_{\mathrm{xi}}x_{t}+W_{\mathrm{hi}}h_{t-1}\right)$
    |  | (2) |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '|  | $i_{t}=\sigma\left(W_{\mathrm{xi}}x_{t}+W_{\mathrm{hi}}h_{t-1}\right)$
    |  | (2) |'
- en: '|  | $f_{t}=\sigma\left(W_{\mathrm{xf}}x_{t}+W_{\mathrm{hf}}h_{t-1}\right)$
    |  | (3) |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '|  | $f_{t}=\sigma\left(W_{\mathrm{xf}}x_{t}+W_{\mathrm{hf}}h_{t-1}\right)$
    |  | (3) |'
- en: '|  | $o_{t}=\tanh\left(W_{\mathrm{xo}}x_{t}+W_{\mathrm{ho}}h_{t-1}\right)$
    |  | (4) |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '|  | $o_{t}=\tanh\left(W_{\mathrm{xo}}x_{t}+W_{\mathrm{ho}}h_{t-1}\right)$
    |  | (4) |'
- en: '|  | $c_{t}=c_{t-1}\odot f_{t}+i_{t}\odot\tanh\left(W_{\mathrm{xc}}x_{t}+W_{\mathrm{hc}}h_{t-1}\right)$
    |  | (5) |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '|  | $c_{t}=c_{t-1}\odot f_{t}+i_{t}\odot\tanh\left(W_{\mathrm{xc}}x_{t}+W_{\mathrm{hc}}h_{t-1}\right)$
    |  | (5) |'
- en: '|  | $h_{t}=\tanh\left(c_{t}\right)\odot o_{t}$ |  | (6) |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '|  | $h_{t}=\tanh\left(c_{t}\right)\odot o_{t}$ |  | (6) |'
- en: where the $W_{ab}$ refers to the weight matrix between gates $a$ and $b$, $\odot$
    refers to element-wise vector product, $h_{t}$ refers to the hidden state at time
    $t$, $i_{t}$ refers to the input at time $t$, $o_{t}$ refers to the output at
    time $t$ and $\sigma$ refers to the sigmoid activation function.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 $W_{ab}$ 指的是门 $a$ 和 $b$ 之间的权重矩阵，$\odot$ 指的是元素逐位向量乘积，$h_{t}$ 指的是时间 $t$ 的隐藏状态，$i_{t}$
    指的是时间 $t$ 的输入，$o_{t}$ 指的是时间 $t$ 的输出，$\sigma$ 指的是 sigmoid 激活函数。
- en: 'Another recent improvement over LSTM are the Gated Recurrent Units, proposed
    in Chung et al. ([2014](#bib.bib19)). Compared to LSTM, GRU has a less complex
    structure and can be trained faster than LSTM. At time $t$, a GRU cell is characterised
    by the state of two logic gates- update gate ($z_{t}$) and reset gate ($r_{t}$).
    For a detailed empirical comparison description of the differences between RNNs
    and LSTMs, the interested reader is referred to Jozefowicz et al. ([2015](#bib.bib61))
    for an empirical evaluation of GRUs and LSTMs. The hidden state of a GRU can be
    formalised using equations 7-9 (Wang et al., [2019](#bib.bib137)):'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '另一项对 LSTM 的近期改进是门控递归单元 (GRU)，由 Chung 等人 ([2014](#bib.bib19)) 提出。与 LSTM 相比，GRU
    具有较少的复杂结构，并且可以比 LSTM 更快地进行训练。在时间 $t$，GRU 单元的特点是两个逻辑门的状态——更新门 ($z_{t}$) 和重置门 ($r_{t}$)。有关
    RNN 和 LSTM 之间差异的详细实证比较描述，感兴趣的读者可以参考 Jozefowicz 等人 ([2015](#bib.bib61)) 对 GRU 和
    LSTM 的实证评估。GRU 的隐藏状态可以通过方程 7-9 进行形式化（Wang 等人，[2019](#bib.bib137)）:'
- en: '|  | $r_{t}=\sigma\left(W_{\mathrm{xr}}x_{t}+W_{\mathrm{hr}}h_{t-1}\right)$
    |  | (7) |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '|  | $r_{t}=\sigma\left(W_{\mathrm{xr}}x_{t}+W_{\mathrm{hr}}h_{t-1}\right)$
    |  | (7) |'
- en: '|  | $z_{t}=\sigma\left(W_{\mathrm{xz}}x_{t}+W_{\mathrm{hz}}h_{t-1}\right)$
    |  | (8) |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '|  | $z_{t}=\sigma\left(W_{\mathrm{xz}}x_{t}+W_{\mathrm{hz}}h_{t-1}\right)$
    |  | (8) |'
- en: '|  | $h_{t}=z_{t}\odot h_{t-1}+\left(1-z_{t}\right)\odot\left(\tanh\left(W_{\mathrm{xh}}x_{t}+W_{\mathrm{hh}}\left(r_{t}\odot
    h_{t-1}\right)\right)\right)$ |  | (9) |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '|  | $h_{t}=z_{t}\odot h_{t-1}+\left(1-z_{t}\right)\odot\left(\tanh\left(W_{\mathrm{xh}}x_{t}+W_{\mathrm{hh}}\left(r_{t}\odot
    h_{t-1}\right)\right)\right)$ |  | (9) |'
- en: where the $W_{ab}$ refers to the weight matrix between gates $a$ and $b$, $\odot$
    refers to element-wise vector product, $h_{t}$ refers to the hidden state at time
    $t$ and $\sigma$ refers to the sigmoid activation function.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，$W_{ab}$ 指的是门 $a$ 和 $b$ 之间的权重矩阵，$\odot$ 表示逐元素向量积，$h_{t}$ 指的是时间 $t$ 的隐藏状态，$\sigma$
    指的是 sigmoid 激活函数。
- en: '![Refer to caption](img/31ba2b4f6fee201f8446ff8a08c3fb56.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![参考说明](img/31ba2b4f6fee201f8446ff8a08c3fb56.png)'
- en: 'Figure 2: (Top: A single convolution operation; Bottom: A deep convolutional
    neural network (CNN). As data propagate through various convolutional layers,
    the features learnt become more high level. Image sources: single convolution
    image adapted from (Mohamed, [2017](#bib.bib87)) with permission, traffic jam
    image adapted from [wikimedia public domain CC BY-SA 3.0)](https://upload.wikimedia.org/wikipedia/commons/3/3e/I-80_Eastshore_Fwy.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '图 2: (顶部: 单一卷积操作; 底部: 深度卷积神经网络 (CNN)。随着数据在不同的卷积层中传播，学习到的特征变得更加高层次。图片来源: 单卷积图像改编自
    (Mohamed, [2017](#bib.bib87))，交通拥堵图像改编自 [wikimedia 公共领域 CC BY-SA 3.0)](https://upload.wikimedia.org/wikipedia/commons/3/3e/I-80_Eastshore_Fwy.jpg)'
- en: 2.1.3 Reinforcement Learning
  id: totrans-57
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 2.1.3 强化学习
- en: 'Apart from CNNs and RNNs, a commonly used deep learning framework for traffic
    prediction tasks is deep reinforcement learning. Reinforcement learning (RL) is
    a learning paradigm that, when combined with deep learning, serves as a powerful
    tool for specific traffic-related prediction tasks where control is involved.
    Deep-reinforcement learning models have been demonstrated to perform very well
    for specific tasks – the most notable example is the model that was able to learn
    the game of Go starting from scratch (basic game rules) to a level that surpassed
    the rating of world champions (Silver et al., [2017](#bib.bib113)). The high computational
    load of such models, however, restricts their wide use. (Szepesvári, [2010](#bib.bib123),
    Page-1, abstract) define reinforcement learning as “a learning paradigm concerned
    with learning to control a system so as to maximize a numerical performance measure
    that expresses a long-term objective”. In this context, how to control is also
    referred to as the policy being learnt. When a deep learning model is trained
    to learn the best policy, it is referred to as a deep-reinforcement learning model.
    A representation of the reinforcement learning framework is presented in [Figure 5](#S2.F5
    "Figure 5 ‣ 2.1.4 Commonly used metrics ‣ 2.1 Relevant concepts and terms in deep
    learning ‣ 2 Preliminaries ‣ Applications of deep learning in congestion detection,
    prediction and alleviation: A survey"). While reviewing the literature, we found
    that Q-learning appears to be the popular reinforcement learning framework for
    traffic prediction tasks. Q-learning, introduced in Watkins ([1989](#bib.bib139)),
    is a model-free reinforcement learning approach where the environment as shown
    in [Figure 5](#S2.F5 "Figure 5 ‣ 2.1.4 Commonly used metrics ‣ 2.1 Relevant concepts
    and terms in deep learning ‣ 2 Preliminaries ‣ Applications of deep learning in
    congestion detection, prediction and alleviation: A survey"), does not need to
    be modelled explicitly. A detailed discussion on DQN is presented in Mnih et al.
    ([2015](#bib.bib85)).'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '除了卷积神经网络（CNNs）和递归神经网络（RNNs）外，用于交通预测任务的常用深度学习框架是深度强化学习。强化学习（RL）是一种学习范式，当它与深度学习结合时，可以作为一个强大的工具，用于涉及控制的特定交通预测任务。深度强化学习模型已被证明在特定任务上表现非常好——最著名的例子是那个能够从零开始学习围棋（基本游戏规则）并达到超越世界冠军评分的模型（Silver
    et al., [2017](#bib.bib113)）。然而，这些模型的高计算负载限制了它们的广泛使用。（Szepesvári, [2010](#bib.bib123),
    Page-1, abstract）将强化学习定义为“一个关注于学习控制系统以最大化数值性能度量的学习范式，该度量表达了长期目标”。在这个背景下，控制方法也被称为所学习的策略。当深度学习模型被训练以学习最佳策略时，它被称为深度强化学习模型。强化学习框架的表示见 [图 5](#S2.F5
    "Figure 5 ‣ 2.1.4 Commonly used metrics ‣ 2.1 Relevant concepts and terms in deep
    learning ‣ 2 Preliminaries ‣ Applications of deep learning in congestion detection,
    prediction and alleviation: A survey")。在审查文献时，我们发现Q学习似乎是交通预测任务中流行的强化学习框架。Q学习，最初由Watkins
    ([1989](#bib.bib139)) 提出，是一种无模型的强化学习方法，其中环境如 [图 5](#S2.F5 "Figure 5 ‣ 2.1.4 Commonly
    used metrics ‣ 2.1 Relevant concepts and terms in deep learning ‣ 2 Preliminaries
    ‣ Applications of deep learning in congestion detection, prediction and alleviation:
    A survey") 所示，不需要明确建模。有关DQN的详细讨论见Mnih et al. ([2015](#bib.bib85))。'
- en: 2.1.4 Commonly used metrics
  id: totrans-59
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 2.1.4 常用指标
- en: 'The commonly used metrics to quantify performance for regression tasks are
    Mean Absolute Error (MAE), Mean Absolute Percentage Error (MAPE) and Root Mean
    Squared Error (RMSE), given by:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 常用的回归任务性能量化指标包括平均绝对误差（MAE）、平均绝对百分比误差（MAPE）和均方根误差（RMSE），计算公式如下：
- en: '|  | $MAE=\frac{1}{n}\sum_{i=1}^{n}\left&#124;\hat{y}^{i}-y^{i}\right&#124;$
    |  | (10) |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '|  | $MAE=\frac{1}{n}\sum_{i=1}^{n}\left|\hat{y}^{i}-y^{i}\right|$ |  | (10)
    |'
- en: '|  | $RMSE=\sqrt{\frac{1}{n}\sum_{i=1}^{n}\left(\hat{y}^{i}-y^{i}\right)^{2}}$
    |  | (11) |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '|  | $RMSE=\sqrt{\frac{1}{n}\sum_{i=1}^{n}\left(\hat{y}^{i}-y^{i}\right)^{2}}$
    |  | (11) |'
- en: '|  | $MAPE=\frac{1}{n}\sum_{i=1}^{n}\left&#124;\frac{\hat{y}^{i}-y^{i}}{y^{i}}\right&#124;*100\%$
    |  | (12) |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '|  | $MAPE=\frac{1}{n}\sum_{i=1}^{n}\left|\frac{\hat{y}^{i}-y^{i}}{y^{i}}\right|*100\%$
    |  | (12) |'
- en: where $\hat{y}^{i}$ is the prediction for the $i^{th}$ data point, where the
    ground truth value was $y^{i}$. As is evident from the equations, RMSE and MAE
    are unit dependent while MAPE is a dimensionless quantity. In this survey, while
    reporting the performance of various regression tasks, we have tried to report
    the MAPE whenever available.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 $\hat{y}^{i}$ 是第 $i^{th}$ 数据点的预测值，实际值为 $y^{i}$。从这些公式中可以明显看出，RMSE 和 MAE 依赖于单位，而
    MAPE 是一个无量纲量。在本调查中，在报告各种回归任务的性能时，我们尽量报告可用的 MAPE。
- en: 'The commonly used metrics for classification tasks can be summarised using
    a confusion matrix as shown in [Figure 3](#S2.F3 "Figure 3 ‣ 2.1.4 Commonly used
    metrics ‣ 2.1 Relevant concepts and terms in deep learning ‣ 2 Preliminaries ‣
    Applications of deep learning in congestion detection, prediction and alleviation:
    A survey").'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '分类任务中常用的指标可以使用混淆矩阵总结，如 [图 3](#S2.F3 "Figure 3 ‣ 2.1.4 Commonly used metrics
    ‣ 2.1 Relevant concepts and terms in deep learning ‣ 2 Preliminaries ‣ Applications
    of deep learning in congestion detection, prediction and alleviation: A survey")
    所示。'
- en: '![Refer to caption](img/f5922116d230eb427015a8556c1bb5e5.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/f5922116d230eb427015a8556c1bb5e5.png)'
- en: 'Figure 3: Confusion matrix for binary classification task'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3：二分类任务的混淆矩阵
- en: 'In the light of the confusion matrix, several metrics are defined. The most
    commonly used metrics are: true positive rate (TPR), true negative rate (TNR)
    and accuracy, given by:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 根据混淆矩阵，定义了几个指标。最常用的指标有：真正率（TPR）、真负率（TNR）和准确率，如下所示：
- en: '|  | $TPR=\frac{TP}{TP+FN}$ |  | (13) |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '|  | $TPR=\frac{TP}{TP+FN}$ |  | (13) |'
- en: '|  | $TNR=\frac{TN}{TN+FP}$ |  | (14) |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '|  | $TNR=\frac{TN}{TN+FP}$ |  | (14) |'
- en: '|  | $Accuracy=\frac{TP+TN}{TP+TN+FP+FN}$ |  | (15) |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '|  | $Accuracy=\frac{TP+TN}{TP+TN+FP+FN}$ |  | (15) |'
- en: The choice of the metric used to evaluate the performance is often determined
    by the task at hand. For example, let us consider an example where a deep learning
    model is being used to classify whether the traffic state is ‘congested’ or ‘not
    congested. Let us consider 1440 data points collected every minute over the course
    of 24 hours and the congestion lasted for an hour and 60 data points have the
    ground truth label as ‘congestion’. This implies that even if the model predicts
    all data points as ‘not congested’, the prediction accuracy is ($\frac{0+(1440-60)}{1440}=95.8\%$.
    Thus, total accuracy is a misleading term for congestion prediction tasks. So,
    for congestion prediction tasks, the usual practice is to report balanced accuracy
    (BAC). BAC is defined as the mean of the TPR for each class ($0.5*(TPR+TNR)$).
    We observed that some papers presented here refer to BAC as average accuracy.
    Another metric used by one of the papers discussed here is quadratic weighted
    kappa (QWK (Ben-David, [2008](#bib.bib12))). The QWK metric increases the penalty
    for classification by chance. The QWK values lie between 0 and 1, with 1 being
    achieved when the prediction matches the ground truth and 0 when the output is
    random noise. Mathematically, for an $N$ class classification task, QWK is given
    by $\kappa=1-\frac{\Sigma_{i,j}\mathbf{w}_{i,j}\mathbf{O}_{i,j}}{\Sigma_{i,j}\mathbf{E}_{i,j}\mathbf{P}_{i,j}}$,
    where $\mathbf{O_{NxN}}$ is the confusion matrix according to the model prediction
    and the matrix $\mathbf{E}_{NxN}$ is the expected confusion matrix if prediction
    was by chance; $\mathbf{w}_{i,j}=\frac{(i-j)^{2}}{(N-1)^{2}}$ A complete derivation
    is presented in Haberman ([2019](#bib.bib48)).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 用于评估性能的指标选择通常由手头的任务决定。例如，假设使用深度学习模型来分类交通状态是否为“拥堵”或“未拥堵”。假设收集了 1440 个数据点，每分钟一个，持续
    24 小时，拥堵持续了一个小时，并且有 60 个数据点的实际标签为“拥堵”。这意味着即使模型预测所有数据点为“未拥堵”，预测准确率为（$\frac{0+(1440-60)}{1440}=95.8\%$）。因此，总体准确率对于拥堵预测任务是一个误导性术语。因此，对于拥堵预测任务，通常的做法是报告平衡准确率（BAC）。BAC
    定义为每个类别的 TPR 的均值（$0.5*(TPR+TNR)$）。我们观察到一些论文将 BAC 称为平均准确率。这里讨论的论文之一使用的另一个指标是二次加权
    kappa（QWK (Ben-David, [2008](#bib.bib12)))。QWK 指标增加了由于偶然分类的惩罚。QWK 值介于 0 和 1 之间，1
    表示预测与实际值匹配，0 表示输出是随机噪声。从数学上讲，对于 $N$ 类分类任务，QWK 由 $\kappa=1-\frac{\Sigma_{i,j}\mathbf{w}_{i,j}\mathbf{O}_{i,j}}{\Sigma_{i,j}\mathbf{E}_{i,j}\mathbf{P}_{i,j}}$
    给出，其中 $\mathbf{O_{NxN}}$ 是根据模型预测的混淆矩阵，矩阵 $\mathbf{E}_{NxN}$ 是如果预测是偶然的预期混淆矩阵；$\mathbf{w}_{i,j}=\frac{(i-j)^{2}}{(N-1)^{2}}$
    完整的推导请参见 Haberman ([2019](#bib.bib48))。
- en: The choice of the metric is an important design decision in machine learning
    tasks and influences the performance of the modelling task. Some common factors
    which are taken into account while choosing the metric are class imbalance, presence
    of outliers and invariance properties. The interested reader is referred to Sokolova
    and Lapalme ([2009](#bib.bib117)) for a systematic coverage of various metrics
    for classification tasks.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 选择指标是机器学习任务中的一个重要设计决策，并且影响模型任务的性能。选择指标时考虑的一些常见因素包括类别不平衡、异常值存在和不变性属性。有兴趣的读者可以参考
    Sokolova 和 Lapalme ([2009](#bib.bib117)) 以系统地了解各种分类任务指标。
- en: '![Refer to caption](img/a8363401c522758da4c50df767490d8f.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/a8363401c522758da4c50df767490d8f.png)'
- en: 'Figure 4: Unraveling of a recurrent neural network in time'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4：时间上的递归神经网络展开
- en: '![Refer to caption](img/34d52dd729ba5e6e5b253ab1f19afe65.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明文字](img/34d52dd729ba5e6e5b253ab1f19afe65.png)'
- en: 'Figure 5: The general framework of reinforcement learning'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5：强化学习的一般框架
- en: 2.2 Relevant concepts and terms in transportation
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 相关概念与术语在交通运输中
- en: In this section, we define some terms from transportation that are fundamental
    to the understanding of the discussion presented in this survey. A comprehensive
    review of these definitions and deep insights on their role in traffic prediction
    is presented in Hall ([1996](#bib.bib49)); Immers and Logghe ([2002](#bib.bib57)),
    and (Gerlough and Huber, [1976](#bib.bib39), Chapter 2). Here, we selectively
    reproduce some basic ideas which are necessary for the discussion presented in
    this survey. The most common variables used to measure the state of traffic are density,
    speed and flow.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们定义了一些交通运输中的术语，这些术语对理解本调查中提出的讨论至关重要。这些定义的全面审查以及对其在交通预测中作用的深入见解见于 Hall（[1996](#bib.bib49)）；Immers
    和 Logghe（[2002](#bib.bib57)），以及（Gerlough 和 Huber，[1976](#bib.bib39)，第 2 章）。在这里，我们选择性地重现了一些讨论中所需的基本概念。用于测量交通状态的最常见变量是密度、速度和流量。
- en: 'Traffic density: Traffic density is defined as the number of vehicles per unit
    length of the road segment. Traditionally, traffic density for the entire road
    segment has been difficult to measure because of the limited number of sensors
    to estimate the presence of vehicles. However, this trend is changing with an
    increasing number of traffic cameras and the advances in computer vision. A related
    quantity is ‘occupancy’, which is often used as a proxy for measuring density.
    Occupancy is defined as the percentage of the time during which a point in the
    road network is occupied by vehicles. Occupancy can be directly measured using
    sensors, most commonly using Vehicle loop detectors (VLDs). If the length of each
    vehicle is the same (homogeneous stream of traffic), occupancy is directly proportional
    to the traffic flow. In practice, the density is most commonly estimated using
    the fundamental relation between density and speed ($q=k*u$), where $q$ is the
    flow, $k$ is the density and $u$ is the speed. In the presence of a heterogeneous
    traffic stream, the relationship between occupancy and density is complex (Ramezani
    et al., [2015](#bib.bib99)).'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 交通密度：交通密度定义为单位长度道路段上的车辆数量。由于传感器数量有限，传统上很难测量整个道路段的交通密度，以估计车辆的存在。然而，随着交通摄像头数量的增加和计算机视觉的进步，这一趋势正在改变。相关的量是‘占用率’，通常作为测量密度的代理。占用率定义为在道路网络中某一点被车辆占用的时间百分比。占用率可以通过传感器直接测量，最常见的是使用车辆回路探测器（VLDs）。如果每辆车的长度相同（均匀交通流），占用率与交通流量成正比。在实际应用中，密度通常通过密度与速度之间的基本关系来估算（$q=k*u$），其中$q$是流量，$k$是密度，$u$是速度。在异质交通流存在的情况下，占用率与密度之间的关系是复杂的（Ramezani
    等，[2015](#bib.bib99)）。
- en: 'Traffic speed: The spot speed (or instantaneous speed) of a vehicle is the
    speed that is recorded at a given moment in time and at a specified location.
    This is the speed that is measured on the vehicle speedometer. In transportation
    engineering, however, we are interested in determining mean speed which can be
    used as a defining parameter for the traffic stream. In order to compute mean
    speed, the aggregation can be done in time or space. Space-mean speed, for a given
    interval of space, is defined as the ratio between the total distance travelled
    by all vehicles and the total time taken. Time-mean speed, for a given interval
    of time, is defined as the arithmetic mean of the individual speed of all vehicles.
    Mathematically, the space-mean speed reduces to the harmonic mean of individual
    vehicle speeds ($v_{i}$). Assuming $N$ vehicles,'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 交通速度：车辆的瞬时速度（或即时速度）是在特定时间点和指定位置记录的速度。这是车辆速度表上测量的速度。然而，在交通工程中，我们更关心的是平均速度，它可以作为交通流的定义参数。为了计算平均速度，可以在时间或空间上进行聚合。空间均值速度，针对给定的空间区间，定义为所有车辆行驶的总距离与总时间的比率。时间均值速度，针对给定的时间区间，定义为所有车辆单独速度的算术平均值。在数学上，空间均值速度等于单个车辆速度的调和均值（$v_{i}$）。假设有$N$辆车，
- en: '|  | $space~{}mean~{}speed=\frac{total~{}distance~{}travelled}{total~{}time~{}taken}=\frac{N*D}{\sum_{i}^{N}t_{i}}=\frac{N*D}{\sum_{i}^{N}\frac{D}{u_{i}}}=\frac{1}{N}\frac{1}{\sum_{i}^{N}\frac{1}{u_{i}}}$
    |  | (16) |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '|  | $space~{}mean~{}speed=\frac{total~{}distance~{}travelled}{total~{}time~{}taken}=\frac{N*D}{\sum_{i}^{N}t_{i}}=\frac{N*D}{\sum_{i}^{N}\frac{D}{u_{i}}}=\frac{1}{N}\frac{1}{\sum_{i}^{N}\frac{1}{u_{i}}}$
    |  | (16) |'
- en: '|  | $time~{}mean~{}speed=\frac{1}{N}\sum_{i}{N}u_{i}$ |  | (17) |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '|  | $time~{}mean~{}speed=\frac{1}{N}\sum_{i}{N}u_{i}$ |  | (17) |'
- en: The space-mean speed satisfies the fundamental relation between flow, speed
    and density ($q=k*u$), whereas the time-mean speed does not follow the fundamental
    equation. When using deep learning for predicting traffic speed, the pre-processing
    steps on the raw data determine which one of them is being predicted. The use
    of space-mean speed is more common for congestion prediction tasks commonly referred
    to as the ‘segment speed. On the other hand, if the data source provides aggregated
    speed data, the general practice is to predict the same variable (Gartner et al.,
    [2002](#bib.bib36); Daganzo and Daganzo, [1997](#bib.bib22)).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 空间均速满足流量、速度和密度之间的基本关系（$q=k*u$），而时间均速则不遵循基本方程。在使用深度学习预测交通速度时，原始数据的预处理步骤决定了预测的是哪一种速度。空间均速在拥堵预测任务中更为常见，通常称为“段速”。另一方面，如果数据源提供的是汇总速度数据，通常的做法是预测相同变量（Gartner
    et al., [2002](#bib.bib36); Daganzo and Daganzo, [1997](#bib.bib22)）。
- en: 'Traffic flow: Traffic flow is defined as the number of vehicles passing a reference
    point per unit time. The reference points are usually chosen in the middle or
    at the end of a segment.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 交通流量：交通流量定义为单位时间内通过参考点的车辆数量。参考点通常选择在路段的中间或末端。
- en: 'Travel time: Travel time is the time taken by a vehicle to go from point A
    to point B. Traditionally, travel time has been difficult to measure using aggregated
    data from point sensors (such as VLDs). With the advent of distributed sensors,
    such as GPS, these are being increasingly used to estimate the travel time. In
    the transportation literature, this is referred to as the floating car data (FCD).
    The challenge however lies in the variation in the percentage of vehicles that
    share the data at any given point. The major benefit of using FCD is that when
    the traffic flow is high, more data are collected. This stands in contrast to
    point sensors where the optimal choice of sensor locations is a major challenge (De Fabritiis
    et al., [2008](#bib.bib23)).'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 行程时间：行程时间是车辆从A点到B点所花费的时间。传统上，使用点传感器（如VLDs）汇总的数据来测量行程时间是困难的。随着分布式传感器的出现，如GPS，这些传感器越来越多地被用来估计行程时间。在交通运输文献中，这被称为浮动车数据（FCD）。然而，挑战在于任何给定时间点共享数据的车辆百分比的变化。使用FCD的主要好处是，当交通流量较高时，收集到的数据更多。这与点传感器形成对比，因为点传感器的最佳位置选择是一个主要挑战（De
    Fabritiis et al., [2008](#bib.bib23)）。
- en: 'Two extreme values are important to study the relationship between the aforementioned
    traffic state variables. Familiarity with these extreme values is necessary to
    understand the remaining part of this survey and other research dealing with disruptions
    in road networks. These two values are:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 研究上述交通状态变量之间关系时，两种极端值非常重要。熟悉这些极端值对于理解本调查的其余部分以及其他研究道路网络中干扰的文献是必要的。这两种值是：
- en: •
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'jam density ($k_{j}$): The highest possible value of traffic density; this
    corresponds to traffic speed = 0 km/h.'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 拥堵密度（$k_{j}$）：交通密度的最高可能值；对应的交通速度为0公里/小时。
- en: •
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'free-flow speed ($u_{f}$): The maximum speed at which the vehicles can travel
    on a given road segment. Under the assumption that drivers respect the speed limit,
    $u_{f}$ is the same as the speed limit for the road segment under consideration.'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 自由流速（$u_{f}$）：车辆在给定路段上行驶的最高速度。在假设司机遵守限速的情况下，$u_{f}$ 与所考虑路段的限速相同。
- en: 'The three variables described above (speed, density and flow) are correlated.
    However, a generalised equation depicting the relation between these variables
    has not been established. A simplified linear relationship between speed and density
    suffices for our discussion here. In [Figure 6](#S2.F6 "Figure 6 ‣ 2.2 Relevant
    concepts and terms in transportation ‣ 2 Preliminaries ‣ Applications of deep
    learning in congestion detection, prediction and alleviation: A survey"), we show
    the relationship between these variables assuming a linear relationship between
    speed and density. The various critical points in the three curves in [Figure 6](#S2.F6
    "Figure 6 ‣ 2.2 Relevant concepts and terms in transportation ‣ 2 Preliminaries
    ‣ Applications of deep learning in congestion detection, prediction and alleviation:
    A survey") are highlighted and colour-coded to show the level of serviceability
    for the two most important stakeholders in a transportation system – drivers and
    traffic controllers.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '上述三个变量（速度、密度和流量）是相关的。然而，尚未建立描绘这些变量之间关系的一般化方程。对于我们的讨论，这里简化为速度和密度之间的线性关系。在 [图6](#S2.F6
    "Figure 6 ‣ 2.2 Relevant concepts and terms in transportation ‣ 2 Preliminaries
    ‣ Applications of deep learning in congestion detection, prediction and alleviation:
    A survey")中，我们展示了这些变量之间的关系，假设速度和密度之间是线性关系。图6中的三条曲线上的各种关键点被突出显示并用颜色编码，以显示交通系统中两个最重要利益相关者——驾驶员和交通控制员的服务水平。'
- en: '![Refer to caption](img/bb07a6d7e347db657f9b17ab5d4cfa3f.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/bb07a6d7e347db657f9b17ab5d4cfa3f.png)'
- en: 'Figure 6: Representative curves showing the relationship between flow, speed
    and density. A linear relation between speed and density is assumed here. The
    two green circles point to maximum speed ($U_{max}$) and maximum flow ($q_{max}$)
    which are the best serviceability conditions w.r.t drivers and traffic controllers
    respectively. The red circle points to the maximum density or traffic jam ($K_{jam}$),
    which implies a lack of serviceability from both perspectives. Base image adapted
    from [NPTEL lecture notes](https://nptel.ac.in/content/storage2/courses/105101087/downloads/Lec-31.pdf)
    creative commons license ([CC-BY-NC-SA](https://creativecommons.org/licenses/by-nc-sa/1.0/))'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图6：代表性的曲线展示了流量、速度和密度之间的关系。这里假设速度和密度之间是线性关系。两个绿色圆圈指向最大速度（`$U_{max}$`）和最大流量（`$q_{max}$`），分别代表对驾驶员和交通控制员而言最佳的服务条件。红色圆圈指向最大密度或交通拥堵（`$K_{jam}$`），这表明从两方面看都缺乏服务能力。基础图像改编自 [NPTEL
    讲义](https://nptel.ac.in/content/storage2/courses/105101087/downloads/Lec-31.pdf)
    创作共用许可证 ([CC-BY-NC-SA](https://creativecommons.org/licenses/by-nc-sa/1.0/))。
- en: The choice of the target variable is also motivated by taking into account the
    consumers of the research output. If the research is targeted at optimising the
    usage of the transportation network as a system, the focus might be on maximising
    the throughput of the network; hence the researchers will focus on predicting
    the traffic flow accurately. On the other hand, if the research is aimed at improving
    the user travel time, the focus will be on predicting speed or travel time. For
    instance, when we use a trip planner to find the optimal route from a starting
    point to a destination, we often want to figure out the fastest route, we are
    not concerned with the traffic flow on the roads (Golledge, [1995](#bib.bib42)).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 选择目标变量的原因也考虑到了研究结果的消费者。如果研究的目标是优化交通网络作为一个系统的使用，重点可能会放在最大化网络的吞吐量上；因此，研究人员将重点关注准确预测交通流量。另一方面，如果研究旨在改善用户旅行时间，则重点将放在预测速度或旅行时间上。例如，当我们使用旅行规划器来寻找从出发点到目的地的最佳路线时，我们通常希望找到最快的路线，而不关心道路上的交通流量（Golledge,
    [1995](#bib.bib42)）。
- en: '![Refer to caption](img/1c8933ee2bb3aba7ae6ffa6cc9669ba9.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/1c8933ee2bb3aba7ae6ffa6cc9669ba9.png)'
- en: 'Figure 7: Hysteresis loop, reproduced from (Treiterer, [1975](#bib.bib129))'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图7：滞后回路，转载自 (Treiterer, [1975](#bib.bib129))
- en: 'Traffic hysteresis: The fundamental traffic diagram presented in [Figure 6](#S2.F6
    "Figure 6 ‣ 2.2 Relevant concepts and terms in transportation ‣ 2 Preliminaries
    ‣ Applications of deep learning in congestion detection, prediction and alleviation:
    A survey"), is overly simplified. When real data are plotted using density and
    speed (space-mean speed), the plot shows significant scatter around an underlying
    curve (Geroliminis and Sun, [2011](#bib.bib40)). Researchers have proposed various
    theories to explain the scatter in the flow-density curve. One such theory is
    the theory of hysteresis characterised by a distinct loop in the flow-density
    curve. First observed by Treiterer ([1975](#bib.bib129)), traffic hysteresis arises
    due to the human factors in driving. The phenomenon can be easily observed at
    traffic intersections where a large number of vehicles are queuing. As soon as
    the signal turns green, the queue does not dissipate at the uniform rate throughout.
    The queue dissipates from front to back and there are significant time delays.
    The phenomenon of traffic hysteresis is attributed to the differential acceleration
    and deceleration rates of vehicles as shown in [Figure 7](#S2.F7 "Figure 7 ‣ 2.2
    Relevant concepts and terms in transportation ‣ 2 Preliminaries ‣ Applications
    of deep learning in congestion detection, prediction and alleviation: A survey").
    As a result of the hysteresis, a traffic disrupting event continues to affect
    traffic even after the disruption event has ceased to occur.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '交通滞后：在[图6](#S2.F6 "Figure 6 ‣ 2.2 Relevant concepts and terms in transportation
    ‣ 2 Preliminaries ‣ Applications of deep learning in congestion detection, prediction
    and alleviation: A survey")中呈现的基本交通图是过于简化的。当使用密度和速度（空间平均速度）绘制实际数据时，图中显示了围绕基础曲线的显著散布（Geroliminis
    和 Sun，[2011](#bib.bib40)）。研究人员提出了各种理论来解释流量-密度曲线中的散布现象。其中一种理论是由流量-密度曲线中的明显环形特征所表征的滞后理论。该现象首次由
    Treiterer（[1975](#bib.bib129)）观察到，交通滞后是由于驾驶中的人为因素造成的。这种现象可以在大量车辆排队的交通交叉口轻松观察到。信号灯变绿后，排队并不会均匀消散，而是从前到后逐渐消散，并且会出现显著的时间延迟。交通滞后的现象归因于车辆的加速和减速率差异，如[图7](#S2.F7
    "Figure 7 ‣ 2.2 Relevant concepts and terms in transportation ‣ 2 Preliminaries
    ‣ Applications of deep learning in congestion detection, prediction and alleviation:
    A survey")所示。因此，由于滞后现象，交通干扰事件在干扰事件结束后仍会继续影响交通。'
- en: Another theory used to explain the scatter is capacity drop, attributed to Cassidy
    and Bertini ([1999](#bib.bib15)). They propose that ‘just before the onset of
    congestion the outflow out of a bottleneck is higher than in congestion’ (van
    Wageningen-Kessels et al., [2015](#bib.bib130), p.451). The interested reader
    is referred to (van Wageningen-Kessels et al., [2015](#bib.bib130)) for a detailed
    review of the traffic flow models. The key takeaways from these efforts are that
    the complexity of modelling traffic flow increases as the traffic state moves
    towards congestion.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种解释散布现象的理论是容量下降，该理论归因于 Cassidy 和 Bertini（[1999](#bib.bib15)）。他们提出，“在拥堵开始之前，瓶颈的流出量高于拥堵状态下的流出量”（van
    Wageningen-Kessels 等，[2015](#bib.bib130), p.451）。有兴趣的读者可以参考 (van Wageningen-Kessels
    等，[2015](#bib.bib130)) 以获取详细的交通流模型评审。这些努力的关键收获是，随着交通状态向拥堵状态移动，交通流建模的复杂性增加。
- en: 'Simulation-based approaches for traffic flow modelling: When using a microscopic
    agent-based traffic simulator, individuals and infrastructure elements are modelled
    as agents. Some examples of traffic simulators are: (1) open-sourced: MATSim (Axhausen
    et al., [2016](#bib.bib7)), SUMO (Behrisch et al., [2011](#bib.bib10)), SimMobility
    (Adnan et al., [2016](#bib.bib1)), MATES (Yoshimura, [2006](#bib.bib149)) and
    TRANSIMS (Smith et al., [1995](#bib.bib115); Nagel and Rickert, [2001](#bib.bib89))
    and (2) commercially available: AIMSUN (Casas et al., [2010](#bib.bib14)), [VISSIM](https://www.ptvgroup.com)
    and [PARAMICS](https://www.paramics.co.uk/en/). In the case of traffic models
    derived using behavioural methods, a probabilistic model of the possible behaviours
    (actions and decisions) of each type of agent is programmed into the system by
    domain experts. The parameters are then calibrated using the available data. During
    the calibration process, the range of parameter values is constrained within meaningful
    ranges of values for each parameter. The initial values and the range of parameters,
    being set by the domain experts results in the parameters having some level of
    physical significance, thus making the models interpretable. The predicted traffic
    is the net result of the interaction between the agents in the calibrated model.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 基于模拟的方法进行交通流建模：使用微观代理基础的交通模拟器时，个体和基础设施元素被建模为代理。一些交通模拟器的例子包括：（1）开源：MATSim（Axhausen
    et al., [2016](#bib.bib7)），SUMO（Behrisch et al., [2011](#bib.bib10)），SimMobility（Adnan
    et al., [2016](#bib.bib1)），MATES（Yoshimura, [2006](#bib.bib149)）和TRANSIMS（Smith
    et al., [1995](#bib.bib115)；Nagel 和 Rickert, [2001](#bib.bib89)）以及（2）商业可用：AIMSUN（Casas
    et al., [2010](#bib.bib14)），[VISSIM](https://www.ptvgroup.com) 和 [PARAMICS](https://www.paramics.co.uk/en/)。在使用行为方法推导的交通模型中，每种类型的代理的可能行为（行动和决策）的概率模型由领域专家编程到系统中。然后，使用现有数据对参数进行校准。在校准过程中，参数值的范围被约束在每个参数的有意义的值范围内。由领域专家设定的初始值和参数范围使得参数具有一定的物理意义，从而使模型可解释。预测的交通流是校准模型中代理之间相互作用的最终结果。
- en: 'Short-term traffic prediction: Some model-based approaches to short-term traffic
    prediction are DynaMIT (Ben-Akiva et al., [1998](#bib.bib11)) and DYNASMART (Mahmassani
    et al., [2004](#bib.bib81)). In model-based approaches, the central algorithm
    is Dynamic Traffic Assignment (DTA) (Janson, [1991](#bib.bib59)).'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 短期交通预测：一些基于模型的短期交通预测方法包括DynaMIT（Ben-Akiva et al., [1998](#bib.bib11)）和DYNASMART（Mahmassani
    et al., [2004](#bib.bib81)）。在基于模型的方法中，中央算法是动态交通分配（DTA）（Janson, [1991](#bib.bib59)）。
- en: 2.3 Definition and classification of congestion
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.3 拥堵的定义与分类
- en: ‘Congestion can be defined as the phenomenon that arises when the input volume
    exceeds the output capacity of a facility’ (Stopher, [2004](#bib.bib119), Section
    2.1). Depending on the number and size of facilities, congestion results in varying
    levels of loss in the serviceability of the road network. The literature on congestion
    prediction defines congestion either in terms of one of the traffic state variables
    (speed, density, flow) or in terms of derived variables such as the ratio of average
    speed to speed limit. A recent survey of the traffic variables used to define
    congestion is presented in Afrin and Yodo ([2020](#bib.bib2)). Once a variable
    is chosen, the values of the variable are quantified into a fixed number of levels
    in order to define a classification task. A binary quantisation can be achieved
    by using a single threshold on any one of the traffic variables. For example,
    a traffic density of more than a certain threshold can be referred to as ‘jam’
    and vice-versa.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: “拥堵可以定义为当输入量超过设施的输出能力时产生的现象”（Stopher, [2004](#bib.bib119), 第2.1节）。根据设施的数量和规模，拥堵会导致道路网络服务能力的不同程度损失。关于拥堵预测的文献将拥堵定义为交通状态变量（速度、密度、流量）之一，或作为派生变量（例如平均速度与限速的比率）。Afrin
    和 Yodo ([2020](#bib.bib2)) 提供了用于定义拥堵的交通变量的最新调查。一旦选择了一个变量，该变量的值会量化为固定数量的级别，以定义分类任务。通过在任一交通变量上使用单一阈值，可以实现二元量化。例如，超过某个阈值的交通密度可以称为“拥堵”，反之亦然。
- en: Based on the spatio-temporal frequency of their occurrences, congestion can
    be classified into two types- recurring and non-recurring. Recurring congestion,
    as the name suggests, is the congestion that manifests itself repeatedly in space
    and/or time. Specific areas of the city might experience traffic jams regularly
    at specific times during the day or on certain days of the week. non-recurring
    congestion does not follow a spatio-temporal pattern. McGroarty ([2010](#bib.bib84))
    present a summary of the causes behind both types of congestion. They report that
    recurring congestion is almost always caused by an infrastructural bottleneck.
    On the other hand, the non-recurring congestion can be caused by unforeseen events
    such as extreme weather conditions, natural and man-made disasters, accidents
    or planned events such as big concerts and roadworks. In the process of reviewing
    the literature, we observed that a significant number of papers have not clarified
    whether they attempted to predict recurring or non-recurring congestion. We have
    carefully evaluated their results and included them in their respective sections.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 根据其出现的时空频率，拥堵可以分为两种类型——重复性拥堵和非重复性拥堵。重复性拥堵，顾名思义，是指在空间和/或时间上反复出现的拥堵。城市的特定区域可能在一天中的特定时间或一周中的某些日子经常出现交通堵塞。非重复性拥堵则不遵循时空模式。McGroarty
    ([2010](#bib.bib84)) 总结了两种类型拥堵的原因。他们报告说，重复性拥堵几乎总是由基础设施瓶颈造成的。另一方面，非重复性拥堵可能由不可预见的事件引起，如极端天气条件、自然和人为灾害、事故或计划中的活动，如大型音乐会和道路施工。在审查文献的过程中，我们观察到许多论文没有明确说明他们是否尝试预测重复性或非重复性拥堵。我们仔细评估了他们的结果，并将其纳入各自的章节中。
- en: 2.4 Synergies between model-based and deep learning based traffic prediction
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.4 基于模型和深度学习的交通预测的协同作用
- en: The data-driven methods for short-term traffic prediction on the other hand
    do not take the user behaviour into consideration. Data-driven models aim to solve
    the prediction task by assuming traffic to be a measurable state of the system
    and attempt to predict its state into the future. Specifically, the workflow is
    to use all available data from sensors and output the predicted traffic state
    variable. Particularly, when deep learning models are used for this task, the
    model internals (weights) have no physical significance. Due to the lack of interpretability,
    extensive validation is necessary to ensure that the deep learning model predictions
    are useful.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，基于数据的方法用于短期交通预测时不考虑用户行为。数据驱动模型旨在通过假设交通是系统的可测量状态来解决预测任务，并尝试预测其未来状态。具体来说，工作流程是利用来自传感器的所有可用数据，并输出预测的交通状态变量。特别是，当使用深度学习模型执行此任务时，模型的内部（权重）没有物理意义。由于缺乏可解释性，必须进行广泛验证以确保深度学习模型的预测是有用的。
- en: Traffic simulators are useful for investigating the effects of new policies.
    Their importance further increases in studies where real data are unavailable
    or cannot be collected. For example, a simulator can be used to study the effects
    of a city-wide failure of traffic lights. Real-world data cannot be obtained at
    such a scale; therefore the researchers rely on the fact that the behaviour-modelling
    of drivers and the modelled physical interactions between agents, together provide
    reliable inferences.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 交通模拟器在研究新政策的效果方面非常有用。在实际数据无法获得或无法收集的研究中，其重要性进一步增加。例如，模拟器可以用来研究全市交通灯故障的影响。这样的规模下无法获得现实世界的数据；因此，研究人员依赖于驾驶员行为建模和代理之间建模的物理交互，来提供可靠的推断。
- en: 'Synergies between model-based and data-driven approaches can benefit the research
    using both approaches. Congestion and accident databases suffer from severe class
    imbalance problems. Fukuda et al. ([2020](#bib.bib33)) used a traffic simulator
    to produce traffic data after simulated accidents. The generated data was then
    used for training a deep neural network. As we shall discuss in [section 6.1.1](#S6.SS1.SSS1
    "6.1.1 Adaptive traffic signal control (TSC) ‣ 6.1 Deep learning for recurring
    congestion alleviation ‣ 6 Deep learning for congestion alleviation ‣ Applications
    of deep learning in congestion detection, prediction and alleviation: A survey"),
    when using a deep reinforcement learning framework to determine the optimal network-level
    control measures for congestion alleviation, a microscopic traffic simulator is
    incorporated in the framework. Borysov et al. ([2019](#bib.bib13)) used a deep
    generative model to generate agents for a simulation platform.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '模型驱动和数据驱动方法之间的协同效应可以对使用这两种方法的研究带来好处。拥堵和事故数据库面临严重的类别不平衡问题。**福田等人** ([2020](#bib.bib33))
    使用交通模拟器在模拟事故后生成交通数据。生成的数据随后用于训练深度神经网络。正如我们将在[第6.1.1节](#S6.SS1.SSS1 "6.1.1 Adaptive
    traffic signal control (TSC) ‣ 6.1 Deep learning for recurring congestion alleviation
    ‣ 6 Deep learning for congestion alleviation ‣ Applications of deep learning in
    congestion detection, prediction and alleviation: A survey")中讨论的那样，当使用深度强化学习框架来确定缓解拥堵的最佳网络级控制措施时，框架中会包含一个微观交通模拟器。**博里索夫等人**
    ([2019](#bib.bib13)) 使用深度生成模型为模拟平台生成代理。'
- en: Deep learning models are increasingly being used to learn the physics behind
    the nonlinear dynamics of complex networks. Such models have typically been studied
    under the heading of Physics informed deep learning (PIDL)). PIDL was conceptualised
    with two motivations. First, PIDL enables us to use prior domain knowledge to
    regularise the function being approximated by the deep learning model, thereby
    reducing overfitting (Raissi et al., [2017a](#bib.bib97)). Second, PIDL can be
    used to discover new partial differential equations from the data (Raissi et al.,
    [2017b](#bib.bib98)). When PIDL models are used in the traffic domain, microscopic
    traffic simulators often play an important role in the training process of such
    models. By design, the traffic simulators respect the traffic flow dynamics and
    hence can be used to regularise the traffic state predictions from a neural network.
    For example, SUMO was used for this purpose in Liu et al. ([2020](#bib.bib78)).
    The PIDL models hold a lot of potential because several drawbacks of deep learning
    models can be addressed. The PIDL models are more robust to missing data, noise,
    overfitting and might help in making deep learning models interpretable. However,
    the PIDL research in transportation is still at a nascent stage with very few
    papers and has not been covered in this survey. The interested reader is referred
    to Shi et al. ([2021](#bib.bib111)), who used data from the Next Generation SIMulation [(NGSIM)](https://ops.fhwa.dot.gov/trafficanalysistools/ngsim.htm)
    dataset from the US Department of Transportation and proposed a PIDL model with
    two components, one data-driven and the other, model-driven. The influence of
    each component in the training process can be controlled using a single parameter.
    In related work, Shi et al. ([2021](#bib.bib110)) used a hybrid PIDL model on
    the same dataset to estimate the parameters of the second order partial differential
    equations governing traffic flow. Other recent efforts using PIDL are: Huang and
    Agarwal ([2020](#bib.bib56)), who present a detailed comparison between DL and
    PIDL models and report that PIDL models are faster to train ($>$50% faster) and
    perform better than other DL models when the sensor locations are fixed, Wang
    et al. ([2020](#bib.bib135)) who proposed a PIDL model called [Turbulent-Flow
    Net](https://github.com/Rose-STL-Lab/Turbulent-Flow-Net) for predicting turbulent
    traffic flow and Mo et al. ([2020](#bib.bib86)), who used a PIDL model to learn
    the dynamics of car-following models. To summarise, these efforts demonstrate
    promising avenues for further research into the synergies between model-based
    and data-driven techniques.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 深度学习模型越来越多地被用来学习复杂网络非线性动态背后的物理学。这些模型通常在“物理知识驱动的深度学习”（PIDL）的范畴下进行研究。PIDL的概念有两个动机。首先，PIDL使我们能够利用先前的领域知识来对深度学习模型所近似的函数进行正则化，从而减少过拟合（Raissi
    et al., [2017a](#bib.bib97)）。其次，PIDL可以用来从数据中发现新的偏微分方程（Raissi et al., [2017b](#bib.bib98)）。在交通领域应用PIDL模型时，微观交通模拟器通常在这些模型的训练过程中扮演重要角色。由于设计上的原因，交通模拟器尊重交通流动态，因此可以用于对神经网络的交通状态预测进行正则化。例如，Liu
    et al. ([2020](#bib.bib78))在此目的上使用了SUMO。PIDL模型具有很大的潜力，因为可以解决深度学习模型的几个缺陷。PIDL模型对缺失数据、噪声和过拟合更具鲁棒性，并可能有助于使深度学习模型具有可解释性。然而，交通领域的PIDL研究仍处于初期阶段，相关论文很少，本次调查未涉及。感兴趣的读者可以参考Shi
    et al. ([2021](#bib.bib111))，他们使用了来自美国交通部的下一代模拟（[NGSIM](https://ops.fhwa.dot.gov/trafficanalysistools/ngsim.htm)）数据集，并提出了一个具有两个组件的PIDL模型，一个是数据驱动的，另一个是模型驱动的。可以通过一个参数来控制每个组件在训练过程中的影响。在相关工作中，Shi
    et al. ([2021](#bib.bib110))使用了一个混合PIDL模型来估计控制交通流的二阶偏微分方程的参数。其他近期使用PIDL的努力包括：Huang
    and Agarwal ([2020](#bib.bib56))，他们详细比较了DL和PIDL模型，并报告了PIDL模型在传感器位置固定时的训练速度更快（>50%更快），且表现优于其他DL模型；Wang
    et al. ([2020](#bib.bib135))提出了一种名为[Turbulent-Flow Net](https://github.com/Rose-STL-Lab/Turbulent-Flow-Net)的PIDL模型，用于预测湍流交通流；Mo
    et al. ([2020](#bib.bib86))使用了PIDL模型来学习车-following模型的动态。总之，这些努力展示了在基于模型和数据驱动技术之间的协同效应方面进一步研究的有希望的途径。
- en: 3 Previous surveys and organisation of this survey
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3 之前的调查和本次调查的组织结构
- en: 'The nonlinear activation functions in deep neural networks can capture the
    nonlinearities in the traffic data (Polson and Sokolov, [2017](#bib.bib95)). As
    discussed in [section 2.1](#S2.SS1 "2.1 Relevant concepts and terms in deep learning
    ‣ 2 Preliminaries ‣ Applications of deep learning in congestion detection, prediction
    and alleviation: A survey"), the depth of the network enables us to model high-level
    features in the data. Traffic data are characterised by variations over space
    and time. Two specialised neural network architectures, CNN and RNN (also discussed
    in [2.1](#S2.SS1 "2.1 Relevant concepts and terms in deep learning ‣ 2 Preliminaries
    ‣ Applications of deep learning in congestion detection, prediction and alleviation:
    A survey")) are very helpful in capturing these variations. CNNs are useful while
    modelling spatial inter-dependencies whereas RNNs are useful while modelling temporal
    variations in the data. During the course of our literature review, we found that
    most of the successful neural network architectures for traffic prediction were
    designed using CNN and RNN units as building blocks.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '深度神经网络中的非线性激活函数可以捕捉交通数据中的非线性（Polson和Sokolov，[2017](#bib.bib95)）。如在[2.1节](#S2.SS1
    "2.1 Relevant concepts and terms in deep learning ‣ 2 Preliminaries ‣ Applications
    of deep learning in congestion detection, prediction and alleviation: A survey")中讨论的，网络的深度使我们能够对数据中的高级特征进行建模。交通数据的特点是空间和时间上的变化。两种专门的神经网络架构，CNN和RNN（也在[2.1节](#S2.SS1
    "2.1 Relevant concepts and terms in deep learning ‣ 2 Preliminaries ‣ Applications
    of deep learning in congestion detection, prediction and alleviation: A survey")中讨论）在捕捉这些变化方面非常有帮助。CNN在建模空间相互依赖时很有用，而RNN在建模数据中的时间变化时很有用。在我们的文献综述过程中，我们发现大多数成功的交通预测神经网络架构是使用CNN和RNN单元作为构建块设计的。'
- en: An extensive summary of deep neural networks in various aspects of transportation
    systems is presented in  Wang et al. ([2019](#bib.bib137)). They cover a wide
    range of traffic related prediction tasks using deep neural networks – traffic
    signal identification, traffic variables prediction, congestion identification
    and traffic signal control. Nguyen et al. ([2018](#bib.bib92)) also cover the
    aforementioned tasks and add three other tasks to the list, viz. travel demand
    prediction, traffic incident prediction and driver behavior prediction. Wang et al.
    ([2020](#bib.bib136)) surveyed the applications of deep learning in various domains
    which use spatio-temporal data (transportation, human mobility, crime analysis,
    neuroscience and location-based social networks). Their review comprises recent
    papers dealing with deep learning methods for tasks such as traffic variables
    prediction, trajectory classification, trajectory prediction, and travel mode
    inference. Wu et al. ([2020](#bib.bib144)) present a taxonomic survey of Graph
    Neural Networks (GNN) and highlight the applications of GNNs in different fields,
    including transportation. Xie et al. ([2020](#bib.bib146)) summarise various approaches
    where deep learning was used for the most common types of flows in a city – crowd
    flows, bike flows, and traffic flows.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: Wang等人（[2019](#bib.bib137)）提供了对深度神经网络在交通系统各个方面的广泛总结。他们涵盖了使用深度神经网络进行的一系列交通相关预测任务——交通信号识别、交通变量预测、拥堵识别和交通信号控制。Nguyen等人（[2018](#bib.bib92)）也涵盖了上述任务，并将旅行需求预测、交通事件预测和驾驶员行为预测三个任务添加到列表中。Wang等人（[2020](#bib.bib136)）调查了深度学习在使用时空数据的各个领域中的应用（交通、人类流动、犯罪分析、神经科学和基于位置的社交网络）。他们的综述包括了处理诸如交通变量预测、轨迹分类、轨迹预测和旅行方式推断等任务的深度学习方法的近期论文。Wu等人（[2020](#bib.bib144)）介绍了图神经网络（GNN）的分类调查，并强调了GNN在包括交通在内的不同领域的应用。Xie等人（[2020](#bib.bib146)）总结了使用深度学习处理城市中最常见类型流量——人群流量、自行车流量和交通流量的各种方法。
- en: '![Refer to caption](img/c109376185f2337654c2acaa44f366f1.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![参考说明](img/c109376185f2337654c2acaa44f366f1.png)'
- en: 'Figure 8: Overall flowchart showing various sections of the survey. The question
    mark denotes the potential link between non-recurring and recurring congestion
    alleviation'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图8：总体流程图显示了调查的各个部分。问号表示非重复性和重复性拥堵缓解之间的潜在联系。
- en: 'Congestion prediction refers to the prediction of traffic state variables when
    congestion is imminent. It is a special case of traffic prediction. The relative
    difficulty of congestion prediction tasks in comparison to traffic prediction
    can be attributed to the instability of the traffic dynamics beyond the point
    of maximum flow (Chung, [2011](#bib.bib20)). This higher relative difficulty is
    also obvious from the fact that the performance of a typical traffic prediction
    model degrades as the state of traffic approaches. The importance of deep learning
    for congestion prediction is also due to the relatively higher stability of deep
    learning models compared to other data-driven approaches (Yu et al., [2017](#bib.bib150)).
    To the best of our knowledge, a comprehensive survey paper covering the applications
    of deep learning in congestion-related prediction tasks does not exist. This survey
    paper is an attempt to bridge this gap in the literature. We discuss the applications
    of deep learning in the detection, prediction and alleviation of both types of
    congestion – recurring and non-recurring. The section on congestion prediction
    is not differentiated into recurring and non-recurring cases because the deep
    learning models which detect congestion from traffic images, detect both types
    of congestion. Whenever possible, we have attempted to incorporate the challenges
    from a policymaker’s point of view. The inclusion of the policymaker’s outlook
    is important in order to make research outputs deployable in a real world setting.
    The scope of the current survey is presented in [Figure 8](#S3.F8 "Figure 8 ‣
    3 Previous surveys and organisation of this survey ‣ Applications of deep learning
    in congestion detection, prediction and alleviation: A survey").'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '拥堵预测是指在拥堵临近时对交通状态变量的预测。这是交通预测的一个特殊情况。与交通预测相比，拥堵预测任务的相对难度可以归因于在最大流量点之后交通动态的不稳定性（Chung，[2011](#bib.bib20)）。这一较高的相对难度也可以从典型交通预测模型的表现退化来看出，当交通状态接近拥堵时。深度学习在拥堵预测中的重要性也在于深度学习模型相对于其他数据驱动方法的相对较高稳定性（Yu
    等，[2017](#bib.bib150)）。据我们所知，目前尚不存在涵盖深度学习在拥堵相关预测任务中的应用的综合调查论文。这篇调查论文试图弥补文献中的这一空白。我们讨论了深度学习在检测、预测和缓解两种类型拥堵——重复性和非重复性——中的应用。由于从交通图像中检测拥堵的深度学习模型可以检测这两种类型的拥堵，因此拥堵预测部分没有区分重复性和非重复性情况。我们尽可能地尝试从政策制定者的角度融入挑战。包括政策制定者的观点是为了使研究成果在实际环境中可部署。当前调查的范围见[图8](#S3.F8
    "Figure 8 ‣ 3 Previous surveys and organisation of this survey ‣ Applications
    of deep learning in congestion detection, prediction and alleviation: A survey")。'
- en: The key design aspects of the deep learning architecture and the key aspects
    of the dataset used in each paper have been summarised so the reader can refer
    to such papers when working on similar datasets. Some papers present an extensive
    sensitivity analysis of their models. We have reproduced and highlighted the crucial
    insights (if any) in the summary presented at the end of each subsection.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 深度学习架构的关键设计方面以及每篇论文中使用的数据集的关键方面已被总结，以便读者在处理类似数据集时参考这些论文。一些论文对其模型进行了广泛的敏感性分析。我们在每个小节结尾的总结中重现并突出显示了关键见解（如有）。
- en: Most research papers covered in this survey were published in the period 2016-2021\.
    Sometimes, in order to briefly discuss the background of some algorithm paradigms,
    we have referred to classical papers from the past.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 本调查中涵盖的大多数研究论文均发表于2016-2021年期间。有时，为了简要讨论某些算法范式的背景，我们参考了过去的经典论文。
- en: 4 Deep learning for congestion detection
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4 深度学习用于拥堵检测
- en: With increasing access to new data sources, new opportunities to automatically
    detect traffic congestion are being explored. Unlike the other two sections, the
    congestion detection models are not differentiated for recurring and non-recurring
    congestion. This is so because congestion detection models invariably detect both
    types of congestion irrespective of the causal factor behind them. They are instead
    differentiated on the basis of the data source used. The most commonly used sources
    to detect both types of congestion are images and videos obtained from traffic
    cameras.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 随着对新数据源的访问越来越广泛，自动检测交通拥堵的新机会正在被探索。与其他两个部分不同，拥堵检测模型并没有针对重复性和非重复性拥堵进行区分。这是因为拥堵检测模型无论因何种原因都会检测到这两种类型的拥堵。它们是根据所使用的数据源进行区分的。检测这两种类型拥堵最常用的数据源是来自交通摄像头的图像和视频。
- en: The benefit of using traffic camera images is that without exception, all vehicles
    are captured in the traffic image. Thus, other factors like penetration ratio
    (percentage of vehicles being tracked) do not need to be considered. With the
    increasing number of cameras on roads, the cognitive load on the human identifying
    congestion from the images is high. In order to reduce the cognitive load, deep
    learning has been widely applied for the automatic detection of congestion from
    traffic images. Deep learning models which are known to perform well for Computer
    Vision (CV) tasks have been adopted to detect traffic congestion. CV refers to
    the task of extracting useful information from images.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 使用交通摄像头图像的好处是，所有车辆都无一例外地被捕捉到。因此，不需要考虑渗透率（被跟踪车辆的百分比）等其他因素。随着道路上摄像头数量的增加，从图像中识别拥堵的认知负荷很高。为了减轻认知负荷，深度学习被广泛应用于从交通图像中自动检测拥堵。已知在计算机视觉（CV）任务中表现良好的深度学习模型已被用于检测交通拥堵。计算机视觉指的是从图像中提取有用信息的任务。
- en: 'Convolutional Neural Networks (CNNs) form the building block of commonly used
    deep learning architectures for image classification tasks. The seminal works
    in this field were: AlexNet (Krizhevsky et al., [2012](#bib.bib64)), InceptionNet
    (Szegedy et al., [2015](#bib.bib122)), Resnet (He et al., [2016](#bib.bib52)),
    R-CNN (Girshick et al., [2014](#bib.bib41)), Mask-RCNN (He et al., [2017](#bib.bib51)),
    VGGNet (Simonyan and Zisserman, [2014](#bib.bib114)), and YOLO (Redmon et al.,
    [2016](#bib.bib102)). Deep neural networks pre-trained on large image datasets
    like ImageNet (Lin et al., [2014a](#bib.bib74)) and COCO (Lin et al., [2014b](#bib.bib75))
    are readily available. Three approaches are possible when using well-known architectures
    for traffic image classification. When the number of traffic images in the dataset
    available at hand is very high (order of 10000 images), these models can be trained
    from scratch using the available data. When the dataset available is small, the
    weights for the adopted deep learning model are initialised to the available pre-trained
    model. The third approach is to retain the pre-trained model as it is and add
    another module in sequence. When applied to images, the deep learning models can
    be used to estimate the total number of vehicles in an image, thereby allowing
    us to estimate the traffic density. When applied to video data (a sequence of
    images), the deep learning models can be used to estimate traffic speed.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 卷积神经网络（CNNs）是常用的深度学习架构的基础，用于图像分类任务。该领域的开创性工作包括：AlexNet（Krizhevsky等，[2012](#bib.bib64)）、InceptionNet（Szegedy等，[2015](#bib.bib122)）、Resnet（He等，[2016](#bib.bib52)）、R-CNN（Girshick等，[2014](#bib.bib41)）、Mask-RCNN（He等，[2017](#bib.bib51)）、VGGNet（Simonyan和Zisserman，[2014](#bib.bib114)）和YOLO（Redmon等，[2016](#bib.bib102)）。在ImageNet（Lin等，[2014a](#bib.bib74)）和COCO（Lin等，[2014b](#bib.bib75)）等大型图像数据集上预训练的深度神经网络随时可用。使用知名架构进行交通图像分类时，有三种可能的方法。当手头的数据集中的交通图像数量非常高（约10000张图像）时，这些模型可以利用现有数据从头开始训练。当数据集较小时，采用的深度学习模型的权重会初始化为可用的预训练模型。第三种方法是保留预训练模型，并在其后添加另一个模块。在应用于图像时，深度学习模型可以用来估计图像中车辆的总数，从而估计交通密度。在应用于视频数据（图像序列）时，深度学习模型可以用来估计交通速度。
- en: Two variations of CNN based architectures (AlexNet and YOLO) are utilised (Chakraborty
    et al., [2018](#bib.bib16)) to detect congestion using a binary classification
    into traffic images collected from 121 cameras from Iowa, USA over a period of
    6 months. Manual labelling of traffic images into congestion and non-congestion
    labels is a time-consuming task. The authors, therefore use occupancy data obtained
    using vehicle loop detectors (VLDs) to automatically label the images into two
    classes based on occupancy ($\>20\%$ occupancy is labelled as ‘congested’). The
    reported accuracy for detecting congestion was 90.5% for AlexNet and 91.2% for
    YOLO respectively. Wang et al. ([2018](#bib.bib133)) compare two variations of
    AlexNet and VGGNet to detect congestion on traffic images obtained from more than
    100 cameras from Shaanxi province, China. Their dataset is highly varied- comprising
    images for day and night traffic and varying weather conditions. Their results
    show comparable performance for both architectures (78% for AlexNet compared to
    81% for VGGNet). They report that AlexNet is significantly faster to train due
    to the smaller size of the neural network. They use binary classification (‘jam’
    or ‘no jam’). Impedovo et al. ([2019](#bib.bib58)) compared the performance of
    YOLO and [Mask-RCNN](https://paperswithcode.com/media/methods/Screen_Shot_2020-05-23_at_7.44.34_PM.png)
    on three manually labelled datasets obtained from two traffic image data sources
    ([GRAM](http://agamenon.tsc.uah.es/Personales/rlopez/data/rtm/) and [Trafficdb](http://visal.cs.cityu.edu.hk/downloads/trafficdb/)).
    The three datasets are of varying image quality- first, comprising 23435 images
    at low resolution (480x320p), second, comprising 7520 frames at mid resolution
    (640x480p), and third comprising 9390 frames at high resolution (1280x720p). They
    achieve congestion detection in two steps. The first step focuses on identifying
    the number of vehicles in each frame. In this step, the Mask-RCNN achieves an
    accuracy of 46%, 89%, 91% respectively while YOLO achieves an accuracy of 82%,
    86%, 91% respectively. The performance of YOLO is resistant to the image quality
    and the training time is almost half of Mask-RCNN. They select YOLO as the object
    detector model and use its output as the input to the second step. In the second
    step, they use Resnet on the output of YOLO to predict traffic congestion as a
    multiclass classification task (3 classes). The reported accuracies for light,
    medium and heavy congestion are 99.7%, 97.2% and 95.9%.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 两种基于CNN的架构（AlexNet和YOLO）被用于检测交通拥堵（Chakraborty等人，[2018](#bib.bib16)），通过对从美国爱荷华州的121个摄像头收集的交通图像进行二分类。对交通图像进行手动标记为拥堵和非拥堵是一个耗时的任务。因此，作者使用通过车载环路探测器（VLDs）获得的占用数据来自动将图像标记为两类，根据占用率（占用率$>\
    20\%$被标记为“拥堵”）。检测拥堵的准确率分别为AlexNet 90.5%和YOLO 91.2%。Wang等人（[2018](#bib.bib133)）比较了AlexNet和VGGNet的两个变体，以检测来自中国陕西省100多个摄像头获得的交通图像中的拥堵情况。他们的数据集高度多样化——包括白天和夜晚的交通图像以及不同的天气条件。他们的结果显示两种架构的性能相当（AlexNet为78%，VGGNet为81%）。他们报告说，由于神经网络的尺寸较小，AlexNet的训练速度显著更快。他们使用二分类（‘拥堵’或‘无拥堵’）。Impedovo等人（[2019](#bib.bib58)）比较了YOLO和[Mask-RCNN](https://paperswithcode.com/media/methods/Screen_Shot_2020-05-23_at_7.44.34_PM.png)在从两个交通图像数据源（[GRAM](http://agamenon.tsc.uah.es/Personales/rlopez/data/rtm/)和[Trafficdb](http://visal.cs.cityu.edu.hk/downloads/trafficdb/)）获得的三个手动标记的数据集上的表现。这三个数据集的图像质量各异——第一组包含23435张低分辨率（480x320p）的图像，第二组包含7520帧中等分辨率（640x480p）的图像，第三组包含9390帧高分辨率（1280x720p）的图像。他们通过两步来实现拥堵检测。第一步专注于识别每帧中的车辆数量。在这一步中，Mask-RCNN的准确率分别为46%、89%、91%，而YOLO的准确率分别为82%、86%、91%。YOLO的性能对图像质量具有抗干扰性，并且训练时间几乎是Mask-RCNN的一半。他们选择YOLO作为目标检测模型，并将其输出作为第二步的输入。在第二步中，他们在YOLO的输出上使用Resnet，将交通拥堵预测作为多类分类任务（3类）。对于轻度、中度和重度拥堵，报告的准确率分别为99.7%、97.2%和95.9%。
- en: A CNN model is used in Kurniawan et al. ([2018](#bib.bib65)) in order to classify
    traffic images obtained in Jakarta, Indonesia. The data are collected for 15 days
    and 14 camera locations are used. They use manual labelling of the traffic images
    into ‘jammed’ and ‘not jammed’ classes. The reported average accuracy using 10-fold
    cross-validation is 89.5%. Rashmi and Shantala ([2020](#bib.bib101)) investigated
    the performance of YOLO when the traffic is highly heterogeneous. They collect
    one week of data from Karnataka India. They use transfer learning with a YOLO
    model pre-trained on the COCO dataset. While counting vehicles in the images,
    YOLO performs well (accuracy between 92% and 99%) for buses, cars and motorcycles
    but when predicting the modes of transport which are specific to the zone of study,
    the performance drops below any useful level.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Kurniawan等人（[2018](#bib.bib65)）使用CNN模型对从印度尼西亚雅加达获得的交通图像进行分类。数据收集持续了15天，并使用了14个摄像头位置。他们对交通图像进行手动标注，将其分为“拥堵”和“未拥堵”类别。使用10折交叉验证的报告平均准确率为89.5%。Rashmi和Shantala（[2020](#bib.bib101)）研究了YOLO在交通高度异质的情况下的表现。他们从印度卡纳塔克邦收集了一周的数据。他们使用了在COCO数据集上预训练的YOLO模型进行迁移学习。在图像中计数车辆时，YOLO在公交车、汽车和摩托车的准确率介于92%到99%之间，但在预测特定于研究区域的交通模式时，性能下降到任何有用的水平以下。
- en: 'Summary: We observe significant differences in the image quality based on the
    data source. This results in differences in the model performance. The traffic
    images obtained from developing countries present a major challenge due to the
    large heterogeneity of the traffic stream. Another major difference between datasets
    is that when alternate sources of data are present (such as VLDs), the labels
    for training data can be created automatically, instead of manual labelling. If
    the quality of the images obtained from traffic cameras is not high, deep learning
    based image super-resolution can be used for improvement. Image super-resolution
    refers to the task of increasing the resolution of input images. Deep learning
    based super-resolution has been widely researched in the computer vision community,
    but we are yet to see its applications in improving the quality of traffic images.
    A comprehensive survey on deep learning applications for image super-resolution
    is presented in Wang et al. ([2020](#bib.bib138)). Another potential avenue for
    improvement in congestion detection from cameras is deep learning based video
    frame rate increment (Jiang et al., [2018](#bib.bib60)).'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 摘要：我们观察到基于数据源的图像质量存在显著差异，这导致模型性能的差异。来自发展中国家的交通图像由于交通流的高度异质性而呈现出主要挑战。数据集之间的另一个主要差异是，当存在替代数据源（如VLDs）时，可以自动创建训练数据的标签，而不是手动标注。如果从交通摄像头获得的图像质量不高，可以使用基于深度学习的图像超分辨率进行改善。图像超分辨率指的是提高输入图像分辨率的任务。基于深度学习的超分辨率在计算机视觉领域已经得到了广泛研究，但我们尚未看到其在提高交通图像质量方面的应用。Wang等人（[2020](#bib.bib138)）提供了关于深度学习应用于图像超分辨率的综合调查。另一个改善摄像头拥堵检测的潜在途径是基于深度学习的视频帧率增量（Jiang等人，[2018](#bib.bib60)）。
- en: 5 Deep learning for congestion prediction
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5 深度学习用于拥堵预测
- en: 5.1 Deep learning for recurring congestion prediction
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.1 用于预测重复拥堵的深度学习
- en: 'Recurring congestion occurs due to infrastructural bottlenecks, which are insufficient
    to handle the peak demand. By definition, recurring congestion occurs at familiar
    locations in the network. In the light of this definition, the specific task while
    predicting recurring congestion is the prediction of daily variations in the time
    of occurrence and the severity of recurring congestion. The most commonly used
    congestion prediction task is binary classification (‘jam’ or ‘no jam’). Some
    papers predict congestion as a multiclass classification task (‘light’, ‘medium’
    and ‘heavy’ congestion). It should be noted that some papers included in this
    section did not predict traffic congestion but instead focused on short-term traffic
    prediction as a regression task (predicting speed, density, flow, queue length
    etc.). Such papers have been included if their model performance was reported
    to be stable when the state of traffic approaches congestion. For each paper listed
    here, we have reported the key aspects of their performance metric and the key
    takeaways from their sensitivity analyses. The papers discussed in this subsection
    are summarised in [Table 1](#S5.T1 "Table 1 ‣ 5.1 Deep learning for recurring
    congestion prediction ‣ 5 Deep learning for congestion prediction ‣ Applications
    of deep learning in congestion detection, prediction and alleviation: A survey").'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '反复发生的拥堵是由于基础设施瓶颈造成的，这些瓶颈不足以应对高峰需求。根据定义，反复发生的拥堵发生在网络中的熟悉位置。基于这个定义，预测反复发生的拥堵时的具体任务是预测发生时间的日常变化以及拥堵的严重程度。最常用的拥堵预测任务是二分类（‘拥堵’或‘无拥堵’）。一些论文将拥堵预测作为多类分类任务（‘轻度’、‘中度’和‘重度’拥堵）。需要注意的是，本节中一些论文并没有预测交通拥堵，而是将短期交通预测作为回归任务（预测速度、密度、流量、排队长度等）。如果这些论文的模型性能在交通状态接近拥堵时被报告为稳定，则被纳入讨论。在这里列出的每篇论文中，我们报告了其性能指标的关键方面以及敏感性分析的主要结论。讨论的论文总结在[表1](#S5.T1
    "Table 1 ‣ 5.1 Deep learning for recurring congestion prediction ‣ 5 Deep learning
    for congestion prediction ‣ Applications of deep learning in congestion detection,
    prediction and alleviation: A survey")中。'
- en: 'Using LSTM models: An LSTM model is used in Yu et al. ([2017](#bib.bib150))
    to predict traffic speed during peak hours. They use vehicle loop detector (VLD)
    speed recordings from the publicly available [Caltrans](https://dot.ca.gov/programs/traffic-operations/mpr/pems-source)
    dataset from California, USA and attempt to predict the next hour traffic speed
    at each sensor location. When predicting the traffic speed during peak hours,
    their LSTM model is reported to achieve a MAPE of 5%. An important observation
    from their study is that timestamp features (encoded values for the time of day
    and day of the week) significantly improve the prediction performance during the
    peak hour. This practice of incorporating timestamps has been adopted in papers
    that appeared later. In this paper, each VLD is modelled separately. In the subsequent
    papers, researchers have developed techniques to incorporate spatial information
    into the LSTM models and hence propose a single model for predicting congestion
    at several intersections at the same time. Rahman and Hasan ([2020](#bib.bib96))
    use an LSTM model to predict the queue lengths at intersections by incorporating
    the spatial information in an efficient manner. In order to predict the queue
    length at a query intersection for the next traffic cycle (red signal), their
    model takes as input the queue lengths of the query intersections and two upstream
    intersections at the current cycle. They then attempt to predict the queue length
    at the query intersection for the next cycle. They use VLD data collected at 11
    intersections for a period of three months in Orlando, Florida. When predicting
    queue lengths, they report an average RMSE close to one (as inferred from their
    plot).'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 LSTM 模型：Yu 等人（[2017](#bib.bib150)）在高峰时段使用 LSTM 模型来预测交通速度。他们使用来自美国加州公开提供的
    [Caltrans](https://dot.ca.gov/programs/traffic-operations/mpr/pems-source) 数据集的车辆环路检测器（VLD）速度记录，并尝试预测每个传感器位置的下一个小时交通速度。在预测高峰时段的交通速度时，他们的
    LSTM 模型报告的平均绝对百分比误差（MAPE）为 5%。他们研究中的一个重要观察是，时间戳特征（一天中的时间和一周中的一天的编码值）显著提高了高峰时段的预测性能。这种结合时间戳的做法已被后来出现的论文采纳。在这篇论文中，每个
    VLD 被单独建模。在随后的论文中，研究人员开发了将空间信息融入 LSTM 模型的技术，从而提出了一个用于同时预测多个交叉口拥堵的单一模型。Rahman 和
    Hasan（[2020](#bib.bib96)）使用 LSTM 模型通过有效地整合空间信息来预测交叉口的排队长度。为了预测查询交叉口在下一个交通周期（红灯信号）的排队长度，他们的模型以查询交叉口及当前周期内两个上游交叉口的排队长度作为输入。然后，他们尝试预测查询交叉口在下一个周期的排队长度。他们使用在佛罗里达州奥兰多收集的
    11 个交叉口为期三个月的 VLD 数据。在预测排队长度时，他们报告的平均均方根误差（RMSE）接近于一（从他们的图表推断）。
- en: 'Comparing LSTM and CNN: A comparison of the performances of convolutional neural
    networks (CNNs) and recurrent neural networks (RNNs) for predicting traffic congestion
    is presented in Sun et al. ([2019](#bib.bib121)). Their dataset comprises 28 days
    of GPS-trajectories of 2000 taxis in Chengdu, China. They used map matching to
    map the GPS trajectories to road segments and calculate average speed during 5-minute
    time slots for each segment. They then use the average speed values to define
    four congestion levels based on the average traffic speed. The reported RMSE for
    the average speed prediction for their best models is 3.96 km/h. The classification
    accuracy is then reported for the predicted level of congestion. They conclude
    that, given a sufficiently long input horizon (90 minutes), the performance of
    CNN models is as good as recurrent network models. We believe this is an important
    observation for two reasons. First, since the CNN models are faster to train because
    by construction they support GPU parallelisation in a more efficient way, it can
    save time on the part of researchers if CNNs are explored as a modelling option
    before exploring LSTMs. Second, since LSTMs are typically used to capture long-term
    dependencies in traffic data when used independently, they might not be very useful
    for short-term traffic prediction. The following papers in this subsection use
    combinations of CNNs and RNNs to design specialised architectures.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 比较LSTM和CNN：Sun等人（[2019](#bib.bib121)）展示了卷积神经网络（CNNs）和递归神经网络（RNNs）在预测交通拥堵方面的性能比较。他们的数据集包含了中国成都2000辆出租车在28天内的GPS轨迹。他们使用地图匹配将GPS轨迹映射到道路段，并计算每个段在5分钟时间段内的平均速度。然后，他们使用这些平均速度值来定义基于平均交通速度的四个拥堵等级。对于其最佳模型，报告的平均速度预测均方根误差（RMSE）为3.96
    km/h。随后报告了预测的拥堵等级的分类准确率。他们得出结论，考虑到足够长的输入时间范围（90分钟），CNN模型的表现与递归网络模型一样好。我们认为这是一个重要的观察，原因有二。首先，由于CNN模型在训练时更快，因为它们在结构上以更高效的方式支持GPU并行化，如果在探索LSTM之前将CNN作为建模选项进行探索，可以节省研究人员的时间。其次，由于LSTM通常用于捕捉交通数据中的长期依赖关系，当独立使用时，它们可能对短期交通预测不太有用。本小节中的以下论文使用CNN和RNN的组合来设计专门的架构。
- en: Using a combination of LSTM and CNN: Liu et al. ([2017](#bib.bib79)) present [Conv-LSTM](https://ieeexplore.ieee.org/mediastore_new/IEEE/content/media/8123608/8170872/8171119/8171119-fig-3-source-small.gif),
    which is composed of CNN and LSTM units. The convolution operations are used to
    capture the spatial dependencies. The output of convolution operations is used
    as inputs to the LSTM units. While using their Conv-LSTM model to predict traffic
    flow, they achieve a MAPE of 9.53%. Additionally, they include a bi-directional
    LSTM module to include the effects of historical data and achieve a lower MAPE
    of 6.98%. The performance is reported to be stable across varying levels of traffic
    flow, hence we have included their paper as a congestion prediction model. Ranjan
    et al. ([2020](#bib.bib100)) predict city wide traffic heat maps for three prediction
    horizons of 10, 30, and 60 minutes. Since the input and output heat maps have
    the same dimensions, they propose a symmetric U-shaped architecture with CNN blocks
    at both ends (inputs and output ends). The bottleneck layer (at the highest depth)
    is made up of four LSTM units and skip connections are used to connect the CNN
    outputs at various depths. The proposed architecture is called [PredNet](https://www.researchgate.net/profile/Navin-Ranjan/publication/341062590/figure/fig4/AS:895246355398656@1590454772095/PredNet-model-architecture-a-The-model-is-divided-into-three-sections-section-A-is.png).
    The dataset consists of traffic heat maps based on space mean traffic speed collected
    from Seoul, S. Korea. The temporal resolution of their data is 5 minutes. Congestion
    is defined as a three-level variable based on the average speed of traffic. They
    report the performance of PredNet to be stable with the increasing lengths of
    output horizon. When predicting congestion 60 minutes into the future, PredNet
    achieves a mean accuracy of 84.2% (compared to 75.67% when Conv-LSTM is used on
    the same data). PredNet is also reported to be significantly faster to train ($\scriptstyle\sim$8
    times faster) compared to the Conv-LSTM model discussed previously in this paragraph.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 LSTM 和 CNN 的组合：刘等人 ([2017](#bib.bib79)) 提出了[Conv-LSTM](https://ieeexplore.ieee.org/mediastore_new/IEEE/content/media/8123608/8170872/8171119/8171119-fig-3-source-small.gif)，该模型由
    CNN 和 LSTM 单元组成。卷积操作用于捕捉空间依赖关系。卷积操作的输出被用作 LSTM 单元的输入。在使用他们的 Conv-LSTM 模型预测交通流量时，他们达到了
    9.53% 的 MAPE。此外，他们还包含了一个双向 LSTM 模块，以纳入历史数据的影响，并实现了更低的 MAPE，即 6.98%。报告显示，该模型在不同交通流量水平下表现稳定，因此我们将他们的论文作为拥堵预测模型纳入其中。Ranjan
    等人 ([2020](#bib.bib100)) 预测了 10、30 和 60 分钟三个预测时间段内的城市交通热力图。由于输入和输出热力图具有相同的维度，他们提出了一种对称的
    U 形架构，在两端（输入端和输出端）都有 CNN 块。瓶颈层（在最高深度处）由四个 LSTM 单元组成，跳跃连接用于连接不同深度的 CNN 输出。该架构被称为[PredNet](https://www.researchgate.net/profile/Navin-Ranjan/publication/341062590/figure/fig4/AS:895246355398656@1590454772095/PredNet-model-architecture-a-The-model-is-divided-into-three-sections-section-A-is.png)。数据集包括基于空间平均交通速度的交通热力图，数据收集自韩国首尔。其数据的时间分辨率为
    5 分钟。拥堵被定义为基于交通平均速度的三级变量。他们报告说，PredNet 的性能在输出时间段长度增加时保持稳定。在预测 60 分钟后的拥堵时，PredNet
    实现了 84.2% 的平均准确率（相比之下，使用 Conv-LSTM 在相同数据上的准确率为 75.67%）。与前述的 Conv-LSTM 模型相比，PredNet
    的训练速度也被报告为显著更快（约为 8 倍）。
- en: 'Special focus on the heterogeneity of the road network: Some papers have highlighted
    the differences in the complexity of the congestion prediction task based on the
    heterogeneity of the road network. Such observations are particularly reported
    when the congestion prediction is attempted at large parts of the network for
    multiple time steps. Shin et al. ([2020](#bib.bib112)) use a three-layered LSTM
    network to predict the congestion levels in data collected from urban and suburban
    areas in and around Seoul, South Korea. The total number of road links was 1630
    and the data were collected for one month at a resolution of 5 minutes. The dataset
    had 33% of the records missing. In order to handle the missing data, they propose
    a trend-filtering based spatio-temporal outlier detection and data correction
    algorithm. The model predicts traffic speeds but outputs congestion levels based
    on thresholds recommended by the local policy-making authority. The model performance
    is stable across the entire range of traffic speeds, hence we have included their
    work as a congestion prediction model. They report differences in the performance
    of the model when predicting traffic speed for two different types of road networks
    around Seoul (MAPE of 4.297% for suburban vs MAPE of 6.087% for urban roads).
    The mean absolute error (MAE) however, was higher for some suburban roads compared
    to urban roads (urban: 2.54 km/h, suburban: 2.78km/h). They acknowledge that high
    MAE error for suburban roads, is in fact, misleading because the average speeds
    for suburban roads are higher. The takeaway from their paper is that while applying
    deep learning for predicting congestion, different types of roads present different
    complexity.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 特别关注道路网络的异质性：一些论文强调了基于道路网络异质性的拥堵预测任务复杂性差异。当尝试对网络大部分区域进行多时间步的拥堵预测时，这种观察特别被报告。Shin等人（[2020](#bib.bib112)）使用了一个三层LSTM网络来预测从韩国首尔及其周边城市和郊区收集的数据中的拥堵水平。道路链接的总数为1630个，数据采集周期为一个月，分辨率为5分钟。数据集中有33%的记录缺失。为了处理缺失数据，他们提出了一种基于趋势过滤的时空离群点检测和数据修正算法。该模型预测交通速度，但根据地方政策制定机构推荐的阈值输出拥堵水平。模型在整个交通速度范围内表现稳定，因此我们将他们的工作纳入了拥堵预测模型中。他们报告了在预测首尔周围两种不同类型道路的交通速度时模型表现的差异（郊区道路的MAPE为4.297%，城市道路的MAPE为6.087%）。然而，均方误差（MAE）在一些郊区道路上高于城市道路（城市：2.54
    km/h，郊区：2.78 km/h）。他们承认，郊区道路的高MAE误差实际上具有误导性，因为郊区道路的平均速度更高。他们论文的主要结论是，尽管应用深度学习来预测拥堵，不同类型的道路呈现出不同的复杂性。
- en: Cheng et al. ([2018](#bib.bib18)) propose a specialised [architecture](https://d3i71xaburhd42.cloudfront.net/56f17fa9a094e80f3e5e47311f2f31613d48e7b0/4-Figure4-1.png)
    built using CNNs, RNNs and an attention mechanism to predict congestion levels.
    Their dataset, called [MapBJ](https://github.com/cxysteven/MapBJ) consists of
    4 months of data collected at 349 road links in Beijing at a temporal resolution
    of 5 minutes. Each road link is labelled into one of the four congestion levels
    (fluency, slow, congestion, extreme congestion), based on a speed-limit normalised
    variable called ‘limit level’. The exact mathematical representation of the ‘limit
    level’ is not presented, however, the idea is similar to using a ratio of the
    actual speed to the speed limit, given by ($\frac{average~{}speed}{speed~{}limit}$).
    The road network is converted to a representative graph with road links being
    represented as vertices and intersections as edges. The upstream and downstream
    vertices of the target vertex are grouped by vertex order. The input traffic conditions
    from different groups of vertices are used as inputs to the CNN module, followed
    by the RNN module. Thereafter, an attention model is used to assign different
    weights to different groups of vertices. The separate modules for upstream and
    downstream roads allow insights into the effects of upstream and downstream links
    on the congestion prediction at the target link. While predicting congestion state
    60 minutes into the future, higher weights are observed for higher-order downstream
    neighbours. On the other hand, lower weights are observed for higher-order upstream
    neighbours. Such analyses provide useful insights into the demand and the flow
    of traffic. They use a metric called quadratic weighted Kappa (QWK) (Ben-David,
    [2008](#bib.bib12)). They report an average QWK of around 0.6\. They report QWK
    values to be 0.69, 0.63, 0.57 and 0.52 for predicting at 15, 30, 45 and 60 minutes
    respectively. For comparison, the QWK for a stacked autoencoder model was 0.68,
    0.62, 0.56 and 0.49 for predicting at 15, 30, 45 and 60 minutes respectively.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: Cheng 等人 ([2018](#bib.bib18)) 提出了一个专门的[架构](https://d3i71xaburhd42.cloudfront.net/56f17fa9a094e80f3e5e47311f2f31613d48e7b0/4-Figure4-1.png)，该架构使用
    CNN、RNN 和注意力机制来预测拥堵水平。他们的数据集称为[MapBJ](https://github.com/cxysteven/MapBJ)，包含了在北京
    349 条道路链上收集的 4 个月的数据，时间分辨率为 5 分钟。每条道路链根据一个称为‘限制水平’的速度限制归一化变量被标记为四个拥堵等级中的一个（流畅、缓慢、拥堵、极度拥堵）。虽然没有提供‘限制水平’的具体数学表示，但其思想类似于使用实际速度与速度限制的比率（$\frac{average~{}speed}{speed~{}limit}$）。道路网络被转换为一个代表性图，其中道路链被表示为顶点，交叉口被表示为边。目标顶点的上游和下游顶点按顶点顺序分组。来自不同顶点组的输入交通条件被用作
    CNN 模块的输入，随后进入 RNN 模块。之后，使用注意力模型为不同的顶点组分配不同的权重。上游和下游道路的单独模块可以洞察上游和下游链路对目标链路拥堵预测的影响。在预测未来
    60 分钟的拥堵状态时，较高阶的下游邻居观察到更高的权重。另一方面，较高阶的上游邻居观察到较低的权重。这些分析提供了关于需求和交通流量的有用见解。他们使用了一个称为二次加权
    Kappa (QWK) 的指标 (Ben-David, [2008](#bib.bib12))。他们报告了平均 QWK 约为 0.6。他们报告了 15、30、45
    和 60 分钟预测的 QWK 值分别为 0.69、0.63、0.57 和 0.52。作为比较，堆叠自编码器模型的 QWK 值在 15、30、45 和 60
    分钟的预测中分别为 0.68、0.62、0.56 和 0.49。
- en: Large-scale recurring congestion prediction (Congestion propagation) Congestion
    propagation can be understood as a special case of congestion prediction. It is
    the study of the evolution of congestion in a larger part of the network than
    what is usually covered by congestion prediction models. Congestion propagation
    can be studied under the same heading as congestion prediction. However, during
    the literature search for this survey, we observed that special challenges are
    encountered when deep learning models are used to predict traffic congestion for
    the entire network.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 大规模重复拥堵预测（拥堵传播） 拥堵传播可以被理解为拥堵预测的一个特例。它是对比通常由拥堵预测模型覆盖的网络较大部分中拥堵演变的研究。拥堵传播可以在与拥堵预测相同的标题下进行研究。然而，在本次调查的文献搜索过程中，我们观察到，当深度学习模型用于预测整个网络的交通拥堵时，会遇到特殊的挑战。
- en: A specialised architecture called [DCRNN](https://i.loli.net/2019/04/23/5cbec05ce557e.png)
    was proposed in Li et al. ([2017a](#bib.bib72)) in order to predict traffic flow
    for several time steps (15 minutes, 30 minutes and 1 hour). The dataset used is [PeMS](https://dot.ca.gov/programs/traffic-operations/mpr/pems-source).
    The model performance is unchanged during peak hours and under varying levels
    of flow, hence this paper has been included as a congestion prediction model.
    DCRNN consists of an encoder and a decoder component. The encoder takes traffic
    flow data with spatial parameters encoded into a graph and outputs hidden states.
    The decoder attempts to predict the next-step traffic flow, either using the hidden
    states from the encoder with a probability $\rho$, or using the ground truth data
    with a probability ($1-\rho$). At the start of the training, the value of $\rho$
    is close to 1 and is decreased to 0 by the end of the training. The reported MAPE
    are 2.9%, 3.9% and 4.9% for 15, 30 and 60 minutes respectively. Andreoletti et al.
    ([2019](#bib.bib6)) also used a DCRNN model to predict congestion as a binary
    classification task based on traffic density. The threshold for binary classification
    is defined using road link specific load factors ($\alpha$). The load factor ($\alpha$)
    for a link is defined as the ratio of current traffic density to that of the average
    traffic density ($\alpha=\frac{{current}~{}{traffic}~{}{density}}{{average}~{}{traffic}~{}{density}}$).
    The reported congestion prediction accuracy is 96.67% when $\alpha$ is set to
    3\. At high values of $\alpha$, the rate of false negatives (FN) increases. A
    high value of alpha implies that only very high traffic density is classified
    as congestion. A value of $\alpha=3$ appears to be optimum with a false negative
    rate of 2.4%. The optimal choice of threshold in order to achieve better generalisation
    of deep learning models has been explored further in papers that appeared later
    on.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 一种名为[DCRNN](https://i.loli.net/2019/04/23/5cbec05ce557e.png)的专用架构在Li等人（[2017a](#bib.bib72)）中提出，用于预测多个时间步（15分钟、30分钟和1小时）的交通流量。使用的数据集为[PeMS](https://dot.ca.gov/programs/traffic-operations/mpr/pems-source)。该模型在高峰时段和不同流量水平下的性能保持不变，因此该论文被纳入了拥堵预测模型。DCRNN包括一个编码器和一个解码器组件。编码器将交通流量数据与空间参数编码成图，并输出隐藏状态。解码器尝试预测下一步的交通流量，使用编码器的隐藏状态的概率为$\rho$，或使用实际数据的概率为($1-\rho$)。在训练开始时，$\rho$的值接近1，并在训练结束时降低至0。报告的MAPE分别为15、30和60分钟的2.9%、3.9%和4.9%。Andreoletti等人（[2019](#bib.bib6)）还使用DCRNN模型将拥堵预测作为基于交通密度的二分类任务。二分类的阈值使用道路链路特定的负荷因子($\alpha$)来定义。链路的负荷因子($\alpha$)定义为当前交通密度与平均交通密度的比率($\alpha=\frac{{current}~{}{traffic}~{}{density}}{{average}~{}{traffic}~{}{density}}$)。当$\alpha$设置为3时，报告的拥堵预测准确率为96.67%。在高$\alpha$值下，假阴性（FN）的比例增加。高$\alpha$值意味着只有非常高的交通密度才被分类为拥堵。$\alpha=3$的值似乎是最佳的，假阴性率为2.4%。在后来出现的论文中，进一步探讨了为实现深度学习模型更好泛化的最佳阈值选择。
- en: Ma et al. ([2015](#bib.bib80)) used a Restricted Boltzmann Machine (RBM) combined
    with a recurrent neural network (RNN) model to predict the evolution of congestion.
    The dataset comprises GPS-trajectories of taxis plying on 515 road links in Ningbo,
    China. They use a network-wide threshold on traffic speed to determine whether
    the predicted traffic speed implies congestion. They report an average accuracy
    of 88.2%. An interesting observation from their sensitivity analysis is that an
    increase in the threshold degrades the model performance. They hypothesise that
    this might be due to the higher fluctuations in the congestion propagation patterns
    when a higher percentage of road links fall into the congested category. Fouladgar
    et al. ([2017](#bib.bib32)) used the [PeMS](https://dot.ca.gov/programs/traffic-operations/mpr/pems-source)
    dataset from California and proposed a distributed network where each intersection
    of the road network was modelled using a separate deep learning model. They used
    a combination of CNN and RNN architectures to predict the congestion levels. In
    order to binarise congestion, they introduced node-specific thresholds, instead
    of a network-wide universal threshold, thereby giving their model more expressive
    power compared to (Ma et al., [2015](#bib.bib80)). The node-specific thresholds
    are defined using the ratio of the average speed to the speed limit (${threshold}=\frac{{average~{}speed}}{{speed~{}limit}}$).
    The sensitivity analysis of their model revealed a drop in the model’s performance
    as the congestion levels increase. They hypothesise that this drop is due to class
    imbalance (high number of data points for non-congested cases). They attempted
    to remedy this drop by preferentially weighing the data points where congestion
    was high. The preferential weighting is achieved by modifying their mean squared
    error loss function to include a penalty ($w_{i}*\beta_{i}$) for each data point
    $i$. The difference between the predicted flow and the ground truth is $\beta_{i}$
    . The value of $w_{i}$ is equal to 1 if the traffic flow for data point $i$ is
    less than $0.5*(max~{}flow)$ and $0$ otherwise. The $\beta$ value is a measure
    of the prediction error. Now, using the variable $w_{i}$, the model imposes an
    extra penalty for errors when the traffic flow was more than half the maximum
    flow.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: Ma 等人 ([2015](#bib.bib80)) 使用了结合了限制玻尔兹曼机（RBM）和递归神经网络（RNN）模型来预测拥堵的演变。数据集包括了在中国宁波市的
    515 条道路链接上行驶的出租车的 GPS 轨迹。他们使用了一个网络范围内的交通速度阈值来确定预测的交通速度是否意味着拥堵。他们报告的平均准确率为 88.2%。他们在敏感性分析中发现的一个有趣观察是，阈值的增加会降低模型的性能。他们假设这可能是因为当更高比例的道路链接进入拥堵类别时，拥堵传播模式的波动性更高。Fouladgar
    等人 ([2017](#bib.bib32)) 使用了来自加利福尼亚的 [PeMS](https://dot.ca.gov/programs/traffic-operations/mpr/pems-source)
    数据集，并提出了一个分布式网络，其中道路网络的每个交叉口都用单独的深度学习模型进行建模。他们使用了 CNN 和 RNN 架构的组合来预测拥堵水平。为了将拥堵二值化，他们引入了节点特定的阈值，而不是网络范围内的通用阈值，从而赋予他们的模型比
    (Ma 等人, [2015](#bib.bib80)) 更强的表达能力。节点特定阈值是使用平均速度与速度限制的比率定义的 (${threshold}=\frac{{average~{}speed}}{{speed~{}limit}}$)。他们模型的敏感性分析揭示了拥堵水平增加时模型性能的下降。他们假设这种下降是由于类别不平衡（非拥堵情况的数据点数量较多）。他们试图通过优先加权拥堵严重的数据点来修正这种下降。优先加权是通过修改均方误差损失函数来实现的，以对每个数据点
    $i$ 引入惩罚 ($w_{i}*\beta_{i}$)。预测流量与真实值之间的差异为 $\beta_{i}$。如果数据点 $i$ 的交通流量小于 $0.5*(max~{}flow)$，则
    $w_{i}$ 的值等于 1，否则为 0。$\beta$ 值是预测误差的度量。现在，使用变量 $w_{i}$，模型对交通流量超过最大流量一半的错误施加了额外的惩罚。
- en: 'Wang et al. ([2016](#bib.bib132)) proposed [erRCNN](https://ieeexplore.ieee.org/mediastore_new/IEEE/content/media/7837023/7837813/7837874/7837874-fig-1-source-large.gif),
    which is built using CNN units followed by RNN units. In [Figure 7](#S2.F7 "Figure
    7 ‣ 2.2 Relevant concepts and terms in transportation ‣ 2 Preliminaries ‣ Applications
    of deep learning in congestion detection, prediction and alleviation: A survey"),
    we observed that when the flow exceeds beyond a threshold, the speed-density curve
    becomes scattered and abrupt changes in the average speed are observed. Their
    erRCNN architecture is shown to handle these abrupt changes. The error-correcting
    RNN allows the model to be updated when the prediction performance drops due to
    a change in the state of traffic. Thus, the model is capable of handling streaming
    data. They used a GPS dataset collected from 2 major ring roads in Beijing, China.
    The reported RMSE for speed prediction varies between 5 km/h when the prediction
    horizon is 10 minutes and 8 km/h when the prediction horizon is 50 minutes. Additionally,
    in order to understand the sources of congestion propagation, they propose a metric
    called segment importance. Each segment influences the traffic on other segments.
    If the road in question has $n$ segments, it can be assumed that the trained errRCNN
    model has learnt a mapping between traffic speeds at each segment at time $t$
    and the traffic speeds at each segment at time $t+1$. Mathematically, ${erRCNN}~{}([([v^{t}_{seg_{1}},v^{t}_{seg_{2}}..v^{t}_{seg_{n}}])])=[v^{t+1}_{seg_{1}},v^{t+1}_{seg_{2}}..v^{t+1}_{seg_{n}}]$.
    Using this assumption, first they define the influence of $seg_{i}$ on $seg_{j}$
    as the derivative of $v^{t+1}_{seg_{j}}$ w.r.t $v^{t}_{seg_{i}}$. Finally, they
    define the segment importance of a segment as the sum of the influences to all
    other segments. They then map the segments with high segment importance to physical
    locations in the network and uncover some sources of congestion (such as an intersection
    connecting two highways). Even though these observations are intuitive, their
    contribution is significant because it throws light on how deep learning models
    can be used to provide interpretable insights, thereby promoting wider acceptance
    by transport authorities.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 'Wang 等人 ([2016](#bib.bib132)) 提出了[erRCNN](https://ieeexplore.ieee.org/mediastore_new/IEEE/content/media/7837023/7837813/7837874/7837874-fig-1-source-large.gif)，该方法是通过
    CNN 单元和 RNN 单元组合构建的。在[图 7](#S2.F7 "Figure 7 ‣ 2.2 Relevant concepts and terms
    in transportation ‣ 2 Preliminaries ‣ Applications of deep learning in congestion
    detection, prediction and alleviation: A survey")中，我们观察到当流量超过阈值时，速度-密度曲线变得分散，并且平均速度出现急剧变化。他们的
    erRCNN 架构被证明可以处理这些急剧变化。错误校正的 RNN 允许模型在预测性能因交通状态变化而下降时进行更新。因此，该模型能够处理流数据。他们使用了从中国北京市两个主要环路收集的
    GPS 数据集。报告的速度预测 RMSE 在预测时域为 10 分钟时为 5 km/h，而在预测时域为 50 分钟时为 8 km/h。此外，为了理解拥堵传播的来源，他们提出了一个叫做段重要性的度量。每个段都会影响其他段的交通。如果所讨论的道路有
    $n$ 段，可以假设训练好的 errRCNN 模型已经学习了时间 $t$ 时每段的交通速度与时间 $t+1$ 时每段的交通速度之间的映射。数学上，${erRCNN}~{}([([v^{t}_{seg_{1}},v^{t}_{seg_{2}}..v^{t}_{seg_{n}}])])=[v^{t+1}_{seg_{1}},v^{t+1}_{seg_{2}}..v^{t+1}_{seg_{n}}]$。利用这一假设，他们首先定义了
    $seg_{i}$ 对 $seg_{j}$ 的影响为 $v^{t+1}_{seg_{j}}$ 对 $v^{t}_{seg_{i}}$ 的导数。最后，他们将一个段的段重要性定义为对所有其他段影响的总和。他们将高段重要性的段映射到网络中的物理位置，并揭示了一些拥堵来源（例如连接两个高速公路的交叉口）。尽管这些观察结果很直观，但它们的贡献是显著的，因为它们揭示了深度学习模型如何提供可解释的见解，从而促进了交通部门的广泛接受。'
- en: 'Deep learning for congestion trees: Another popular method that has been historically
    used to model the propagation of congestion utilizes the concept of congestion
    trees. Attempts have been made to model the evolution of congestion trees using
    deep learning. A congestion tree is formed when congestion on one road segment
    results in the building up of congestion onto the adjacent road segment. Several
    congestion trees can be combined by removing the redundancy between them. This
    gives rise to a congestion graph. Di et al. ([2019](#bib.bib27)) remove the redundancy
    between the congestion trees by creating a directed acyclic graph (DAG) through
    combination of the congestion trees. This DAG is then converted into a spatial
    matrix of congestion levels, with each cell of the matrix representing at most
    one segment. The spatial matrix helps preserve the adjacency information between
    the road segments. A sequence of these spatial matrices (SM) is then passed to
    a [Conv-LSTM](https://ieeexplore.ieee.org/mediastore_new/IEEE/content/media/8778425/8788716/8788784/336300a298-fig-4-source-large.gif)
    model for predicting the SM at the next time step. The predicted SM is transformed
    back to the congestion graph and then to the congestion tree, which can then be
    used to provide a visual representation of the predicted evolution of congestion.
    When using a 5-minute prediction horizon, they reported the Mean Squared Error
    (MSE) of 0.27 for weekdays and 0.07 for weekend traffic. MSE for 15 minutes was
    0.73 (weekday) and 0.37 (weekend). In their result, MSE has no units because it
    is not computed for a traffic variable, but for the spatial matrices. For comparison,
    the LSTM model achieved an MSE of 0.59 for weekdays and 0.32 for weekends when
    using a 5-minute prediction horizon.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: 'Table 1: Table summarising the papers discussed in [section 5.1](#S5.SS1 "5.1
    Deep learning for recurring congestion prediction ‣ 5 Deep learning for congestion
    prediction ‣ Applications of deep learning in congestion detection, prediction
    and alleviation: A survey") (Deep learning for recurring congestion prediction
    )'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: '| Paper | Congestion defined on the basis of: | DNN architecture | Performance
    | Data source | Unique aspect |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
- en: '| (Wang et al., [2016](#bib.bib132)) | Traffic speed |  [erRCNN](https://ieeexplore.ieee.org/mediastore_new/IEEE/content/media/7837023/7837813/7837874/7837874-fig-1-source-large.gif)
    (built using CNN, RNN) | 5km/h$\leq$RMSE$\leq$8km/h (horizon: 10 to 50 minutes)
    | 2 ring roads Beijing (China) | insights into congestion source detection |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
- en: '| (Ma et al., [2015](#bib.bib80)) | Traffic speed | RBM, RNN | Accuracy 88.2%
    | GPS data 515 road links Ningbo, China | Extensive sensitivity analysis w.r.t
    binary threshold on speed |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
- en: '| (Yu et al., [2017](#bib.bib150)) | Traffic speed | LSTM | MAPE: 5% | 2018
    VLDs (45 days) California, USA | spatio-temporal analysis of performance |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
- en: '| (Sun et al., [2019](#bib.bib121)) | Traffic speed | CNN LSTM | 90.55%$\leq$Accuracy$\leq$96.32%
    91.89%$\leq$Accuracy$\leq$96.75% | 2000 taxis GPS (28 days) Chengdu, China | extensive
    sensitivity analysis w.r.t input horizon |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| (Sun et al., [2019](#bib.bib121)) | 交通速度 | CNN LSTM | 90.55%$\leq$准确率$\leq$96.32%
    91.89%$\leq$准确率$\leq$96.75% | 2000辆出租车GPS（28天）成都，中国 | 针对输入范围的广泛敏感性分析 |'
- en: '| (Cheng et al., [2018](#bib.bib18)) | Traffic speed | novel [architecture](https://d3i71xaburhd42.cloudfront.net/56f17fa9a094e80f3e5e47311f2f31613d48e7b0/4-Figure4-1.png)
    (built using CNN,LSTM & attention) | QWK 0.52 at 60 minutes | 349 road links (4
    months) Beijing (MapBJ) | Insights into upstream and downstream flows |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| (Cheng et al., [2018](#bib.bib18)) | 交通速度 | 新颖的 [架构](https://d3i71xaburhd42.cloudfront.net/56f17fa9a094e80f3e5e47311f2f31613d48e7b0/4-Figure4-1.png)（使用CNN、LSTM和注意力机制构建）
    | QWK 0.52（60分钟） | 349条道路链接（4个月）北京（MapBJ） | 对上下游流量的洞察 |'
- en: '| (Ranjan et al., [2020](#bib.bib100)) | Traffic speed | novel [PredNet](https://www.researchgate.net/profile/Navin-Ranjan/publication/341062590/figure/fig4/AS:895246355398656@1590454772095/PredNet-model-architecture-a-The-model-is-divided-into-three-sections-section-A-is.png))
    (built using CNN&LSTM) | Accuracy: 84.2% | Speed heat map Seoul, S Korea | scalable
    architecture |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| (Ranjan et al., [2020](#bib.bib100)) | 交通速度 | 新颖的 [PredNet](https://www.researchgate.net/profile/Navin-Ranjan/publication/341062590/figure/fig4/AS:895246355398656@1590454772095/PredNet-model-architecture-a-The-model-is-divided-into-three-sections-section-A-is.png)（使用CNN和LSTM构建）
    | 准确率: 84.2% | 速度热图 首尔，韩国 | 可扩展的架构 |'
- en: '| (Shin et al., [2020](#bib.bib112)) | Traffic speed | LSTM | MAPE: 4.29% (urban)
    MAPE: 6.08%(suburban) | Urban suburban areas in & around Seoul, S. korea | observation:
    variation in complexity of task based on the type of network |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| (Shin et al., [2020](#bib.bib112)) | 交通速度 | LSTM | MAPE: 4.29%（城市） MAPE:
    6.08%（郊区） | 首尔及其周边的城市和郊区 | 观察：基于网络类型的任务复杂性变化 |'
- en: '| (Liu et al., [2017](#bib.bib79)) | Traffic flow | Conv-LSTM Conv bi-dir-LSTM
    | MAPE 9.53 MAPE 6.98 |  [PeMS](https://dot.ca.gov/programs/traffic-operations/mpr/pems-source)
    California, USA | bi-directional LSTM for historical data |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| (Liu et al., [2017](#bib.bib79)) | 交通流量 | Conv-LSTM Conv bi-dir-LSTM | MAPE
    9.53 MAPE 6.98 | [PeMS](https://dot.ca.gov/programs/traffic-operations/mpr/pems-source)
    美国加利福尼亚州 | 针对历史数据的双向LSTM |'
- en: '| (Li et al., [2017b](#bib.bib73)) | Traffic flow | novel [DCRNN](https://i.loli.net/2019/04/23/5cbec05ce557e.png)
    (built using encoder & decoder) | MAPE: 2.9%,3.9%,4.9%          for 15, 30, 60
    minutes respectively |  [PeMS](https://dot.ca.gov/programs/traffic-operations/mpr/pems-source)
    California, USA | incremental training using scheduled sampling; insights into
    effects of thresholds on load factor |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| (Li et al., [2017b](#bib.bib73)) | 交通流量 | 新颖的 [DCRNN](https://i.loli.net/2019/04/23/5cbec05ce557e.png)（使用编码器和解码器构建）
    | MAPE: 2.9%、3.9%、4.9% 分别针对15、30、60分钟 | [PeMS](https://dot.ca.gov/programs/traffic-operations/mpr/pems-source)
    美国加利福尼亚州 | 使用计划抽样的增量训练；对阈值对负荷因子影响的洞察 |'
- en: '| (Rahman and Hasan, [2020](#bib.bib96)) | Queue length | LSTM | RMSE$\scriptstyle\sim$1
    | 11 intersections (VLDs) 3 months Florida, USA | efficient encoding for spatial
    information |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| (Rahman and Hasan, [2020](#bib.bib96)) | 队列长度 | LSTM | RMSE$\scriptstyle\sim$1
    | 11个交叉口（VLDs）3个月 佛罗里达州，美国 | 对空间信息的高效编码 |'
- en: '| (Fouladgar et al., [2017](#bib.bib32)) | $\frac{average~{}speed}{speed~{}limit}$
    | CNN, RNN | – |  [PeMS](pems.dot.ca.gov) California, USA | Node-specific thresholds
    for better generalisation |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| (Fouladgar et al., [2017](#bib.bib32)) | $\frac{average~{}speed}{speed~{}limit}$
    | CNN, RNN | – | [PeMS](pems.dot.ca.gov) 美国加利福尼亚州 | 针对节点的特定阈值以更好地泛化 |'
- en: '| (Di et al., [2019](#bib.bib27)) | Not applicable (pre-labelled by data provider
     [HERE](https://www.here.com/) api) | Conv-LSTM | MSE:0.73 (weekdays),       0.37
    (weekend) | 553 road links (5 weeks) Helsinki, Finland | congestion tree |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| (Di et al., [2019](#bib.bib27)) | 不适用（由数据提供者预标记 [HERE](https://www.here.com/)
    api） | Conv-LSTM | MSE:0.73（工作日），0.37（周末） | 553条道路链接（5周）赫尔辛基，芬兰 | 拥堵树 |'
- en: 'Summary: In this subsection, various aspects of deep learning applications
    in predicting recurring congestion are discussed. The takeaways from this subsection
    are summarised below:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 概述：在这一小节中，讨论了深度学习应用于预测经常性拥堵的各个方面。该小节的要点总结如下：
- en: •
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: We observe that there have been very few attempts to comprehensively compare
    the performance of different deep learning models while keeping the dataset and
    the specific prediction task fixed. We know that the performance of a deep learning
    model is largely dependent on the choice of hyperparameters (such as the number
    of hidden layers, number of convolutions, learning rate etc.). When new deep learning
    architectures are presented for specific tasks, a fair comparison with previously
    used architectures might not be feasible. The reason behind this is that the best
    performance from a deep learning model involves training a large number of models
    to determine the best set of hyperparameters. So, it is not plausible to do such
    fine tuning for all the previous work.
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们观察到，尝试在保持数据集和特定预测任务固定的情况下，全面比较不同深度学习模型性能的尝试非常少。我们知道，深度学习模型的性能在很大程度上依赖于超参数的选择（如隐藏层数量、卷积数量、学习率等）。当针对特定任务提出新的深度学习架构时，与之前使用的架构进行公平比较可能不可行。原因在于，从深度学习模型中获得最佳性能涉及训练大量模型以确定最佳的超参数集合。因此，对所有以前的工作进行这种精细调整是不现实的。
- en: The solution might be to establish public benchmarks for each dataset while
    keeping the test, train, validation split fixed. Such dataset specific benchmarks
    are widely popular in the computer vision community. They might significantly
    reduce the duplication of efforts to reproduce results from a previous paper.
    Another benefit of such benchmarks would be to reduce the duplication of data
    pre-processing as it can be a more time consuming task than training a deep neural
    network iself.
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 解决方案可能是为每个数据集建立公开基准，同时保持测试、训练和验证切分固定。这种数据集特定的基准在计算机视觉领域非常受欢迎。它们可能显著减少重复努力以重现之前论文中的结果。这样的基准的另一个好处是减少数据预处理的重复工作，因为数据预处理可能比训练深度神经网络本身更耗时。
- en: •
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: Particularly, while predicting congestion over a large part of the network for
    several time steps, we observe that extensive sensitivity analyses has been reported
    in some papers in order to reveal the temporal and spatial variation in performance.
    Highlighting such differences in performance has resulted in future work being
    targeted at improving the spatial and temporal generalisation of the deep learning
    models. We believe this is a good trend and future research should include more
    of such analyses. It also helps us to understand the limits of short-term traffic
    prediction using deep learning. Based on the papers presented here, the maximum
    time horizon of prediction appears to be 60 minutes.
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 特别是在对网络的大部分区域进行多时间步的拥堵预测时，我们观察到一些论文报告了广泛的敏感性分析，以揭示性能的时间和空间变化。突出这些性能差异使得未来的工作集中在提高深度学习模型的空间和时间泛化能力上。我们认为这是一个良好的趋势，未来的研究应包括更多这样的分析。这也帮助我们理解使用深度学习进行短期交通预测的局限性。根据这里展示的论文，最大预测时间视野似乎为60分钟。
- en: We believe that future attempts to increase the prediction horizon will be useful
    to garner trust in the deep learning solutions for traffic congestion prediction.
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们相信，未来增加预测视野的尝试将有助于增强对交通拥堵预测的深度学习解决方案的信任。
- en: •
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: We observe a dearth of papers which present deep learning models that are updated
    as new data arrives. This is known as online learning. Online learning is a framework
    and not a model. So, theoretically any deep learning model can be integrated into
    an online learning framework and model updates can be demonstrated. So far, it
    is not popular because live traffic data are not easily available to researchers.
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们观察到几乎没有论文展示了随着新数据到达而更新的深度学习模型。这被称为在线学习。在线学习是一个框架，而不是一个模型。因此，从理论上讲，任何深度学习模型都可以集成到在线学习框架中，并展示模型更新。目前，这种方法不受欢迎，因为实时流量数据对研究人员来说不容易获得。
- en: Even when streaming new traffic data are not available, online learning capabilities
    can still be demonstrated by using temporal splits of the historical data and
    evaluate model performance as it gets trained on increasing amounts of data.
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 即使在没有新流量数据可用的情况下，也可以通过使用历史数据的时间切分来展示在线学习能力，并在模型训练过程中评估其性能随着数据量的增加而变化。
- en: 5.2 Deep learning for non-recurring congestion
  id: totrans-163
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 5.2 非周期性拥堵的深度学习
- en: 'An exhaustive list of causes behind non-recurring congestion is not known (McGroarty,
    [2010](#bib.bib84)). New causes are added as new data sources become available
    and new correlations and causalities are established. Some well investigated causes
    of non-recurring congestion are traffic accidents, varying weather conditions,
    disasters and planned events. In this survey, we focus on deep learning applications
    for predicting congestion due to accidents. The reasons for this focus on accidents
    are threefold. First, among this list of well-studied causes, traffic accidents
    are the leading cause behind a large percentage of non-recurring congestion (Hallenbeck
    et al., [2003](#bib.bib50)). Second, deep learning has been widely used to predict
    congestion after traffic accidents. Third, investigating traffic congestion due
    to other causative factors (weather, planned events and disasters) are best suited
    for scenario based studies using traffic simulators. Such studies are usually
    conducted in the planning stage and hence the high computation time of using traffic
    simulators do not present a challenge (Aljamal et al., [2018](#bib.bib4)). A literature
    search reveals that there is a wide variation in the specific deep learning task
    when using deep learning methods to predict congestion after traffic accidents.
    We have grouped the research into the following two clusters:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 关于非重复性拥堵的原因尚未有详尽的列表 （McGroarty，[2010](#bib.bib84)）。随着新数据源的出现和新相关性及因果关系的建立，新原因不断被添加到列表中。一些经过充分研究的非重复性拥堵原因包括交通事故、天气条件变化、灾难和计划活动。在本综述中，我们专注于预测由于事故造成的拥堵的深度学习应用。之所以关注事故原因有三个方面的原因。首先，在这些经过充分研究的原因中，交通事故是非重复性拥堵的主要原因之一 （Hallenbeck
    等，[2003](#bib.bib50)）。其次，深度学习已被广泛用于预测交通事故后的拥堵。第三，研究由于其他因素（天气、计划活动和灾难）造成的交通拥堵更适合使用交通模拟器进行情景研究。这类研究通常在规划阶段进行，因此使用交通模拟器的高计算时间并不会成为挑战 （Aljamal
    等，[2018](#bib.bib4)）。文献检索表明，使用深度学习方法预测交通事故后的拥堵时，具体的深度学习任务存在较大的差异。我们将研究分为以下两个类别：
- en: •
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: prediction of post accident traffic congestion
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 事故后交通拥堵的预测
- en: •
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: prediction of post accident congestion clearance time
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 事故后拥堵清除时间的预测
- en: 'The papers discussed in this subsection are summarised in [Table 2](#S5.T2
    "Table 2 ‣ 5.2 Deep learning for non-recurring congestion ‣ 5 Deep learning for
    congestion prediction ‣ Applications of deep learning in congestion detection,
    prediction and alleviation: A survey").'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 本小节讨论的论文总结在[表2](#S5.T2 "表2 ‣ 5.2 非重复性拥堵的深度学习 ‣ 5 深度学习在拥堵预测中的应用 ‣ 拥堵检测、预测和缓解的深度学习应用：综述")中。
- en: 'Post accident traffic congestion prediction: Sun et al. ([2017](#bib.bib120))
    propose a CNN based [architecture](https://ieeexplore.ieee.org/mediastore_new/IEEE/content/media/8241556/8257893/8258162/8258162-fig-3-source-small.gif)
    to predict traffic flow after accidents. The traffic speed data obtained from
    the traffic information system ([HERE api](https://www.here.com/)) is converted
    to traffic heat map images. If the speed ($v$) is less than 80 miles/h, the pixel
    value $p$ is set to ${\left(1-v/80\right)*255}$ and $0$ otherwise. A single threshold
    is used to define a binary classification task with two classes – recurring and
    non-recurring congestion. The reported accuracy is 86.6% with a false positive
    rate of 13.71% and a false negative rate of 4.44% (FN: model wrongly classifies
    non-recurring congestion as recurring congestion). An interesting contribution
    from their work is the use of crossover operator for reducing data imbalance issues
    (low number of ‘accident’ data points compared to ‘no accident’ data points).
    Crossover is a technique commonly used in genetics to model the creation of new
    chromosomes by partial exchanges of the genetic material of parent chromosomes.
    They hypothesise that various traffic data points collected within a short time
    range have the same event label and hence, applying crossover to random locations
    in the traffic heat maps results in data augmentation without compromising the
    data quality.'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 事故后的交通拥堵预测：Sun 等人（[2017](#bib.bib120)）提出了一种基于 CNN 的[架构](https://ieeexplore.ieee.org/mediastore_new/IEEE/content/media/8241556/8257893/8258162/8258162-fig-3-source-small.gif)来预测事故后的交通流量。交通速度数据从交通信息系统中获取（[HERE
    api](https://www.here.com/)），并转换为交通热图图像。如果速度（$v$）小于 80 英里/小时，像素值 $p$ 被设定为 ${\left(1-v/80\right)*255}$，否则为
    0。使用单一阈值来定义一个二分类任务——重复拥堵和非重复拥堵。报告的准确率为 86.6%，假阳性率为 13.71%，假阴性率为 4.44%（FN：模型错误地将非重复拥堵分类为重复拥堵）。他们工作的一个有趣贡献是使用交叉操作符来减少数据不平衡问题（“事故”数据点数量较少，相较于“无事故”数据点）。交叉是一种在遗传学中常用的技术，通过部分交换亲本染色体的遗传物质来模拟新染色体的创建。他们假设在短时间范围内收集的各种交通数据点具有相同的事件标签，因此，将交叉应用于交通热图中的随机位置可以实现数据增强，而不影响数据质量。
- en: Yu et al. ([2017](#bib.bib150)) propose a mixture model which has two components,
    one composed of LSTM and the other composed of an autoencoder. The incident data
    are fed to the autoencoder and the traffic data are fed to the LSTM. Finally,
    the outputs from the two components are concatenated and a fully connected layer
    is used to output traffic speed at each sensor location. They use vehicle loop
    detector (VLD) speed recordings from the publicly available [Caltrans](https://dot.ca.gov/programs/traffic-operations/mpr/pems-source)
    dataset from California, USA. While predicting post incident traffic speed for
    a prediction horizon of 3 hours, their model achieves a MAPE of 0.97%. For comparison,
    an LSTM model achieves a MAPE of 1.00% and a three layered feed forward neural
    network achieves 3.65%. An interesting contribution of their work is the use of
    signal stimulation to investigate the effects of abrupt reductions of input speed
    on the model response. They report that the model’s response remains unchanged
    when the stimulations last only for short durations (<5 minutes), thereby suggesting
    that the model is robust to the minor fluctuations in the input data. Additionally,
    they report that the model response is amplified when the stimulations are injected
    during peak hours.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: Yu 等人（[2017](#bib.bib150)）提出了一种混合模型，该模型由两个组件组成，一个由 LSTM 构成，另一个由自动编码器构成。事故数据被送入自动编码器，而交通数据被送入
    LSTM。最终，两个组件的输出被连接在一起，并使用一个全连接层输出每个传感器位置的交通速度。他们使用来自美国加州公开的[Caltrans](https://dot.ca.gov/programs/traffic-operations/mpr/pems-source)数据集中的车辆环路探测器（VLD）速度记录。在预测事故后的交通速度，预测时间范围为
    3 小时时，他们的模型实现了 0.97% 的 MAPE。相比之下，LSTM 模型的 MAPE 为 1.00%，三层前馈神经网络的 MAPE 为 3.65%。他们工作的一个有趣贡献是使用信号刺激来研究输入速度突然减少对模型响应的影响。他们报告说，当刺激持续时间较短（<5
    分钟）时，模型响应保持不变，这表明模型对输入数据的微小波动具有鲁棒性。此外，他们还报告称，当刺激在高峰时段注入时，模型响应会放大。
- en: Fukuda et al. ([2020](#bib.bib33)) propose [X-DCRNN](https://ietresearch.onlinelibrary.wiley.com/cms/asset/d4bbf261-631b-47f8-92c0-de91bfc01499/itr2bf00897-fig-0004-m.png),
    which is an extension of DCRNN in order to input the incident data explicitly.
    Their dataset is created using simulations on the microscopic traffic simulator
    MATES (Yoshimura, [2006](#bib.bib149)). The traffic demand was calibrated using
    the meta data obtained from the local transportation authority. The network in
    the simulator is based on the central business district of Okayama city in Japan,
    consisting of 206 traffic sensors across 339 road segments and spread across 3
    square kilometres. Their model predicts post incidence traffic speeds and the
    errors are reported for incident segment and the corresponding downstream segments.
    For the incident road segment, the reported MAE is 0.74 miles/h and the RMSE is
    0.87 miles/h. For comparison, on the same dataset, the DCRNN model achieved a
    MAE of 1.97 miles/h and an RMSE of 5.64 miles/h. While predicting the traffic
    on the immediate downstream road segment, both DCRNN and X-DCRNN achieve a similar
    level of performance. For immediate downstream segment, X-DCRNN achieves MAE of
    3.68 miles/h and RMSE of 6.39 miles/h. For comparison, the DCRNN model achieved
    MAE of 3.81 miles/h and RMSE of 6.33 miles/h.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 福田等人（[2020](#bib.bib33)）提出了[X-DCRNN](https://ietresearch.onlinelibrary.wiley.com/cms/asset/d4bbf261-631b-47f8-92c0-de91bfc01499/itr2bf00897-fig-0004-m.png)，这是一种扩展版的DCRNN，用于显式输入事件数据。他们的数据集是通过在微观交通模拟器MATES（Yoshimura，[2006](#bib.bib149)）上进行模拟创建的。交通需求使用从地方交通部门获得的元数据进行校准。模拟器中的网络基于日本冈山市的中央商务区，由206个交通传感器组成，覆盖339个道路段，总面积达3平方公里。他们的模型预测事件后的交通速度，报告了事件段和相应下游段的误差。对于事件道路段，报告的MAE为0.74
    miles/h，RMSE为0.87 miles/h。相比之下，在相同数据集上，DCRNN模型的MAE为1.97 miles/h，RMSE为5.64 miles/h。在预测紧邻下游道路段的交通时，DCRNN和X-DCRNN的表现相似。对于紧邻下游段，X-DCRNN的MAE为3.68
    miles/h，RMSE为6.39 miles/h。相比之下，DCRNN模型的MAE为3.81 miles/h，RMSE为6.33 miles/h。
- en: 'Predicting congestion clearance time: Congestion clearance time is a useful
    indicator of assessing the impact of accidents on traffic congestion. After an
    accident, traffic flow reduces due to restricted movement on affected lanes. Typically,
    the traffic flow eventually decreases to a minimum value and then recovers. When
    modelling congestion clearance time, most papers presented here focus on the time
    duration between the instant when the maximum level of congestion is reached (lowest
    flow) to the time instant when the flow returns back to pre-accident levels. A
    FFNN with two hidden layers is used in Zhang et al. ([2019](#bib.bib155)). They
    use average speed obtained from 173 vehicle loop detectors (VLDs) in Shanghai,
    China and accident data from traffic police records to create input vectors having
    9 features. While predicting congestion clearance time, their model achieves a
    MAPE of 40% and an RMSE of 8.3 minutes. For comparison, a multilinear regression
    model achieved a MAPE of 49.8% and an RMSE of 10.22 minutes. The total number
    of accident records in the dataset was 4017\.'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 预测拥堵清除时间：拥堵清除时间是评估事故对交通拥堵影响的有用指标。事故发生后，由于受影响车道的移动受限，交通流量减少。通常，交通流量最终会降到最低值，然后恢复。在建模拥堵清除时间时，本文中大多数论文关注的是从达到最大拥堵水平（最低流量）到流量恢复到事故前水平的时间段。Zhang等人（[2019](#bib.bib155)）使用了一个具有两个隐藏层的FFNN。他们使用从中国上海的173个车辆环路检测器（VLDs）获得的平均速度和交通警察记录中的事故数据来创建具有9个特征的输入向量。在预测拥堵清除时间时，他们的模型实现了40%的MAPE和8.3分钟的RMSE。相比之下，多元线性回归模型的MAPE为49.8%，RMSE为10.22分钟。数据集中事故记录的总数为4017。
- en: 'Lin and Li ([2020](#bib.bib76)) leverage the idea that in the instances of
    post accident congestion, the exact details about the accident are not available
    instantly. More information about the type, location, severity and affected lanes
    are available as the damage is assessed by the bystanders, involved parties or
    emergency response. They propose a framework capable of updating the prediction
    with the arrival of new information. They define non-recurring congestion prediction
    as a multiclass classification task (5 classes). The class of congestion is defined
    using thresholds on the maximum value of congestion delay index ($CDI~{}=~{}\frac{v_{free}}{v}$)
    reached after the accident. The congestion clearance time is defined as the time
    elapsed while the $CDI$ returns from its maximum value to pre-accident levels.
    They then predict the congestion clearance time for each type of accident. They
    propose a [framework](https://ars.els-cdn.com/content/image/1-s2.0-S0001457520305807-gr3.jpg),
    consisting of FFNN with one hidden layer that is capable of updating the model
    using the new data available during the course of congestion clearance time. The
    model update feature results in a significant performance improvement for the
    most severe accident class: RMSE (minutes) decreases from 10.8 to 7.62 and MAPE
    decreases from 17.4% to 9.33%. Their data was collected using an anonymous navigation
    system from Beijing, China.'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 林和李（[2020](#bib.bib76)）利用这样一个理念：在事故后拥堵的实例中，事故的详细信息不能立即获得。有关事故类型、地点、严重性和受影响车道的更多信息是在旁观者、相关方或应急响应评估损坏时提供的。他们提出了一个能够随着新信息到达而更新预测的框架。他们将非重复性拥堵预测定义为一个多类别分类任务（5
    类）。拥堵类别是通过设定拥堵延迟指数（$CDI~{}=~{}\frac{v_{free}}{v}$）达到事故后最大值的阈值来定义的。拥堵清除时间定义为$CDI$从其最大值返回到事故前水平所经过的时间。他们然后预测每种事故类型的拥堵清除时间。他们提出了一个 [框架](https://ars.els-cdn.com/content/image/1-s2.0-S0001457520305807-gr3.jpg)，包括一个具有隐藏层的FFNN，能够利用拥堵清除时间过程中可用的新数据来更新模型。模型更新特性显著提高了最严重事故类别的性能：RMSE（分钟）从10.8减少到7.62，MAPE从17.4%减少到9.33%。他们的数据是通过来自中国北京的匿名导航系统收集的。
- en: Li et al. ([2020](#bib.bib70)) propose an architecture called [fusion RBM](https://ars.els-cdn.com/content/image/1-s2.0-S0952197620301226-gr1.jpg)
    which is created by concatenating the outputs of two sets of stacked RBMs. The
    fusion aspect of their model is inspired by the fact that the accident data consist
    of categorical variables while the traffic data are continuous. One stacked RBM
    unit takes the categorical accident data as input while the other stacked RBM
    unit takes the continuous data as input. Finally, the outputs from both the units
    are concatenated and passed through a single neuron to finally output the congestion
    clearance time. The predicted congestion clearance time is quantified into ten
    levels using 10 minute increments (0-10,10-20 and so on). The reported MAPE is
    20.23% and the RMSE is 11.84 minutes. They used traffic data collected from California ([PeMS](https://dot.ca.gov/programs/traffic-operations/mpr/pems-source))
    and traffic incidents data collected from a highway safety information system
    (HSIS). The total number of accidents in their dataset was 968 with a mean congestion
    clearing time of 37 minutes.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 李等人（[2020](#bib.bib70)）提出了一种称为[融合RBM](https://ars.els-cdn.com/content/image/1-s2.0-S0952197620301226-gr1.jpg)的架构，该架构通过连接两组堆叠RBM的输出而创建。模型的融合方面受到事故数据为分类变量而交通数据为连续变量的事实启发。一个堆叠RBM单元接受分类事故数据作为输入，而另一个堆叠RBM单元则接受连续数据作为输入。最后，两个单元的输出被连接并通过一个神经元输出拥堵清除时间。预测的拥堵清除时间按10分钟增量（0-10、10-20等）量化为十个级别。报告的MAPE为20.23%，RMSE为11.84分钟。他们使用了从加利福尼亚州 ([PeMS](https://dot.ca.gov/programs/traffic-operations/mpr/pems-source))
    收集的交通数据和从高速公路安全信息系统（HSIS）收集的交通事故数据。他们数据集中总共有968起事故，平均拥堵清除时间为37分钟。
- en: 'Summary: We discussed the applications of deep learning in predicting post
    accident traffic congestion and its clearance time. The key difference from recurring
    congestion prediction was that data from multiple sources must be fused in order
    to predict post accident congestion. Each paper presented here handled the challenge
    of data fusion in different ways, with almost no consensus between them. Benchmarking
    of standard data fusion algorithms from multiple sources might be helpful to provide
    insights to future researchers about the most efficient techniques for traffic
    data fusion. Data fusion has been extensively studied in the Internet of things
    (IOT) community. IOT research is focused on pervasive communication between different
    devices, hence efficient data fusion has been researched extensively. Transportation
    researchers can draw inspiration from such sources and explore the possibilities
    of improving post accident congestion prediction using efficient data fusion techniques.
     Gao et al. ([2020](#bib.bib34)) compare the data fusion performance of different
    deep learning architectures. Most of the architectures presented in their survey
    are commonly used for deep learning based congestion prediction task, hence it
    would be interesting to use the insights presented therein. Predicting post accident
    traffic congestion can also be understood in the light of the traffic hysteresis
    curve presented in [section 2.2](#S2.SS2 "2.2 Relevant concepts and terms in transportation
    ‣ 2 Preliminaries ‣ Applications of deep learning in congestion detection, prediction
    and alleviation: A survey").'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: 'Table 2: Table summarising the papers discussed in [section 5.2](#S5.SS2 "5.2
    Deep learning for non-recurring congestion ‣ 5 Deep learning for congestion prediction
    ‣ Applications of deep learning in congestion detection, prediction and alleviation:
    A survey") (Deep learning for non-recurring congestion prediction)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: '| Paper | DNN architecture | Performance | Data source | Unique aspect |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
- en: '| (Sun et al., [2017](#bib.bib120)) | CNN | Accuracy = 86.6% FPR = 13.71% FNR
    = 4.44% | Traffic speed data from [HERE api](https://www.here.com/) (6 days: train,
    1 day:validation) | Data augmentation using crossover |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
- en: '| (Yu et al., [2017](#bib.bib150)) | Mixture model (LSTM and autoencoder) |
    MAPE = 0.97% (predicting post accident traffic speed) | 2018 VLDs (45 days) California,
    USA | Robust model tested with stimulation response |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
- en: '| (Fukuda et al., [2020](#bib.bib33)) | X-DCRNN extension of DCRNN (Li et al.,
    [2017a](#bib.bib72)) | MAE = 3.68 miles/h RMSE = 6.39 miles/h (predicting post
    accident traffic speed) | simulated data for 206 traffic sensors, 339 road segments
    generated using MATES (calibrated demand from Okayama, Japan) | Large number of
    training data points possible due to simulated data |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
- en: '| (Zhang et al., [2019](#bib.bib155)) | FFNN (2 hidden layers) | MAPE = 40%
    RMSE = 8.3 minutes | 173 VLDs from Shanghai 4017 accident records from police
    records | Performance comparable to multilinear regression suggesting the use
    of other ANN architectures |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
- en: '| (Lin and Li, [2020](#bib.bib76)) | FFNN (one hidden layer) | MAPE = 9.33%
    RMSE = 7.62 minutes | Anonymous Navigation System Beijing, China | Novel data
    fusion and model update with new data |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
- en: '| (Li et al., [2020](#bib.bib70)) | specialised [fusion RBM](https://ars.els-cdn.com/content/image/1-s2.0-S0952197620301226-gr1.jpg)
    | MAPE = 20.23% RMSE = 11.84 minutes. | 968 accidents from [HSIS](https://www.hsisinfo.org/)&
    traffic data from [PeMS](https://dot.ca.gov/programs/traffic-operations/mpr/pems-source)
    dataset California, USA | specialised architecture for data fusion |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
- en: 6 Deep learning for congestion alleviation
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The congestion alleviation techniques differ significantly for recurring and
    non-recurring congestion. On the one hand, recurring congestion is caused due
    to infrastructural bottlenecks which are insufficient to handle the peak demand
    of traffic. So, the deep learning solutions for recurring congestion are targeted
    at decreasing the severity of the recurring congestion by distributing the demand
    in an optimal fashion. On the other hand, non-recurring congestion is caused primarily
    due to accidents. So, the deep learning applications for alleviating non-recurring
    congestion are targeted at reducing accidents. Deep learning has been widely used
    to predict the accident risk. The predicted accident risk can be used to alert
    drivers or to impose speed restrictions in order to reduce accidents. At the end
    of this section, we discuss the potential connection between the efforts to reduce
    recurring congestion and the efforts to reduce non-recurring congestion. As discussed
    in the previous [section 5.1](#S5.SS1 "5.1 Deep learning for recurring congestion
    prediction ‣ 5 Deep learning for congestion prediction ‣ Applications of deep
    learning in congestion detection, prediction and alleviation: A survey"), other
    causes of non-recurring congestion such as planned events, bad weather and natural
    disasters are best suited for scenario based studies using traffic simulators
    and hence, deep learning has not extensively applied for non-recurring congestion
    due to those causes.'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: 6.1 Deep learning for recurring congestion alleviation
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As soon as recurring congestion is predicted by a congestion prediction model,
    alleviation measures can be put in place to reduce the build up of congestion.
    At the network level, this can be achieved by controlling the supply parameters
    such as traffic signal control at intersections, ramp metering, imposing speed
    limit restrictions and imposing lane use restrictions. At the individual level,
    this can be achieved by using descriptive, prescriptive or hybrid methods. Descriptive
    methods involve broadcasting vital information about the network traffic conditions
    to the drivers and helping them make an informed decision about their trip start
    time and chosen route. Prescriptive methods involve trip specific suggestions
    to drivers (such as optimal start time and optimal route choice). Hybrid methods
    use a combination of descriptive and prescriptive methods. The descriptive and
    prescriptive methods face significant challenges due to the additional layer of
    human behavior modelling in those approaches. In this survey, we focus on the
    recent research using deep learning for congestion alleviation at the network
    level.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦拥堵预测模型预测到反复出现的拥堵，就可以采取缓解措施以减少拥堵的积累。在网络层面，可以通过控制供应参数来实现，比如交叉口的交通信号控制、匝道限流、设置速度限制以及实施车道使用限制。在个人层面，可以通过使用描述性、规范性或混合方法来实现。描述性方法涉及向司机广播网络交通状况的关键信息，帮助他们做出有关出发时间和选择路线的明智决策。规范性方法涉及向司机提供针对特定行程的建议（例如最佳出发时间和最佳路线选择）。混合方法则结合了描述性和规范性方法。描述性和规范性方法面临显著挑战，因为这些方法中包含了额外的人类行为建模层。在这项调查中，我们重点关注了最近使用深度学习进行网络层面拥堵缓解的研究。
- en: 'Challenges in using demand side solutions: The challenges encountered when
    using descriptive and prescriptive methods for congestion alleviation are presented
    in Balakrishna et al. ([2013](#bib.bib8)). The biggest challenge is the information
    flow back from the drivers to the network. The information is crucial in order
    to estimate the effect of the suggested route on the roads. They strongly argue
    in favour of the need for large-scale tracking data. Due to the high penetration
    of smart phones in urban areas, such real time traffic information is increasingly
    being relayed to the drivers through their mobile phones. The challenge however
    arises from the fact that the descriptive and prescriptive solutions are being
    grouped together. When a user queries for driving directions, the preferred routes
    returned by the navigation application incorporates some route suggestions. The
    final goal of such personalised route suggestions is not known, since the companies
    which provide such services present mobility as a service and the algorithmic
    details are trade secrets. A survey conducted in 2018 in the US reports that 87%
    of drivers use some navigational application to get suggestions for driving directions (Manifest,
    [2018](#bib.bib82)). A report released by Google Maps states that more than a
    billion kilometres of travel per day are tracked using their application (Google,
    [2020](#bib.bib44)). When the coverage and compliance of such personalised route
    suggestions increase, it can potentially alter the user equilibrium in the transportation
    system. Since such efforts from the private sector are targeted at creating route
    choice as a service and the exact methods are black boxed as trade secrets, it
    is difficult to estimate the potential drawbacks related to the equity of such
    solutions. In the absence of real data, researchers have used economic instruments
    as an attempt to increase the compliance and hence, ease the task of modelling
    the human behavior. The compliance of advisory measures can be increased using
    punitive measures or rewards. The choice between which of the two approaches proves
    to be more effective, is a difficult one to make. The effectiveness of punitive
    measures is similar across various geographical locations whereas the effectiveness
    of reward based measures has been found to vary significantly (Tillema et al.,
    [2013](#bib.bib128); Li et al., [2019](#bib.bib71)). Two commonly used punitive
    measures are congestion tolling and tradable tokens. de Palma et al. ([2018](#bib.bib25))
    present a methodology for comparing the effects of both approaches and strongly
    argue in favour of tradable tokens. Various ways in which new and emerging technology
    can be used to achieve efficient congestion tolling are discussed in de Palma
    and Lindsey ([2011](#bib.bib24)). One of their suggestions is automatic number
    plate recognition (ANPR). Deep learning has been widely applied for ANPR. However,
    this application is not covered in this survey. The interested reader is referred
    to Connie et al. ([2018](#bib.bib21)) and Khan and Ullah ([2019](#bib.bib62)).
    The challenges encountered in applying ANPR to developing countries are presented
    in Kyaw et al. ([2018](#bib.bib66)).'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: 'Supply side solutions at the network level: We focus on the deep learning applications
    for congestion alleviation at the network level. The majority of such efforts
    use deep reinforcement learning. As discussed in [section 2.1](#S2.SS1 "2.1 Relevant
    concepts and terms in deep learning ‣ 2 Preliminaries ‣ Applications of deep learning
    in congestion detection, prediction and alleviation: A survey"), a reinforcement
    learning framework has four main components: agent, action, reward and the environment.
    The concept of policy fits well into the traffic signal control problem. The best
    policy (e.g., order of the red and green lights in different directions at an
    intersection) can be found by optimising the model for which the reward (e.g.
    maximum cumulative flow in the network) is minimised. In the recent research,
    deep Q-network (DQN) is being commonly used and authors are increasingly interested
    in investigating the equity aspect of such solutions. The traffic controlling
    infrastructure (such as traffic signal or speed limit signs) is modelled as the
    agent. The choice of agents determines which actions are allowed. The papers are
    arranged into two headings based on the chosen agent.'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: •
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adaptive Traffic Signal Control (TSC)
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Variable Speed Limit Control (VSLC)
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The papers discussed in this subsection are summarised in [Table 3](#S6.T3
    "Table 3 ‣ 6.1 Deep learning for recurring congestion alleviation ‣ 6 Deep learning
    for congestion alleviation ‣ Applications of deep learning in congestion detection,
    prediction and alleviation: A survey")'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: 'Table 3: Summary of papers discussed in [section 6.1](#S6.SS1 "6.1 Deep learning
    for recurring congestion alleviation ‣ 6 Deep learning for congestion alleviation
    ‣ Applications of deep learning in congestion detection, prediction and alleviation:
    A survey") (Supply side solutions using deep learning for recurring congestion
    alleviation)'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: '| Paper | DNN architecture | Reward function | Performance | Data source |
    Unique aspect |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
- en: '| (Genders and Razavi, [2016](#bib.bib37)) | CNN based DQN | cumulative delay
    queue length | cumulative delay = 719 seconds queue length = 13 | small network
    (one intersection with 4 segments each with 4 lanes) | identified several important
    challenges (such as fairness) |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
- en: '| (Yen et al., [2020](#bib.bib148)) | CNN based DSARSA | Power metric = $\frac{maximum~{}throughput}{end-to-end~{}delay}$
    | Power metric = 35 | 9 intersections (3X3 grid) | Novel reward function DQN convergence
    challenges highlighted |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
- en: '| (Zeng et al., [2018](#bib.bib153)) | LSTM based DQN | Average waiting time
    | Average waiting time = 17.71 s | small network (one intersection with 4 segments)
    | Performance stable at low penetration ratios <50% |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
- en: '| (Genders and Razavi, [2019](#bib.bib38)) | FFNN based DQN | end-to-end-delay
    | – | small network (one intersection with 4 segments) | 40% improvement over
    actuated signal control |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
- en: '| Dusparic et al. ([2016](#bib.bib29)) | (classical RL) | – | – | – | Priority
    vehicles considered |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
- en: '| (Shabestray and Abdulhai, [2019](#bib.bib109)) | CNN based RL | cumulative
    delay at intersections | For transit only average TT :292 s compared to 343 s
    for actuated control | 6 intersections Ontario, Canada (calibrated demand) | 1\.
    Multi-modal signal controller 2\. Calibrated demand 3\. Head-count based priority
    |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
- en: '| (Wu et al., [2020](#bib.bib141)) | LSTM based DQN | several components including
    queue lengths, mean vehicle delay, number of pedestrians delayed | During peak
    hours 50% reduction in queue length compared to other baselines | multiple intersections
    simulator: SUMO | Pedestrian waiting incorporated into reward function |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
- en: '| (Gregurić et al., [2020](#bib.bib46)) | CNN based DQN | three components
    1\. traffic flow 2\. safety constraints 3\. driver comfort | 13.5% increase in
    average speed 25% decrease in density compared to no vehicle speed limit (VSL
    case) | 8 km of highway simluator: VISSIM | Novel reward function |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
- en: '| (Wu et al., [2020](#bib.bib142)) | FFNN based DRL | four components 1\. increasing
    flow 2\. decreasing travel time 3.reducing rapid acceleration 4\. reducing emissions
    | 5.8% decrease in average travel time compared to no vehicle speed limit (VSL
    case) | 850 m of highway simulator: SUMO | Assuming autonomous vehicles and allows
    for abrupt changes in speed limit and lane specific limits |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
- en: 6.1.1 Adaptive traffic signal control (TSC)
  id: totrans-209
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A CNN based DQN was presented in Genders and Razavi ([2016](#bib.bib37)) in
    order to model the signal controlling agents in a traffic simulator. The goal
    was to maximise the network-wide throughput by optimising the behavior of these
    agents. They analyse the performance of their model based on three parameters
    – the cumulative delay, the queue length at intersections, and the average travel
    time. They model one intersection with four segments from four directions each
    having four lanes. The vehicles are loaded at varying flow rates between 0 to
    450 vehicles/h. The left and right turning traffic is loaded using the inverse
    Weibull distribution (Rinne, [2008](#bib.bib105)) while the through traffic is
    loaded using the Burr distribution (Tadikamalla, [1980](#bib.bib124)). Using CNN
    based DQN to control the actions of the traffic controlling agent, they achieve
    a cumulative delay of 719 seconds and an average queue length of 13 vehicles.
    For comparison, a DQN based on FFNN with one hidden layer achieves an average
    queue length of 33\. They highlight the need to study the fairness aspect of the
    policy optimised by the DQN. In the absence of a fairness metric of the model,
    it is possible that the algorithm favors or disfavors specific movements of traffic.
    They assert that the fairest policy might not result in the best throughput of
    traffic – hence, there is a need to search for a balance between the two objectives
    by tweaking the reward function. Yen et al. ([2020](#bib.bib148)) attempt to address
    this difference of objectives by incorporating a power metric in their reward
    function. The power metric is defined as the ratio of maximum throughput to the
    end-to-end delay ($\frac{flow}{time}$). When the power metric is maximised, the
    throughput (the flow of traffic) is maximised and the end-to-end delay (travel
    time) is minimised. Their network consists of nine intersections (3x3 grid). Using
    power metric as the reward function however did not result in convergence of the
    DQN models. Hence, they used DSARSA instead of DQN to achieve convergence. SARSA
    stands for State-Action-Reward-State-Action. It was introduced in Rummery and
    Niranjan ([1994](#bib.bib106)) and differs from DQN in the choice of the next
    action. The SARSA algorithm uses the same policy to choose the next action as
    well as update the reward function whereas the DQN uses a different (greedy) policy
    to choose the next action. Using their CNN based DSARSA, they achieved a power
    metric of 35\.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: Genders 和 Razavi ([2016](#bib.bib37)) 提出了基于 CNN 的 DQN 模型，以模拟交通仿真器中控制信号的代理。目标是通过优化这些代理的行为来最大化网络的整体吞吐量。他们根据三个参数分析模型的性能——累计延迟、交叉口的排队长度以及平均旅行时间。他们模拟了一个交叉口，具有四个方向的四段，每段有四条车道。车辆以
    0 到 450 车辆/小时的不同流量加载。左转和右转交通使用逆威布尔分布 (Rinne, [2008](#bib.bib105))，而直行交通使用 Burr
    分布 (Tadikamalla, [1980](#bib.bib124))。使用基于 CNN 的 DQN 控制交通控制代理的动作，他们实现了累计延迟 719
    秒和平均排队长度 13 辆。相比之下，基于 FFNN 的 DQN（具有一个隐藏层）实现了 33 辆的平均排队长度。他们强调了研究 DQN 优化策略的公平性方面的必要性。在缺乏模型公平性指标的情况下，算法可能会偏向或反对特定的交通流动。他们认为最公平的政策可能不会导致最佳的交通吞吐量——因此，需要通过调整奖励函数来寻找两者之间的平衡。Yen
    等人 ([2020](#bib.bib148)) 尝试通过在奖励函数中引入功率指标来解决这一目标差异。功率指标定义为最大吞吐量与端到端延迟的比率 ($\frac{flow}{time}$)。当功率指标最大化时，吞吐量（交通流量）最大化，端到端延迟（旅行时间）最小化。然而，使用功率指标作为奖励函数并未导致
    DQN 模型的收敛。因此，他们使用了 DSARSA 而非 DQN 来实现收敛。SARSA 代表状态-动作-奖励-状态-动作。它由 Rummery 和 Niranjan
    ([1994](#bib.bib106)) 提出，与 DQN 在选择下一个动作上有所不同。SARSA 算法使用相同的策略来选择下一个动作以及更新奖励函数，而
    DQN 使用不同的（贪婪的）策略来选择下一个动作。使用他们的基于 CNN 的 DSARSA，他们达到了 35\ 的功率指标。
- en: Another attempt in this direction is Zeng et al. ([2018](#bib.bib153)) who propose
    DRQN (Deep Recurrent Q Learning) using LSTM based DQN. They report an average
    waiting time of 17.71 seconds when using DRQN on their synthetic network consisting
    of a single four-way intersection. The distribution used for loading the vehicles
    is binomial. The performance of LSTM based DQN is similar to that of a CNN based
    DQN as used in Genders and Razavi ([2016](#bib.bib37)). However, the performance
    of the LSTM-DQN model is stable when the penetration ratio is varied. Penetration
    ratio is defined as the percentage of vehicles on the road who shared their data.
    The CNN-based models perform poorly when the penetration ratio falls below $0.5$.
    At a penetration ratio of $1$ (implying data from all vehicles are available),
    the performance is similar for both models. Genders and Razavi ([2019](#bib.bib38))
    use a feed forward neural network (FFNN) based DQN to optimise the traffic control
    policy during peak hours. Using their synthetic network comprising a single intersection,
    they report a reduction of around 40% in the average total vehicle delay when
    compared to the traditionally used actuated method of traffic signal control (Newell,
    [1989](#bib.bib91)).
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个在这方面的尝试是 Zeng 等人 ([2018](#bib.bib153)) 提出的 DRQN（深度递归 Q 学习），它使用基于 LSTM 的 DQN。他们报告称，在他们的合成网络中使用
    DRQN 的平均等待时间为 17.71 秒，该网络由一个四路交叉口组成。用于加载车辆的分布是二项式分布。基于 LSTM 的 DQN 的性能与 Genders
    和 Razavi ([2016](#bib.bib37)) 使用的基于 CNN 的 DQN 相似。然而，当渗透率变化时，LSTM-DQN 模型的性能比较稳定。渗透率定义为在路上共享数据的车辆的百分比。当渗透率低于
    $0.5$ 时，基于 CNN 的模型表现不佳。在渗透率为 $1$（即所有车辆的数据都可用）时，两种模型的性能相似。Genders 和 Razavi ([2019](#bib.bib38))
    使用基于前馈神经网络（FFNN）的 DQN 来优化高峰时段的交通控制策略。使用他们的单交叉口合成网络时，他们报告相比传统的信号控制方法（Newell, [1989](#bib.bib91)），平均总车辆延迟减少了约
    40%。
- en: Most of the research discussed in this paragraph uses a traffic simulator to
    observe the effect of change in traffic-controlling policy at each intersection.
    We observed that SUMO (Behrisch et al., [2011](#bib.bib10)) is the most commonly
    used traffic simulator for this purpose. The main reason behind the popularity
    of SUMO is that it has a python interface. Python is the most commonly used language
    for deep learning research, hence the integration with SUMO is smooth.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 本段讨论的大部分研究使用交通模拟器来观察在每个交叉口改变交通控制政策的效果。我们观察到，SUMO（Behrisch 等人, [2011](#bib.bib10)）是最常用的交通模拟器。SUMO
    受欢迎的主要原因是它有一个 Python 接口。Python 是深度学习研究中最常用的语言，因此与 SUMO 的集成非常顺畅。
- en: Fairness is an important factor for deep learning based solutions for TSCs in
    order to ensure wide acceptance of such solutions by the transport-planners and
    policymakers. When priority vehicles are taken into account, the importance of
    fairness increases significantly. Priority vehicles include transit vehicles like
    buses and emergency transportation like ambulances. Researchers have tried to
    incorporate fairness constraints into the reward function of reinforcement learning
    solutions. Dusparic et al. ([2016](#bib.bib29)) used a classical (not using neural
    network) reinforcement learning algorithm and modified their reward function so
    as to penalise the signal controlling agent each time a priority vehicle is queuing
    at an intersection. Similar penalties have been adopted by the deep learning community
    in order to demonstrate fairness in the deep learning based reinforcement learning
    solutions.  Shabestray and Abdulhai ([2019](#bib.bib109)) propose a multi-modal
    signal controller using DQN and analyse the effects on various modes of transportation.
    Unlike other studies summarised in this subsection, this is the only paper which
    used real data to calibrate the traffic demand. They modelled a road network with
    6 intersections representing a busy part of a city in Ontario, Canada using the
    commercially available traffic simulator [PARAMICS](https://www.paramics.co.uk/en/).
    Instead of prioritising vehicles specifically, they use a person-based performance
    of the controller in their reward function. This automatically prioritizes vehicles
    with higher head-count, implying that a bus has a higher priority than a car;
    a fully-occupied bus has a higher priority than a partially-occupied bus. The
    downside is that high-priority but low head-count vehicles like ambulances are
    at a disadvantage when this approach is used. Wu et al. ([2020](#bib.bib141))
    used a synthetic network with [multiple intersections](https://ieeexplore.ieee.org/mediastore_new/IEEE/content/media/25/9166810/9103316/wu2-2997896-small.gif)
    modelled in SUMO and proposed an LSTM based DQN to assign priority to vehicles
    and also include the pedestrian waiting time in their reward function. This concept
    of using power metric in the reward function is inspired by the literature on
    wireless networks (Kleinrock, [2018](#bib.bib63)).
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: 6.1.2 Variable Speed Limit Control (VSLC)
  id: totrans-214
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Similar to TSC, the VSLC methods are targeted at reducing the severity of an
    impending traffic congestion. The specific objective is to maximise the total
    flow in the network while minimising the average travel time. The design of the
    reinforcement learning framework for VLSC is similar to that of TSC. Here, the
    VSLC signs are modelled as the action taking agents. The actions allowed by the
    VSLC agent are to post variable speed limit signs on the variable message sign
    board (VMS). A microscopic traffic simulator is used to evaluate the effects of
    the action taken by the VSLC agent. However, TSC and VSLC differ significantly
    in their potential to be implemented in the real world. The challenge in the real-world
    implementation of VSLC stems from the potential lack of compliance on the part
    of drivers. Hence, in order to ensure higher compliance, driver comfort must be
    taken into account when formulating VSLC based solutions. In comparison, driver
    compliance is less of a concern in case of TSC based solutions because in practice,
    the instances of traffic light violation are far lower than traffic speed violations (Wu
    and Hsu, [2021](#bib.bib143)). The research summarised here has attempted to incorporate
    driver comfort metrics when using deep reinforcement learning models to find the
    optimal VSLC.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: 'A three layered CNN based DQN model is presented in Gregurić et al. ([2020](#bib.bib46)).
    Their reward function is a weighted sum of three components. The first component
    is aimed at increasing traffic flow. The second component ensures safety by imposing
    constraints on the magnitude of variations in VMS posted speed limits. The third
    component ensures driving comfort by minimising the oscillations in the VMS posted
    speed limits. Their [network](https://ieeexplore.ieee.org/mediastore_new/IEEE/content/media/9212529/9219008/9219031/gregu4-017_orig-research-large.gif)
    was modelled using VISSIM microscopic traffic simulator and consists of eight
    kilometres of highway with one variable message sign board (VMS). The synthetic
    demand was sufficient to create 20 minutes of simulated congestion on the network.
    Using their DQN model, they demonstrate a 13.5% increase in the average speed
    and 25% decrease in the average traffic density. Wu et al. ([2020](#bib.bib142))
    consider a futuristic scenario where the connected and autonomous vehicles are
    ubiquitous. In such a scenario, the high compliance factor allows the VSLC agent
    to make more dynamic changes. They present a differential vehicle speed limit
    model, by applying lane specific variable speed limits. They train four different
    models for different rewards: increasing flow, decreasing travel time, reducing
    rapid acceleration and reducing emissions. The traffic demand used in this study
    is more realistic compared to previous work. The [network](https://ars.els-cdn.com/content/image/1-s2.0-S0968090X20305647-gr2.jpg)
    is a representation of 850 metres of a major highway from California and the demand
    used was calibrated using the data available for the highway. The mode composition
    was 85% passenger vehicles and 15% buses and trucks. Compared to the no-VSL case,
    their DVSL model achieves a 5.8% reduction in average travel time. They used SUMO
    as their microscopic traffic simulator and include specific details about how
    different functionalities in the SUMO application interface can be utilized to
    implement various components of the reward function.'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: 'Summary: We discussed the applications of deep learning when applied to limit
    supply using network level control of traffic. We observe two major challenges
    in the current state of research in this field as summarised below:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: •
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The small size of road network and the homogeneity of traffic stream used for
    these studies poses a significant challenge to the validation of the research
    as a deployment option. The traffic demand is created using mathematical distributions
    rather than using the real traffic demand. Only one of the papers presented here
    used real data to calibrate their demand. Secondly, the reported performance of
    the DQN models is often not compared with the existing methods of network control
    (such as fixed phase transitions, Actuated). Instead, the comparison between DQNs
    using different neural network architectures is common. Unless the DQN based solutions
    are demonstrated to perform better than the existing methods, the real-world deployment
    of such solutions might be difficult.
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Another aspect discussed here was the lack of deep learning based solutions
    for managing the travel demand. The majority of large-scale solutions are provided
    by the private sector and the academic research is limited by data availability.
    Personal mobility data when fused with other sources, can reveal a lot of information
    about the travellers, hence the hesitation of the travellers public in sharing
    data is justified. We believe that a wide adoption of secure data pipelines in
    the research community might be an important step in garnering trust among the
    users who share data. Privacy preserving data fusion techniques have been explored
    in the Internet of things (IOT) community. A summary is presented in Ding et al.
    ([2019](#bib.bib28)). Transportation researchers can draw inspiration from such
    sources and adopt the best practices for privacy preservation.
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 6.2 Deep learning for non-recurring congestion alleviation
  id: totrans-222
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Accidents are the leading cause of non-recurring congestion. Hence an accurate
    prediction of the short-term accident risk enables us to proactively alert drivers
    about the same and potentially instruct them to reduce speed (Ren et al., [2018](#bib.bib103)).
    Recently, deep learning has been widely used to predict accident risk. In order
    to proceed with accident risk prediction, the common practice is to divide the
    study area into grids and then predict the number of accidents in each grid at
    different time intervals. The accident risk prediction can be designed as a binary
    prediction task where the deep learning model is trained to predict a label (‘high
    risk’ or ‘low risk’) for each grid. It can also be designed as a regression task
    where the deep learning model is trained to predict the potential number of accidents
    in the grid. The papers discussed in this subsection are summarised in [Table 4](#S6.T4
    "Table 4 ‣ 6.2 Deep learning for non-recurring congestion alleviation ‣ 6 Deep
    learning for congestion alleviation ‣ Applications of deep learning in congestion
    detection, prediction and alleviation: A survey").'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: 'Demonstrating transfer learning capabilities Najjar et al. ([2017](#bib.bib90))
    use satellite imagery as inputs to their model. They use a model similar to AlexNet ([Figure 2](#S2.F2
    "Figure 2 ‣ 2.1.2 CNNs and RNNs ‣ 2.1 Relevant concepts and terms in deep learning
    ‣ 2 Preliminaries ‣ Applications of deep learning in congestion detection, prediction
    and alleviation: A survey")) in order to predict the accident risk into three
    levels. Gupta et al. ([2019](#bib.bib47)) and Najjar et al. ([2017](#bib.bib90))
    have demonstrated transfer learning capabilities for the task of accident risk
    prediction. They trained their deep learning models using the data from one city
    and used the trained model to predict the accident risk in a different city (New
    York $\rightarrow$ Denver; London $\rightarrow$ New York). Gupta et al. ([2019](#bib.bib47))
    report accuracies of 74.77% and 76.20% when using the model, which was trained
    on London data, to predict on data from New York and Denver respectively. Similarly,
    Najjar et al. ([2017](#bib.bib90)) trained their model on data from New York and
    obtained an accuracy of 78.2%. They then report comparable performance (73.1%)
    when using the model from New York to make predictions on data from Denver.'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: 'Spatial correlations and heterogeneity of the road networks: The road network
    characteristics, the drivers’ behavior and the travel demand vary spatially. On
    the one hand, this spatial heterogeneity results in a spatial variation in the
    prediction performance of deep learning models. On the other hand, it presents
    opportunities to leverage on the high correlation between data collected from
    sensors which were located in each other’s vicinity.'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: In Zhao et al. ([2018](#bib.bib156)), the authors apply principal component
    analysis (PCA) on the traffic and accidents data and then use a feed forward neural
    network with two hidden layers to predict the risk of a crash. Their data are
    based on one year of car accident records in the UK. PCA is used to identify un-correlated
    components in a dataset. The authors advocate the use of PCA due to the fact that
    in a transportation data set, many associated sensors and vehicles produce data
    which are correlated to some extent. Their experimental results show a small increase
    (~1%) of accuracy in crash risk prediction when using PCA compared to when not
    using it.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: García de Soto et al. ([2018](#bib.bib35)) used a FFNN with one hidden layer
    to predict the accident risk. They defined three levels of accident severity and
    predict the risk for each of the three levels. Their dataset is based on 2 years
    of traffic and incident data from 13109 road segments in Switzerland. The data
    from each accident were encoded into 10 features and used as input. Their sensitivity
    analysis reveals that if different FFNNs are trained for different road types
    (e.g. highways and tunnels), the average performance is better than using a single
    FFNN for the entire network with road type as one of the inputs.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: In Yuan et al. ([2018](#bib.bib152)), the authors present Hetero-ConvLSTM, which,
    as the name suggests, is an extension of the ConvLSTM  (Xingjian et al., [2015](#bib.bib147))
    architecture. The authors acknowledge the heterogeneous characteristics of the
    road network and hence, leverage it to produce better performances compared to
    previous work. They train different neural networks for different parts of the
    city and then create an ensemble to predict city-wide accident risk. They report
    an MSE of 0.021 for urban roads and 0.006 for rural roads. For comparison, the
    LSTM model achieves 0.187 and 0.042 for rural and urban roads respectively. Their
    dataset consists of 8192 grids with each having an area of 5x5=25 square kilometres.
    It comprises 8 years of data from various sources (weather, traffic, accidents,
    satellite) in Iowa, USA. The issue of spatial heterogeneity has been taken into
    account by other research. Some examples are Huang et al. ([2019](#bib.bib55)),
    who propose a hierarchical fusion network to handle the temporal, and spatial
    heterogeneity of data and Zhou et al. ([2019](#bib.bib157)), who use an attention
    model to preferentially weight the network similarity factors to predict hourly
    crash risk. Gupta et al. ([2019](#bib.bib47)) use an attention model to handle
    the spatial heterogeneity and report an accuracy of 86.21% using traffic data
    from London.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: 'Online learning:  Fan et al. ([2019](#bib.bib31)) propose an online FC Deep
    learning model to predict accident blackspots. They report accuracies for three
    different types of weather, i.e. 88.70%, 85.19% and 83.33% for sunny, cloudy and
    windy days respectively.'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: 'Table 4: Summary of papers discussed in [section 6.2](#S6.SS2 "6.2 Deep learning
    for non-recurring congestion alleviation ‣ 6 Deep learning for congestion alleviation
    ‣ Applications of deep learning in congestion detection, prediction and alleviation:
    A survey") (Deep learning for non-recurring congestion alleviation)'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: '| Paper | DNN architecture | Predicted variable | Performance | Data source
    | Unique aspect |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
- en: '| (Najjar et al., [2017](#bib.bib90)) | AlexNet, 3 levels | Multi-class classification
    | 73.1% | Satellite imagery | Transfer learning trained on New York validated
    on Denver |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
- en: '| (Gupta et al., [2019](#bib.bib47)) | ResNet | Multi-class classification
    | 74.77% for NY 76.2% for Denver | Satellite imagery | Transfer learning trained
    on London validated on NY and Denver |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
- en: '| Zhao et al. ([2018](#bib.bib156)) | FFNN (2 hidden layers) | Crash risk prediction
    | – | 1 year car accidents data from UK | Used PCA to handle correlated readings
    from nearby sensors |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
- en: '| (García de Soto et al., [2018](#bib.bib35)) | FFNN (one hidden layer) | Accident
    risk for different severity levels | MAPE (based on accident type) Light: 22·40%
    Severe: 27·00% Fatal: 30·00% | 2 years 13109 road segments from Switzerland |
    Demonstrate that an ensemble of models each trained for a single road type outperforms
    global model |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
- en: '| (Yuan et al., [2018](#bib.bib152)) | (Hetero) ConvLSTM | Accident risk |
    MSE = 0.021 (urban) MSE = 0.006 (rural) | 8192 grids (each 25 sq. km.) Iowa, USA
    | 1\. Leveraged heterogenity of road networks to propose an ensemble 2\. Insights
    into differences between the complexity of urban vs rural |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
- en: '| (Fan et al., [2019](#bib.bib31)) | FFNN | Accident black spots | Accuracy
    (based on weather type) Sunny: 88.70% Cloudy: 85.19% Windy: 83.33% | 6391 accident
    records over 18 months from Jiangsu Province China | 1\. Online learning 2\. Highlights
    importance of weather conditions |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
- en: 6.3 Potential link between non-recurring and recurring congestion alleviation
  id: totrans-239
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The statement ‘accidents cause congestion’ is intuitive and undisputed but
    the reverse causality has not been established in a universal fashion. Retallack
    and Ostendorf ([2019](#bib.bib104)) present a detailed summary of the current
    understanding of the relationship between traffic congestion and accidents. They
    report that researchers are far from reaching a consensus on the question, with
    conflicting reports from studies based on different types of roads and different
    countries of study. However, they find that a U-shaped curve between congestion
    levels and accidents appears to be a common observation in recent work which used
    a sufficiently large number of data points ([Figure 9](#S6.F9 "Figure 9 ‣ 6.3
    Potential link between non-recurring and recurring congestion alleviation ‣ 6
    Deep learning for congestion alleviation ‣ Applications of deep learning in congestion
    detection, prediction and alleviation: A survey")). A U-shaped curve implies that
    very high and very low levels of traffic density result in a higher number of
    accidents. If the U-shaped curve can be reproduced in future research, this can
    have far-reaching consequences in the attempts to reduce accidents and congestion.
    As shown in the [Figure 9](#S6.F9 "Figure 9 ‣ 6.3 Potential link between non-recurring
    and recurring congestion alleviation ‣ 6 Deep learning for congestion alleviation
    ‣ Applications of deep learning in congestion detection, prediction and alleviation:
    A survey"), it would imply that the efforts to reduce accidents would also reduce
    congestion to levels of maximum flow of traffic (Pasidis, [2019](#bib.bib94)).
    In addition to the number of accidents, another important factor to consider is
    the severity of accidents. Establishing the causality behind the severity of accidents
    is a topic covered in road safety studies and is outside the scope of this survey.
    The interested reader is referred to (Wang et al., [2013](#bib.bib131)). Here,
    we have included papers that use deep learning methods for the prediction of accident
    severity.'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/ddb39970e9ee5fdb1282f3e9a57589da.png)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
- en: 'Figure 9: A hypothetical U-shaped curve between accidents and congestion. Such
    curves have been observed in recent research.'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: 7 Challenges and future directions
  id: totrans-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 7.1 Challenges
  id: totrans-244
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this section, we summarise the challenges which were apparent while compiling
    the research papers for this survey. These challenges have been discussed in detail
    in the summary of specific sections.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: 7.1.1 Identifying the state-of-the-art model
  id: totrans-246
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In order to establish the state-of-the-art, the relevant work should be given
    a fair comparison. Fairness can be ensured by comparing the performance using
    just one parameter at a time – while keeping all the other parameters unchanged.
    Ensuring such fairness is a challenging task in any field of research. Here, we
    discuss the challenges specific to the prediction tasks discussed in this survey.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: '1.'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Different definitions of congestion based on different traffic variables: As
    discussed in [section 2.3](#S2.SS3 "2.3 Definition and classification of congestion
    ‣ 2 Preliminaries ‣ Applications of deep learning in congestion detection, prediction
    and alleviation: A survey"), congestion can be defined using different traffic
    variables. Due to the lack of a unified relationship between these variables,
    such differences in the choice of variables make a comparison between the reported
    prediction performances difficult.'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '2.'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Different quantisations of the same traffic variable: Even if two research
    papers use the same traffic variable to define congestion, their quantisations
    might differ. For example, if the congestion is defined based on speed, one paper
    might present a binary prediction task (‘jam’ or ‘no jam’), while the other might
    present a multi-level variable (‘low traffic’, ‘heavy traffic’ , ‘total jam’).
    If the dataset is fixed, a binary prediction task is usually easier to solve than
    a multi-class prediction task (Allwein et al., [2000](#bib.bib5)).'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '3.'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Different resolutions of data across countries: Researchers from different
    countries might work on the same prediction task but it may be unfair to compare
    their performance levels due to the differences in data resolution. Such differences
    in resolution can be attributed to the infrastructure needed for data collection.
    Data collected from static sensors on roads in developed countries might have
    a higher resolution in space as well as time. The difference in the resolution
    of data implies a difference in the complexity of the prediction task at hand.
    Whether an increase in the resolution of data makes a prediction task easier or
    more difficult, is an interesting question. Such differences in the relative difficulty
    of prediction tasks can be better explained by an example. Let us consider two
    researchers A and B attempting to predict the traffic speed for the next 5 minutes.
    A has access to historical traffic speed data at a resolution of 5 seconds while
    B has access to historical traffic speed data at a resolution of 1 second. Now,
    if A and B both attempt to predict the traffic speed at 5-second resolution, B’s
    task is easier compared to A – due to the fact that B has more information for
    the same task. However, if both A and B attempt to predict the traffic speed at
    the same resolution as their input data (A: 5 seconds; B: 1 second), it becomes
    challenging to comment on whose task is easier. It should be noted that some data
    sources significantly reduce this problem of differences in the resolution of
    data. Data collected using distributed sensors (e.g. GPS data) have a similar
    resolution across different countries. An empirical study on such differences
    in relative difficulties of prediction tasks has been presented in Ma et al. ([2015](#bib.bib80)).'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '4.'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Different lengths of prediction horizons: Varying lengths of the prediction
    horizon result in different levels of complexity of the prediction task. As noted
    in Yu et al. ([2017](#bib.bib150)), the performance of most models degrades when
    the length of the prediction horizon increases. This degradation of performance
    with the increase of prediction horizon is a common finding across research (Wang
    et al., [2016](#bib.bib132); Di et al., [2019](#bib.bib27)). We like to highlight
    the obvious fact that the length of the prediction horizon and usefulness of the
    prediction task are inversely related.'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '5.'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Different metrics used to measure performance: The choice of different metrics
    for performance poses difficulty while comparing different research. The demonstration
    of superior model performance using one metric does not necessarily imply superior
    performance when using some other metric. Congestion prediction tasks are examples
    of imbalanced datasets, thus the most common metrics for classification tasks
    (for example, accuracy) are usually misleading. In such a scenario, accuracy carries
    significance only when it is reported along with other metrics carrying complementary
    information (for example, False Positive rates). A systematic study of the choice
    of metrics for classification tasks is presented in Sokolova and Lapalme ([2009](#bib.bib117)).'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '6.'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Differences in the heterogeneity of traffic stream: Heterogeneous traffic stream
    is a common occurrence in developing countries due to a mix of different types
    of vehicles and high variation in driving behaviour. Correspondingly, we observe
    a systematic drop in the model performance when deep learning models are used
    for congestion-related tasks in developing countries. We observed this trend to
    be valid in each of the congestion detection, prediction and alleviation sections.'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: A recent attempt to define and maintain a state-of-the-art in various domains
    is [https://paperswithcode.com/sota](https://paperswithcode.com). Their website
    presents leader boards for different tasks across various domains, including the
    domain of traffic prediction. This portal is slowly gaining popularity amongst
    the machine learning community.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: 7.1.2 Lack of online learning
  id: totrans-261
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Online learning (often called continuous learning) refers to the process of
    updating a model as new data arrives. In the absence of online learning, researchers
    gather all data before attempting to model the behaviour of the system. They then
    split the data points into three parts – train, validation, and test. The model
    is trained using the train data. In order to tune the hyper-parameters (e.g. number
    of layers in the neural network), the model performance is evaluated on the validation
    data. Finally, after the entire training process is complete, the model performance
    is evaluated on the test data. The model is said to generalise well if the model
    performance is similar for both the validation and the test data. The approach
    mentioned above appears to conform to the standard practices of machine learning.
    However, an important caveat is that in principle, the labels for the test data
    should be unseen not only to the model but also the modeller. When the test data
    are available to the modeller beforehand, extreme care needs to be taken to ensure
    that any form of target leakage does not take place. Wujek et al. ([2016](#bib.bib145))
    summarise the best practices to avoid any unintentional target leakage.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: Online learning eliminates this challenge completely. Additionally, online learning
    helps us model the real world scenario more closely. In the real-world deployment
    of a traffic prediction model, the test data are available only after the deployment
    of the solution. However, we could not find many examples of research papers using
    models with online learning capabilities. This might be due to the security and
    privacy concerns with real-time traffic data being relayed to researchers.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: 7.2 Conclusions and future research directions
  id: totrans-264
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This section highlights possible directions for future research. These directions
    are proposed in answer to the challenges which were presented in the previous
    subsection. Here, we highlight the importance of data standardisation, potential
    synergies with other domains of work and the potential synergies between the simulation-based
    and deep learning approaches for traffic prediction tasks.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
- en: 7.2.1 Standardised datasets and competitions
  id: totrans-266
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The success of deep learning is an example of how good quality data can transform
    a domain of work—the most notable example is Computer Vision (CV). CV refers to
    the umbrella term for tasks pertaining to the extraction of information from images.
    Some examples of specific CV tasks are object localisation, image classification
    and facial recognition. Given some constraints, the deep learning methods have
    achieved near-human performance levels for CV tasks. The two biggest impetuses
    to CV research were the release of the ImageNet (Deng et al., [2009](#bib.bib26))
    dataset and its use in the Pascal Visual Object recognition (Everingham et al.,
    [2010](#bib.bib30)). It was noticed that the deep neural networks which had been
    around for a few decades, started performing very well when trained on ImageNet.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: For the domain of traffic congestion prediction, several new possibilities arise
    with access to standardised datasets. First, the performance of deep learning
    models improves with increasing amounts of good-quality data. Second, access to
    common databases can allow the practitioners to establish the state-of-the-art
    in a disambiguous fashion. Third, it can open avenues for transfer learning where
    the deep neural network trained on a huge traffic dataset can be readily applied
    to a new city for which traffic data might not be available (Tan et al., [2018](#bib.bib125)).
    Apart from these, standardisation also addresses the problem of train-validation-test
    split as mentioned in the previous subsection, since the test data are not visible
    to the individuals participating in the competition.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
- en: Some exclusive efforts for data standardisation in traffic prediction are (Snyder
    and Do, [2019](#bib.bib116)), (Wang et al., [2018](#bib.bib134)), (Cheng et al.,
    [2018](#bib.bib18)) and (Moosavi et al., [2019](#bib.bib88)). A list of the latest
    sources of publicly available traffic data is maintained at the [website](https://www.polymtl.ca/wikitransport/index.php?title=Public_Transportation_Datasets)
    of ‘Research in Intelligent Transportation and Road Safety at Polytechnique Montréal’,
    though videos and images form the majority of the list. Traffic prediction tasks
    are also gaining popularity in the competition tracks at machine learning conferences.
    Some recent examples are [traffic4cast competition at NIPS, 2020](https://www.iarai.ac.at/traffic4cast/)
    and [Night-owls competition at CVPR, 2020](https://sites.google.com/view/cvpr20-scalability/competitions).
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: 7.2.2 Similar prediction tasks in other domains
  id: totrans-270
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Papers using machine learning for internet traffic classification have been
    popular in the Wireless Networks community for a long time. Some prediction tasks
    in wireless networks are similar to traffic prediction. Survey papers from the
    wireless network domain might hold a treasure trove of ideas for transportation
    researchers. Some examples of relevant surveys include (Mao et al., [2018](#bib.bib83);
    Zhang et al., [2019](#bib.bib154)) and (Nguyen and Armitage, [2008](#bib.bib93)).
    A routing protocol is the counterpart of a traffic signal control strategy in
    transportation networks. Hence, protocol-free wireless routing is akin to adaptive
    signal control. Making wireless networks free from (fixed) protocols is discussed
    in Tang et al. ([2017](#bib.bib126)). Yu et al. ([2019](#bib.bib151)) investigate
    using deep-reinforcement learning to handle the heterogeneity in wireless networks.
    Similarly, congestion-aware routing of wireless networks (Chen et al., [2007](#bib.bib17))
    is the counterpart of congestion-alleviation algorithms in transportation. Weather-forecasting
    is another domain where the prediction tasks and datasets are similar to transportation.
    A classic example is (Xingjian et al., [2015](#bib.bib147)), which has resulted
    in a large number of applications in traffic (Wang et al., [2020](#bib.bib136)).
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
- en: 7.2.3 Synergies between model-driven and deep learning based approaches
  id: totrans-272
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Deep neural networks have high predictive power and can be trained much faster
    and with little effort compared to calibrating a traffic simulator. Deep learning
    models lack interpretability. The inherent interpretable nature of traffic simulators
    can be leveraged by deep learning researchers when both methods are used in conjunction.
    Such synergies are already being explored in deep reinforcement learning-based
    approaches for traffic signal control. Some researchers have used microscopic
    traffic simulators to generate data for congestion labels, thereby solving the
    class imbalance problem. More such efforts in the direction of creating synergies
    between the two approaches are needed.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: 8 Declaration of Competing Interest
  id: totrans-274
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The authors declare that they have no known competing interests that could have
    influenced the research reported in this paper.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: 9 Acknowledgements
  id: totrans-276
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This work is an outcome of the Future Resilient Systems project at the Singapore-ETH
    Centre (SEC) supported by the National Research Foundation, Prime Minister’s Office,
    Singapore under its Campus for Research Excellence and Technological Enterprise
    (CREATE) programme. The authors would like to acknowledge the valuable feedback
    and recommendations received from Dr. Yi Wang from Future Resilient Systems and
    Dr. Jimi B. Oke from University of Massachusetts, Amherst. The authors would also
    like to acknowledge the three anonymous reviewers for their valuable comments
    and suggestions.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
- en: References
  id: totrans-278
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Adnan et al. (2016) Adnan, M., F. C. Pereira, C. M. L. Azevedo, K. Basak, M. Lovric,
    S. Raveau, Y. Zhu, J. Ferreira, C. Zegras, and M. Ben-Akiva (2016). Simmobility:
    A multi-scale integrated agent-based simulation platform. In 95th Annual Meeting
    of the Transportation Research Board Forthcoming in Transportation Research Record.'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Afrin and Yodo (2020) Afrin, T. and N. Yodo (2020). A survey of road traffic
    congestion measures towards a sustainable and resilient transportation system.
    Sustainability 12(11), 4660.
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Albawi et al. (2017) Albawi, S., T. A. Mohammed, and S. Al-Zawi (2017). Understanding
    of a convolutional neural network. In 2017 International Conference on Engineering
    and Technology (ICET), pp.  1–6\. Ieee.
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aljamal et al. (2018) Aljamal, M. A., H. A. Rakha, J. Du, and I. El-Shawarby
    (2018). Comparison of microscopic and mesoscopic traffic modeling tools for evacuation
    analysis. In 2018 21st International Conference on Intelligent Transportation
    Systems (ITSC), pp.  2321–2326\. IEEE.
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Allwein et al. (2000) Allwein, E. L., R. E. Schapire, and Y. Singer (2000).
    Reducing multiclass to binary: A unifying approach for margin classifiers. Journal
    of machine learning research 1(Dec), 113–141.'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andreoletti et al. (2019) Andreoletti, D., S. Troia, F. Musumeci, S. Giordano,
    G. Maier, and M. Tornatore (2019). Network traffic prediction based on diffusion
    convolutional recurrent neural networks. In IEEE INFOCOM 2019-IEEE Conference
    on Computer Communications Workshops (INFOCOM WKSHPS), pp.  246–251\. IEEE.
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Axhausen et al. (2016) Axhausen, K., A. Horni, and K. Nagel (2016). The multi-agent
    transport simulation MATSim. Ubiquity Press.
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Balakrishna et al. (2013) Balakrishna, R., M. Ben-Akiva, J. Bottom, and S. Gao
    (2013). Information impacts on traveler behavior and network performance: State
    of knowledge and future directions. Advances in dynamic network modeling in complex
    transportation systems, 193–224.'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Barth and Boriboonsomsin (2009) Barth, M. and K. Boriboonsomsin (2009). Traffic
    congestion and greenhouse gases. Access Magazine 1(35), 2–9.
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Behrisch et al. (2011) Behrisch, M., L. Bieker, J. Erdmann, and D. Krajzewicz
    (2011). Sumo–simulation of urban mobility: an overview. In Proceedings of SIMUL
    2011, The Third International Conference on Advances in System Simulation. ThinkMind.'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ben-Akiva et al. (1998) Ben-Akiva, M., M. Bierlaire, H. Koutsopoulos, and R. Mishalani
    (1998). Dynamit: a simulation-based system for traffic prediction. In DACCORD
    short term forecasting workshop, pp.  1–12. Citeseer.'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben-David (2008) Ben-David, A. (2008). Comparison of classification accuracy
    using cohen’s weighted kappa. Expert Systems with Applications 34(2), 825–832.
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Borysov et al. (2019) Borysov, S. S., J. Rich, and F. C. Pereira (2019). How
    to generate micro-agents? a deep generative modeling approach to population synthesis.
    Transportation Research Part C: Emerging Technologies 106, 73–97.'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Casas et al. (2010) Casas, J., J. L. Ferrer, D. Garcia, J. Perarnau, and A. Torday
    (2010). Traffic simulation with aimsun. In Fundamentals of traffic simulation,
    pp.  173–232. Springer.
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Cassidy and Bertini (1999) Cassidy, M. J. and R. L. Bertini (1999). Some traffic
    features at freeway bottlenecks. Transportation Research Part B: Methodological 33(1),
    25–42.'
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chakraborty et al. (2018) Chakraborty, P., Y. O. Adu-Gyamfi, S. Poddar, V. Ahsani,
    A. Sharma, and S. Sarkar (2018). Traffic congestion detection from camera images
    using deep convolution neural networks. Transportation Research Record 2672(45),
    222–231.
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chen et al. (2007) Chen, X., H. M. Jones, and A. D. S. Jayalath (2007). Congestion-aware
    routing protocol for mobile ad hoc networks. In 2007 IEEE 66th Vehicular Technology
    Conference, pp. 21–25.
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Cheng et al. (2018) Cheng, X., R. Zhang, J. Zhou, and W. Xu (2018). Deeptransport:
    Learning spatial-temporal dependency for traffic condition forecasting. In 2018
    International Joint Conference on Neural Networks (IJCNN), pp.  1–8\. IEEE.'
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chung et al. (2014) Chung, J., C. Gulcehre, K. Cho, and Y. Bengio (2014). Empirical
    evaluation of gated recurrent neural networks on sequence modeling. arXiv preprint
    arXiv:1412.3555.
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chung (2011) Chung, Y. (2011). Quantification of nonrecurrent congestion delay
    caused by freeway accidents and analysis of causal factors. Transportation research
    record 2229(1), 8–18.
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connie et al. (2018) Connie, L., C. K. On, and A. Patricia (2018). A review
    of automatic license plate recognition system in mobile based platform. Journal
    of Telecommunication, Electronic and Computer Engineering (JTEC) 10(3-2), 77–82.
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daganzo and Daganzo (1997) Daganzo, C. and C. Daganzo (1997). Fundamentals of
    transportation and traffic operations, Volume 30. Pergamon Oxford.
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: De Fabritiis et al. (2008) De Fabritiis, C., R. Ragona, and G. Valenti (2008).
    Traffic estimation and prediction based on real time floating car data. In 2008
    11th international IEEE conference on intelligent transportation systems, pp. 
    197–203\. IEEE.
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'de Palma and Lindsey (2011) de Palma, A. and R. Lindsey (2011). Traffic congestion
    pricing methodologies and technologies. Transportation Research Part C: Emerging
    Technologies 19(6), 1377–1399.'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'de Palma et al. (2018) de Palma, A., S. Proost, R. Seshadri, and M. Ben-Akiva
    (2018). Congestion tolling-dollars versus tokens: A comparative analysis. Transportation
    Research Part B: Methodological 108, 261–280.'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deng et al. (2009) Deng, J., W. Dong, R. Socher, L.-J. Li, K. Li, and L. Fei-Fei
    (2009). Imagenet: A large-scale hierarchical image database. In 2009 IEEE conference
    on computer vision and pattern recognition, pp.  248–255\. Ieee.'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Di et al. (2019) Di, X., Y. Xiao, C. Zhu, Y. Deng, Q. Zhao, and W. Rao (2019).
    Traffic congestion prediction by spatiotemporal propagation patterns. In 2019
    20th IEEE International Conference on Mobile Data Management (MDM), pp.  298–303\.
    IEEE.
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ding et al. (2019) Ding, W., X. Jing, Z. Yan, and L. T. Yang (2019). A survey
    on data fusion in internet of things: Towards secure and privacy-preserving fusion.
    Information Fusion 51, 129–144.'
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dusparic et al. (2016) Dusparic, I., J. Monteil, and V. Cahill (2016). Towards
    autonomic urban traffic control with collaborative multi-policy reinforcement
    learning. In 2016 IEEE 19th International Conference on Intelligent Transportation
    Systems (ITSC), pp.  2065–2070.
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Everingham et al. (2010) Everingham, M., L. Van Gool, C. K. Williams, J. Winn,
    and A. Zisserman (2010). The pascal visual object classes (voc) challenge. International
    journal of computer vision 88(2), 303–338.
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fan et al. (2019) Fan, Z., C. Liu, D. Cai, and S. Yue (2019). Research on black
    spot identification of safety in urban traffic accidents based on machine learning
    method. Safety science 118, 607–616.
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fouladgar et al. (2017) Fouladgar, M., M. Parchami, R. Elmasri, and A. Ghaderi
    (2017). Scalable deep traffic flow neural networks for urban traffic congestion
    prediction. In 2017 International Joint Conference on Neural Networks (IJCNN),
    pp.  2251–2258.
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fukuda et al. (2020) Fukuda, S., H. Uchida, H. Fujii, and T. Yamada (2020).
    Short-term prediction of traffic flow under incident conditions using graph convolutional
    recurrent neural network and traffic simulation. IET Intelligent Transport Systems.
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gao et al. (2020) Gao, J., P. Li, Z. Chen, and J. Zhang (2020). A survey on
    deep learning for multimodal data fusion. Neural Computation 32(5), 829–864.
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: García de Soto et al. (2018) García de Soto, B., A. Bumbacher, M. Deublein,
    and B. T. Adey (2018). Predicting road traffic accidents using artificial neural
    network models. Infrastructure Asset Management 5(4), 132–144.
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Gartner et al. (2002) Gartner, N. H., C. J. Messer, and A. Rathi (2002). Traffic
    flow theory-a state-of-the-art report: revised monograph on traffic flow theory.
    Transportation Research Board (TRB) Special Report.'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Genders and Razavi (2016) Genders, W. and S. Razavi (2016). Using a deep reinforcement
    learning agent for traffic signal control. arXiv preprint arXiv:1611.01142.
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Genders and Razavi (2019) Genders, W. and S. Razavi (2019). Asynchronous n-step
    q-learning adaptive traffic signal control. Journal of Intelligent Transportation
    Systems 23(4), 319–331.
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gerlough and Huber (1976) Gerlough, D. L. and M. J. Huber (1976). Traffic flow
    theory. Transportation Research Board (TRB) Special Report.
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Geroliminis and Sun (2011) Geroliminis, N. and J. Sun (2011). Hysteresis phenomena
    of a macroscopic fundamental diagram in freeway networks. Procedia-Social and
    Behavioral Sciences 17, 213–228.
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Girshick et al. (2014) Girshick, R., J. Donahue, T. Darrell, and J. Malik (2014).
    Rich feature hierarchies for accurate object detection and semantic segmentation.
    In Proceedings of the IEEE conference on computer vision and pattern recognition,
    pp.  580–587.
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Golledge (1995) Golledge, R. G. (1995). Path selection and route preference
    in human navigation: A progress report. In International conference on spatial
    information theory, pp. 207–222\. Springer.'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Goodfellow et al. (2016) Goodfellow, I., Y. Bengio, and A. Courville (2016).
    Deep learning. MIT press.
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Google (2020) Google (2020). How ai helps predict traffic and determine routes.
    Internet.
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Greff et al. (2016) Greff, K., R. K. Srivastava, J. Koutník, B. R. Steunebrink,
    and J. Schmidhuber (2016). Lstm: A search space odyssey. IEEE transactions on
    neural networks and learning systems 28(10), 2222–2232.'
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Gregurić et al. (2020) Gregurić, M., K. Kušić, F. Vrbanić, and E. Ivanjko (2020).
    Variable speed limit control based on deep reinforcement learning: A possible
    implementation. In 2020 International Symposium ELMAR, pp.  67–72.'
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gupta et al. (2019) Gupta, S., D. Srivatsav, A. V. Subramanyam, and P. Kumaraguru
    (2019). Attentional road safety networks. In 2019 IEEE International Conference
    on Image Processing (ICIP), pp.  1600–1604.
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Haberman (2019) Haberman, S. J. (2019). Measures of agreement versus measures
    of prediction accuracy. ETS Research Report Series 2019(1), 1–23.
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hall (1996) Hall, F. L. (1996). Traffic stream characteristics. Traffic Flow
    Theory. US Federal Highway Administration 36.
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hallenbeck et al. (2003) Hallenbeck, M. E., J. Ishimaru, J. Nee, et al. (2003).
    Measurement of recurring versus non-recurring congestion. Technical report, Washington
    (State). Dept. of Transportation.
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: He et al. (2017) He, K., G. Gkioxari, P. Dollár, and R. Girshick (2017). Mask
    r-cnn. In Proceedings of the IEEE international conference on computer vision,
    pp.  2961–2969.
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: He et al. (2016) He, K., X. Zhang, S. Ren, and J. Sun (2016). Deep residual
    learning for image recognition. In Proceedings of the IEEE conference on computer
    vision and pattern recognition, pp.  770–778.
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hennessy and Wiesenthal (1999) Hennessy, D. A. and D. L. Wiesenthal (1999).
    Traffic congestion, driver stress, and driver aggression. Aggressive Behavior:
    Official Journal of the International Society for Research on Aggression 25(6),
    409–423.'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hochreiter and Schmidhuber (1997) Hochreiter, S. and J. Schmidhuber (1997).
    Long short-term memory. Neural computation 9(8), 1735–1780.
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Huang et al. (2019) Huang, C., C. Zhang, P. Dai, and L. Bo (2019). Deep dynamic
    fusion network for traffic accident forecasting. In Proceedings of the 28th ACM
    International Conference on Information and Knowledge Management, pp.  2673–2681.
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Huang and Agarwal (2020) Huang, J. and S. Agarwal (2020). Physics informed deep
    learning for traffic state estimation. In 2020 IEEE 23rd International Conference
    on Intelligent Transportation Systems (ITSC), pp.  1–6\. IEEE.
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Immers and Logghe (2002) Immers, L. and S. Logghe (2002). Traffic flow theory.
    Faculty of Engineering, Department of Civil Engineering, Section Traffic and Infrastructure,
    Kasteelpark Arenberg 40(21).
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Impedovo et al. (2019) Impedovo, D., F. Balducci, V. Dentamaro, and G. Pirlo
    (2019). Vehicular traffic congestion classification by visual features and deep
    learning approaches: a comparison. Sensors 19(23), 5213.'
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Janson (1991) Janson, B. N. (1991). Dynamic traffic assignment for urban road
    networks. Transportation Research Part B: Methodological 25(2-3), 143–161.'
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Jiang et al. (2018) Jiang, H., D. Sun, V. Jampani, M.-H. Yang, E. Learned-Miller,
    and J. Kautz (2018). Super slomo: High quality estimation of multiple intermediate
    frames for video interpolation. In Proceedings of the IEEE Conference on Computer
    Vision and Pattern Recognition, pp.  9000–9008.'
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jozefowicz et al. (2015) Jozefowicz, R., W. Zaremba, and I. Sutskever (2015).
    An empirical exploration of recurrent network architectures. In International
    conference on machine learning, pp. 2342–2350\. PMLR.
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Khan and Ullah (2019) Khan, S. D. and H. Ullah (2019). A survey of advances
    in vision-based vehicle re-identification. Computer Vision and Image Understanding 182,
    50–63.
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Kleinrock (2018) Kleinrock, L. (2018). Internet congestion control using the
    power metric: Keep the pipe just full, but no fuller. Ad hoc networks 80, 142–157.'
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Krizhevsky et al. (2012) Krizhevsky, A., I. Sutskever, and G. E. Hinton (2012).
    Imagenet classification with deep convolutional neural networks. In Advances in
    neural information processing systems, pp. 1097–1105.
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Kurniawan et al. (2018) Kurniawan, J., S. G. Syahra, C. K. Dewa, and Afiahayati
    (2018). Traffic congestion detection: Learning from cctv monitoring images using
    convolutional neural network. Procedia Computer Science 144, 291 – 297. INNS Conference
    on Big Data and Deep Learning.'
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kyaw et al. (2018) Kyaw, N. N., G. Sinha, and K. L. Mon (2018). License plate
    recognition of myanmar vehicle number plates a critical review. In 2018 IEEE 7th
    Global Conference on Consumer Electronics (GCCE), pp.  771–774\. IEEE.
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LeCun et al. (1988) LeCun, Y., D. Touresky, G. Hinton, and T. Sejnowski (1988).
    A theoretical framework for back-propagation. In Proceedings of the 1988 connectionist
    models summer school, Volume 1, pp.  21–28.
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'LeNail (2019) LeNail, A. (2019). Nn-svg: Publication-ready neural network architecture
    schematics. Journal of Open Source Software 4(33), 747.'
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Li et al. (2020) Li, G., W. Lai, X. Sui, X. Li, X. Qu, T. Zhang, and Y. Li (2020).
    Influence of traffic congestion on driver behavior in post-congestion driving.
    Accident Analysis & Prevention 141, 105508.
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Li et al. (2020) Li, L., X. Sheng, B. Du, Y. Wang, and B. Ran (2020). A deep
    fusion model based on restricted boltzmann machines for traffic accident duration
    prediction. Engineering Applications of Artificial Intelligence 93, 103686.
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Li et al. (2019) Li, Y., Y. Guo, J. Lu, and S. Peeta (2019). Impacts of congestion
    pricing and reward strategies on automobile travelers’ morning commute mode shift
    decisions. Transportation research part A: policy and practice 125, 72–88.'
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Li et al. (2017a) Li, Y., R. Yu, C. Shahabi, and Y. Liu (2017a). Diffusion
    convolutional recurrent neural network: Data-driven traffic forecasting. arXiv
    preprint arXiv:1707.01926.'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Li et al. (2017b) Li, Y., R. Yu, C. Shahabi, and Y. Liu (2017b). Diffusion
    convolutional recurrent neural network: Data-driven traffic forecasting. arXiv
    preprint arXiv:1707.01926.'
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Lin et al. (2014a) Lin, T.-Y., M. Maire, S. Belongie, J. Hays, P. Perona, D. Ramanan,
    P. Dollár, and C. L. Zitnick (2014a). Microsoft coco: Common objects in context.
    In European conference on computer vision, pp.  740–755. Springer.'
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Lin et al. (2014b) Lin, T.-Y., M. Maire, S. Belongie, J. Hays, P. Perona, D. Ramanan,
    P. Dollár, and C. L. Zitnick (2014b). Microsoft coco: Common objects in context.
    In European conference on computer vision, pp.  740–755. Springer.'
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Lin and Li (2020) Lin, Y. and R. Li (2020). Real-time traffic accidents post-impact
    prediction: Based on crowdsourcing data. Accident Analysis & Prevention 145, 105696.'
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Litman (2016) Litman, T. (2016). Smart congestion relief: Comprehensive analysis
    of traffic congestion costs and congestion reduction benefits.'
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liu et al. (2020) Liu, J., M. Barreau, M. Cicic, and K. H. Johansson (2020).
    Learning-based traffic state reconstruction using probe vehicles. arXiv preprint
    arXiv:2011.05031.
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liu et al. (2017) Liu, Y., H. Zheng, X. Feng, and Z. Chen (2017). Short-term
    traffic flow prediction with conv-lstm. In 2017 9th International Conference on
    Wireless Communications and Signal Processing (WCSP), pp.  1–6\. IEEE.
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ma et al. (2015) Ma, X., H. Yu, Y. Wang, and Y. Wang (2015). Large-scale transportation
    network congestion evolution prediction using deep learning theory. PloS one 10(3),
    e0119044.
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mahmassani et al. (2004) Mahmassani, H. S., H. Sbayti, and X. Zhou (2004). Dynasmart-p
    version 1.0 user’s guide. Maryland Transportation Initiative, College Park, Maryland 137.
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Manifest (2018) Manifest (2018). The popularity of google maps: Trends in navigation
    apps in 2018. Internet.'
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Mao et al. (2018) Mao, Q., F. Hu, and Q. Hao (2018). Deep learning for intelligent
    wireless networks: A comprehensive survey. IEEE Communications Surveys & Tutorials 20(4),
    2595–2621.'
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'McGroarty (2010) McGroarty, J. (2010). Recurring and non-recurring congestion:
    Causes, impacts, and solutions. Neihoff Urban Studio–W10, University of Cincinnati.'
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mnih et al. (2015) Mnih, V., K. Kavukcuoglu, D. Silver, A. A. Rusu, J. Veness,
    M. G. Bellemare, A. Graves, M. Riedmiller, A. K. Fidjeland, G. Ostrovski, et al.
    (2015). Human-level control through deep reinforcement learning. nature 518(7540),
    529–533.
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mo et al. (2020) Mo, Z., X. Di, and R. Shi (2020). A physics-informed deep learning
    paradigm for car-following models. arXiv preprint arXiv:2012.13376.
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mohamed (2017) Mohamed, I. S. (2017). Detection and tracking of pallets using
    a laser rangefinder and machine learning techniques. Ph. D. thesis, European Master
    on Advanced Robotics+(EMARO+), University of Genova, Italy.
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Moosavi et al. (2019) Moosavi, S., M. H. Samavatian, S. Parthasarathy, R. Teodorescu,
    and R. Ramnath (2019). Accident risk prediction based on heterogeneous sparse
    data: New dataset and insights. In Proceedings of the 27th ACM SIGSPATIAL International
    Conference on Advances in Geographic Information Systems, pp.  33–42.'
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nagel and Rickert (2001) Nagel, K. and M. Rickert (2001). Parallel implementation
    of the transims micro-simulation. Parallel Computing 27(12), 1611–1639.
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Najjar et al. (2017) Najjar, A., S. Kaneko, and Y. Miyanaga (2017). Combining
    satellite imagery and open data to map road safety. In Proceedings of the Thirty-First
    AAAI Conference on Artificial Intelligence, pp.  4524–4530.
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Newell (1989) Newell, G. F. (1989). Theory of highway traffic signals. ITS Reports 1989(07).
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Nguyen et al. (2018) Nguyen, H., L.-M. Kieu, T. Wen, and C. Cai (2018). Deep
    learning methods in transportation domain: a review. IET Intelligent Transport
    Systems 12(9), 998–1004.'
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nguyen and Armitage (2008) Nguyen, T. T. T. and G. Armitage (2008). A survey
    of techniques for internet traffic classification using machine learning. IEEE
    Communications Surveys Tutorials 10(4), 56–76.
  id: totrans-371
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pasidis (2019) Pasidis, I. (2019). Congestion by accident? a two-way relationship
    for highways in england. Journal of transport geography 76, 301–314.
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Polson and Sokolov (2017) Polson, N. G. and V. O. Sokolov (2017). Deep learning
    for short-term traffic flow prediction. Transportation Research Part C: Emerging
    Technologies 79, 1–17.'
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rahman and Hasan (2020) Rahman, R. and S. Hasan (2020). Real-time signal queue
    length prediction using long short-term memory neural network. Neural Computing
    and Applications, 1–14.
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Raissi et al. (2017a) Raissi, M., P. Perdikaris, and G. E. Karniadakis (2017a).
    Physics informed deep learning (part i): Data-driven solutions of nonlinear partial
    differential equations. arXiv preprint arXiv:1711.10561.'
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Raissi et al. (2017b) Raissi, M., P. Perdikaris, and G. E. Karniadakis (2017b).
    Physics informed deep learning (part ii): Data-driven discovery of nonlinear partial
    differential equations.'
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ramezani et al. (2015) Ramezani, M., J. Haddad, and N. Geroliminis (2015).
    Dynamics of heterogeneity in urban networks: aggregated traffic modeling and hierarchical
    control. Transportation Research Part B: Methodological 74, 1–19.'
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ranjan et al. (2020) Ranjan, N., S. Bhandari, H. P. Zhao, H. Kim, and P. Khan
    (2020). City-wide traffic congestion prediction based on cnn, lstm and transpose
    cnn. IEEE Access 8, 81606–81620.
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rashmi and Shantala (2020) Rashmi, C. and C. Shantala (2020). Vehicle density
    analysis and classification using yolov3 for smart cities. In 2020 4th International
    Conference on Electronics, Communication and Aerospace Technology (ICECA), pp. 
    980–986\. IEEE.
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Redmon et al. (2016) Redmon, J., S. Divvala, R. Girshick, and A. Farhadi (2016).
    You only look once: Unified, real-time object detection. In Proceedings of the
    IEEE conference on computer vision and pattern recognition, pp.  779–788.'
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ren et al. (2018) Ren, H., Y. Song, J. Wang, Y. Hu, and J. Lei (2018). A deep
    learning approach to the citywide traffic accident risk prediction. In 2018 21st
    International Conference on Intelligent Transportation Systems (ITSC), pp.  3346–3351.
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Retallack and Ostendorf (2019) Retallack, A. E. and B. Ostendorf (2019). Current
    understanding of the effects of congestion on traffic accidents. International
    journal of environmental research and public health 16(18), 3400.
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Rinne (2008) Rinne, H. (2008). The Weibull distribution: a handbook. CRC press.'
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rummery and Niranjan (1994) Rummery, G. A. and M. Niranjan (1994). On-line Q-learning
    using connectionist systems, Volume 37. Citeseer.
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Schmidhuber (2015) Schmidhuber, J. (2015). Deep learning in neural networks:
    An overview. Neural networks 61, 85–117.'
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Schrank et al. (2012) Schrank, D., T. Lomax, and B. Eisele (2012). 2012 urban
    mobility report. Texas Transportation Institute,[ONLINE]. Available: http://mobility.
    tamu. edu/ums/report.'
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shabestray and Abdulhai (2019) Shabestray, S. M. A. and B. Abdulhai (2019).
    Multimodal intelligent deep (mind) traffic signal controller. In 2019 IEEE Intelligent
    Transportation Systems Conference (ITSC), pp.  4532–4539\. IEEE.
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Shi et al. (2021) Shi, R., Z. Mo, and X. Di (2021). Physicsinformed deep learning
    for traffic state estimation: A hybrid paradigm informed by second-order traffic
    models. In Proceedings of the AAAI Conference on Artificial Intelligence, Volume 35,
    pp.  540–547.'
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shi et al. (2021) Shi, R., Z. Mo, K. Huang, X. Di, and Q. Du (2021). Physics-informed
    deep learning for traffic state estimation. arXiv preprint arXiv:2101.06580.
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shin et al. (2020) Shin, D.-H., K. Chung, and R. C. Park (2020). Prediction
    of traffic congestion based on lstm through correction of missing temporal and
    spatial data. IEEE Access 8, 150784–150796.
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Silver et al. (2017) Silver, D., J. Schrittwieser, K. Simonyan, I. Antonoglou,
    A. Huang, A. Guez, T. Hubert, L. Baker, M. Lai, A. Bolton, et al. (2017). Mastering
    the game of go without human knowledge. nature 550(7676), 354–359.
  id: totrans-391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simonyan and Zisserman (2014) Simonyan, K. and A. Zisserman (2014). Very deep
    convolutional networks for large-scale image recognition. arXiv preprint arXiv:1409.1556.
  id: totrans-392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Smith et al. (1995) Smith, L., R. Beckman, and K. Baggerly (1995). Transims:
    Transportation analysis and simulation system. Technical report, Los Alamos National
    Lab., NM (United States).'
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Snyder and Do (2019) Snyder, C. and M. Do (2019). Streets: A novel camera network
    dataset for traffic flow. In H. Wallach, H. Larochelle, A. Beygelzimer, F. d''Alché-Buc,
    E. Fox, and R. Garnett (Eds.), Advances in Neural Information Processing Systems
    32, pp.  10242–10253\. Curran Associates, Inc.'
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sokolova and Lapalme (2009) Sokolova, M. and G. Lapalme (2009). A systematic
    analysis of performance measures for classification tasks. Information processing
    & management 45(4), 427–437.
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Srivastava et al. (2014) Srivastava, N., G. Hinton, A. Krizhevsky, I. Sutskever,
    and R. Salakhutdinov (2014). Dropout: a simple way to prevent neural networks
    from overfitting. The journal of machine learning research 15(1), 1929–1958.'
  id: totrans-396
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Stopher (2004) Stopher, P. R. (2004). Reducing road congestion: a reality check.
    Transport Policy 11(2), 117–131.'
  id: totrans-397
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sun et al. (2017) Sun, F., A. Dubey, and J. White (2017). Dxnat—deep neural
    networks for explaining non-recurring traffic congestion. In 2017 IEEE International
    Conference on Big Data (Big Data), pp.  2141–2150\. IEEE.
  id: totrans-398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sun et al. (2019) Sun, S., J. Chen, and J. Sun (2019). Traffic congestion prediction
    based on gps trajectory data. International Journal of Distributed Sensor Networks 15(5),
    1550147719847440.
  id: totrans-399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Szegedy et al. (2015) Szegedy, C., W. Liu, Y. Jia, P. Sermanet, S. Reed, D. Anguelov,
    D. Erhan, V. Vanhoucke, and A. Rabinovich (2015). Going deeper with convolutions.
    In Proceedings of the IEEE conference on computer vision and pattern recognition,
    pp.  1–9.
  id: totrans-400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Szepesvári (2010) Szepesvári, C. (2010). Algorithms for reinforcement learning.
    Synthesis lectures on artificial intelligence and machine learning 4(1), Abstract
    section.
  id: totrans-401
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tadikamalla (1980) Tadikamalla, P. R. (1980). A look at the burr and related
    distributions. International Statistical Review/Revue Internationale de Statistique,
    337–344.
  id: totrans-402
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tan et al. (2018) Tan, C., F. Sun, T. Kong, W. Zhang, C. Yang, and C. Liu (2018).
    A survey on deep transfer learning. In International conference on artificial
    neural networks, pp. 270–279\. Springer.
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Tang et al. (2017) Tang, F., B. Mao, Z. M. Fadlullah, N. Kato, O. Akashi, T. Inoue,
    and K. Mizutani (2017). On removing routing protocol from future wireless networks:
    A real-time deep learning approach for intelligent traffic control. IEEE Wireless
    Communications 25(1), 154–160.'
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tian et al. (2018) Tian, Y., K. Zhang, J. Li, X. Lin, and B. Yang (2018). Lstm-based
    traffic flow prediction with missing data. Neurocomputing 318, 297–305.
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Tillema et al. (2013) Tillema, T., E. Ben-Elia, D. Ettema, and J. van Delden
    (2013). Charging versus rewarding: A comparison of road-pricing and rewarding
    peak avoidance in the netherlands. Transport Policy 26, 4–14.'
  id: totrans-406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Treiterer (1975) Treiterer, J. (1975). Investigation of traffic dynamics by
    aerial photogrammetry techniques. Technical report.
  id: totrans-407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: van Wageningen-Kessels et al. (2015) van Wageningen-Kessels, F., H. Van Lint,
    K. Vuik, and S. Hoogendoorn (2015). Genealogy of traffic flow models. EURO Journal
    on Transportation and Logistics 4(4), 445–473.
  id: totrans-408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Wang et al. (2013) Wang, C., M. A. Quddus, and S. G. Ison (2013). The effect
    of traffic and road characteristics on road safety: A review and future research
    direction. Safety science 57, 264–275.'
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Wang et al. (2016) Wang, J., Q. Gu, J. Wu, G. Liu, and Z. Xiong (2016). Traffic
    speed prediction and congestion source exploration: A deep learning method. In
    2016 IEEE 16th International Conference on Data Mining (ICDM), pp.  499–508\.
    IEEE.'
  id: totrans-410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wang et al. (2018) Wang, P., L. Li, Y. Jin, and G. Wang (2018). Detection of
    unwanted traffic congestion based on existing surveillance system using in freeway
    via a cnn-architecture trafficnet. In 2018 13th IEEE Conference on Industrial
    Electronics and Applications (ICIEA), pp.  1134–1139.
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wang et al. (2018) Wang, Q., J. Wan, and Y. Yuan (2018). Locality constraint
    distance metric learning for traffic congestion detection. Pattern Recognition 75,
    272–281.
  id: totrans-412
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wang et al. (2020) Wang, R., K. Kashinath, M. Mustafa, A. Albert, and R. Yu
    (2020). Towards physics-informed deep learning for turbulent flow prediction.
    In Proceedings of the 26th ACM SIGKDD International Conference on Knowledge Discovery
    & Data Mining, pp.  1457–1466.
  id: totrans-413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Wang et al. (2020) Wang, S., J. Cao, and P. Yu (2020). Deep learning for spatio-temporal
    data mining: A survey. IEEE Transactions on Knowledge and Data Engineering.'
  id: totrans-414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Wang et al. (2019) Wang, Y., D. Zhang, Y. Liu, B. Dai, and L. H. Lee (2019).
    Enhancing transportation systems via deep learning: A survey. Transportation Research
    Part C: Emerging Technologies 99, 144 – 163.'
  id: totrans-415
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Wang et al. (2020) Wang, Z., J. Chen, and S. C. Hoi (2020). Deep learning for
    image super-resolution: A survey. IEEE transactions on pattern analysis and machine
    intelligence.'
  id: totrans-416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Watkins (1989) Watkins, C. J. C. H. (1989). Learning from delayed rewards.
  id: totrans-417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Weisbrod et al. (2001) Weisbrod, G., D. Vary, and G. Treyz (2001). Economic
    implications of congestion. Number Project A2-21 FY’97.
  id: totrans-418
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wu et al. (2020) Wu, T., P. Zhou, K. Liu, Y. Yuan, X. Wang, H. Huang, and D. O.
    Wu (2020). Multi-agent deep reinforcement learning for urban traffic light control
    in vehicular networks. IEEE Transactions on Vehicular Technology.
  id: totrans-419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Wu et al. (2020) Wu, Y., H. Tan, L. Qin, and B. Ran (2020). Differential variable
    speed limits control for freeway recurrent bottlenecks via deep actor-critic algorithm.
    Transportation research part C: emerging technologies 117, 102649.'
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wu and Hsu (2021) Wu, Y.-W. and T.-P. Hsu (2021). Mid-term prediction of at-fault
    crash driver frequency using fusion deep learning with city-level traffic violation
    data. Accident Analysis & Prevention 150, 105910.
  id: totrans-421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wu et al. (2020) Wu, Z., S. Pan, F. Chen, G. Long, C. Zhang, and P. S. Yu (2020).
    A comprehensive survey on graph neural networks. IEEE Transactions on Neural Networks
    and Learning Systems, 1–21.
  id: totrans-422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wujek et al. (2016) Wujek, B., P. Hall, and F. Güne\textcommabelows (2016).
    Best practices for machine learning applications. SAS Institute Inc.
  id: totrans-423
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Xie et al. (2020) Xie, P., T. Li, J. Liu, S. Du, X. Yang, and J. Zhang (2020).
    Urban flow prediction from spatiotemporal data using machine learning: A survey.
    Information Fusion 59, 1 – 12.'
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Xingjian et al. (2015) Xingjian, S., Z. Chen, H. Wang, D.-Y. Yeung, W.-K. Wong,
    and W.-c. Woo (2015). Convolutional lstm network: A machine learning approach
    for precipitation nowcasting. In Advances in neural information processing systems,
    pp. 802–810.'
  id: totrans-425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yen et al. (2020) Yen, C.-C., D. Ghosal, M. Zhang, and C.-N. Chuah (2020). A
    deep on-policy learning agent for traffic signal control of multiple intersections.
    In 2020 IEEE 23rd International Conference on Intelligent Transportation Systems
    (ITSC), pp.  1–6\. IEEE.
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Yoshimura (2006) Yoshimura, S. (2006). Mates: Multi-agent based traffic and
    environment simulator-theory, implementation and practical application. Computer
    Modeling in Engineering and Sciences 11(1), 17–25.'
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Yu et al. (2017) Yu, R., Y. Li, C. Shahabi, U. Demiryurek, and Y. Liu (2017).
    Deep learning: A generic approach for extreme condition traffic forecasting. In
    Proceedings of the 2017 SIAM international Conference on Data Mining, pp.  777–785\.
    SIAM.'
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yu et al. (2019) Yu, Y., T. Wang, and S. C. Liew (2019). Deep-reinforcement
    learning multiple access for heterogeneous wireless networks. IEEE Journal on
    Selected Areas in Communications 37(6), 1277–1290.
  id: totrans-429
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Yuan et al. (2018) Yuan, Z., X. Zhou, and T. Yang (2018). Hetero-convlstm:
    A deep learning approach to traffic accident prediction on heterogeneous spatio-temporal
    data. In Proceedings of the 24th ACM SIGKDD International Conference on Knowledge
    Discovery & Data Mining, pp.  984–992.'
  id: totrans-430
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zeng et al. (2018) Zeng, J., J. Hu, and Y. Zhang (2018). Adaptive traffic signal
    control with deep recurrent q-learning. In 2018 IEEE Intelligent Vehicles Symposium
    (IV), pp. 1215–1220\. IEEE.
  id: totrans-431
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Zhang et al. (2019) Zhang, C., P. Patras, and H. Haddadi (2019). Deep learning
    in mobile and wireless networking: A survey. IEEE Communications Surveys & Tutorials 21(3),
    2224–2287.'
  id: totrans-432
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhang et al. (2019) Zhang, J., W. Junhua, and F. Shou’en (2019). Prediction
    of urban expressway total traffic accident duration based on multiple linear regression
    and artificial neural network. In 2019 5th International Conference on Transportation
    Information and Safety (ICTIS), pp.  503–510\. IEEE.
  id: totrans-433
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhao et al. (2018) Zhao, H., T. Mao, H. Yu, M. K. Zhang, and H. Zhu (2018).
    A driving risk prediction algorithm based on pca-bp neural network in vehicular
    communication. In 2018 10th International Conference on Intelligent Human-Machine
    Systems and Cybernetics (IHMSC), Volume 2, pp.  164–169. IEEE.
  id: totrans-434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhou et al. (2019) Zhou, Z., L. Chen, C. Zhu, and P. Wang (2019). Stack resnet
    for short-term accident risk prediction leveraging cross-domain data. In 2019
    Chinese Automation Congress (CAC), pp.  782–787. IEEE.
  id: totrans-435
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
