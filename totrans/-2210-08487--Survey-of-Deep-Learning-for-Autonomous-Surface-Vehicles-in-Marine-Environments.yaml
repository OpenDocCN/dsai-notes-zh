- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-09-06 19:44:00'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: '[2210.08487] Survey of Deep Learning for Autonomous Surface Vehicles in Marine
    Environments'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://ar5iv.labs.arxiv.org/html/2210.08487](https://ar5iv.labs.arxiv.org/html/2210.08487)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Survey of Deep Learning for Autonomous Surface Vehicles in Marine Environments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Yuanyuan Qiao,  Jiaxin Yin,  Wei Wang,   Fábio Duarte,  Jie Yang, and Carlo Ratti
    (Corresponding authors: Yuanyuan Qiao, and Wei Wang.)Yuanyuan Qiao is with Intelligent
    Perception and Computing Research Center, the School of Artificial Intelligence,
    Beijing University of Posts and Telecommunications (BUPT), Beijing 100876, China,
    and also with the MIT Senseable City Lab, Cambridge, MA 02139 USA (e-mail: yyqiao@bupt.edu.cn).Jiaxin
    Yin, and Jie Yang are with Intelligent Perception and Computing Research Center,
    the School of Artificial Intelligence, Beijing University of Posts and Telecommunications
    (BUPT), Beijing 100876, China (e-mail: yinjx@bupt.edu.cn; janeyang@bupt.edu.cn).Wei
    Wang, Fábio Duarte, and Carlo Ratti are with the MIT Senseable City Lab, Cambridge,
    MA 02139 USA (e-mail: wweiwang@mit.edu; fduarte@mit.edu; ratti@mit.edu).'
  prefs: []
  type: TYPE_NORMAL
- en: Abstract
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Within the next several years, there will be a high level of autonomous technology
    that will be available for widespread use, which will reduce labor costs, increase
    safety, save energy, enable difficult unmanned tasks in harsh environments, and
    eliminate human error. Compared to software development for other autonomous vehicles,
    maritime software development, especially in aging but still functional fleets,
    is described as being in a very early and emerging phase. This presents great
    challenges and opportunities for researchers and engineers to develop maritime
    autonomous systems. Recent progress in sensor and communication technology has
    introduced the use of autonomous surface vehicles (ASVs) in applications such
    as coastline surveillance, oceanographic observation, multi-vehicle cooperation,
    and search and rescue missions. Advanced artificial intelligence technology, especially
    deep learning (DL) methods that conduct nonlinear mapping with self-learning representations,
    has brought the concept of full autonomy one step closer to reality. This article
    reviews existing work on the implementation of DL methods in fields related to
    ASV. First, the scope of this work is described after reviewing surveys on ASV
    developments and technologies, which draws attention to the research gap between
    DL and maritime operations. Then, DL-based navigation, guidance, control (NGC)
    systems and cooperative operations are presented. Finally, this survey is completed
    by highlighting current challenges and future research directions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Index Terms:'
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Autonomous Surface Vehicle, Deep Learning, NGC System, Intelligent Autonomous
    Systems, Neural Network.
  prefs: []
  type: TYPE_NORMAL
- en: I Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the next decades, water, air, and land transport will be deeply shaped by
    autonomous vehicles. Although many technological challenges have not yet been
    solved, autonomous systems will undoubtedly be the core component of future transportation
    systems [[1](#bib.bib1)]. Since the last century, unmanned aerial vehicles (UAVs)
    and autonomous underwater vehicles (AUVs) have been widely deployed in a variety
    of real-world applications. As a result of the efforts of leading technology companies,
    autonomous cars have been tested for millions of miles in preparation for full
    commercialization. Having benefitted from the advancement of guidance and control
    theory for surface vehicles, for decades, ASVs have been deeply involved in military,
    research, and commercial applications, including surveillance, data collection,
    and sea, surface and space communication hubs [[2](#bib.bib2)].
  prefs: []
  type: TYPE_NORMAL
- en: ASV can minimize the impact, limitation, and cost of human operators. After
    being launched from a dock, an ASV can be remotely operated by a human. With the
    help of computers, global positioning systems (GPSs), differential global positioning
    systems (DGPSs), and satellite communications, ASVs can navigate and perform a
    task autonomously [[3](#bib.bib3)]. In autonomous mode, ASV can perform a given
    mission without external supervision and then return to the dock at the end of
    its mission. At the beginning of the 20^(th) century, the lack of effective and
    reliable obstacle detection sensors slowed the emergence of reliable obstacle
    avoidance methods [[4](#bib.bib4)]. Currently, the advent of more sophisticated
    airborne and satellite sensors has enabled the study of temperature, moisture,
    and wind fields in maritime convective systems. Advanced sensors, such as light
    detection and ranging (LiDAR), are characterized by strong computing capabilities
    and high-accuracy positioning systems with global coverage and have already reshaped
    the navigation system of all autonomous vehicles [[5](#bib.bib5)]. New data transfer
    technologies, high-capacity local area networks (LANs), wide area networks (WANs),
    and inexpensive satellite-based data communications are expected to further international
    collaborations toward the development of ASVs [[6](#bib.bib6)].
  prefs: []
  type: TYPE_NORMAL
- en: Recently, the capability of ASVs was greatly improved by large-scale data with
    machine learning and artificial intelligence technologies [[7](#bib.bib7), [8](#bib.bib8)].
    DL methods, such as deep neural networks (DNNs) and deep reinforcement learning
    (DRL), have been used to make progress in solving long-existing problems of ASVs
    that cannot be solved with traditional methods [[9](#bib.bib9)]. For example,
  prefs: []
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Nonlinear System Identification: As a universal approximator, DNN can estimate
    the unknown parameters of the ASV model [[10](#bib.bib10), [11](#bib.bib11)],
    unknown dynamics [[12](#bib.bib12), [13](#bib.bib13)] and environmental disturbances.
    In addition, using a learning function that dynamically maps the relationship
    between the input variable (state variable) and the output variable (hydrodynamic
    force and moment data), a controller can be built without a priori knowledge of
    the ASV dynamics or a mathematical model [[14](#bib.bib14)].'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Model-free Control: In complicated maritime environments, it is almost impossible
    to model the exact dynamics of a nonlinear system [[15](#bib.bib15)]. DL methods
    can be used to design optimal data-driven and model-free control that requires
    only the ASV input-output signals without knowing the model [[16](#bib.bib16)].
    Furthermore, DRL can characterize and control extremely complex systems learning
    the interaction between agent and environment [[17](#bib.bib17), [18](#bib.bib18),
    [19](#bib.bib19)].'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Sea Surface Object Detection: Based on a DL method, a sufficient amount of
    relevant data is collected by the sensors, which allows an accurate estimate of
    the state of a vehicle. Environmental information, including other ASVs and the
    harbor [[20](#bib.bib20)], can be detected and analyzed by applying a DL method
    to different types of data sources [[21](#bib.bib21)].'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Future Behavior Prediction: By exploring long-term historical automatic identification
    system (AIS) data based on DL methods, the future status of maritime transportation
    systems is available for advanced management and planning [[22](#bib.bib22)] toward
    safer, highly efficient, and energy-conscientious maritime systems [[23](#bib.bib23)].'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Human Like Decision Making: To make decisions while complying with regulations
    when encountering other surface vehicles, a DL-based method is able to learn possible
    human behaviors from complex task experiences such as collision avoidance [[24](#bib.bib24)]
    and docking [[25](#bib.bib25)]. DL methods can automatically learn high-level
    features to react appropriately in complex environments with many constraints
    [[26](#bib.bib26)].'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This work comprehensively summarizes and compares the application of DL methods
    to ASVs and how DL techniques have permeated the entire field. Related topics
    include, but are not limited to, NGC systems and cooperative operations, as well
    as the integration and application of advanced sensors, communication systems,
    and big data technologies. This article concludes by discussing challenges and
    presenting possible future research directions that may be worth pursuing based
    on DL methods. In general, the aims of this work are as follows.
  prefs: []
  type: TYPE_NORMAL
- en: '1.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Present a current survey of research showing how DL techniques improve ASV systems
    and successfully solve emerging challenges. In particular, advances in DL-based
    NGC systems are highlighted.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '2.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Further, we discuss current research and future directions for the application
    of DL techniques from the point of view of intelligent maritime operations.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The authors hope that this work can guide researchers, engineers and managers
    who want to understand the application of DL for maritime operations or employ
    DL to solve related problems. First, in Section [II](#S2 "II ASV-Related Surveys
    and Survey Scope ‣ Survey of Deep Learning for Autonomous Surface Vehicles in
    Marine Environments"), existing ASV-related surveys are reviewed and the scope
    of this work is defined. In Section [III](#S3 "III ASV Systems ‣ Survey of Deep
    Learning for Autonomous Surface Vehicles in Marine Environments"), an overview
    of the basic ASV structure is provided, including hardware, onboard equipment,
    and the NGC system. DL applications for navigation systems (Section [V](#S5 "V
    Deep Learning Driven Navigation System ‣ Survey of Deep Learning for Autonomous
    Surface Vehicles in Marine Environments")), guidance system (Section [VI](#S6
    "VI Deep Learning Driven Guidance System ‣ Survey of Deep Learning for Autonomous
    Surface Vehicles in Marine Environments")), and control system (Section [VII](#S7
    "VII Deep Learning Driven Control Systems ‣ Survey of Deep Learning for Autonomous
    Surface Vehicles in Marine Environments")) are examined and compared in detail,
    with a focus on the implementation of gradually evolving DL models on NGC systems.
    Then, cooperative maritime operations are reviewed in Section [VIII](#S8 "VIII
    Deep Learning in Cooperative Operations ‣ Survey of Deep Learning for Autonomous
    Surface Vehicles in Marine Environments"). The research gaps, current challenges,
    and future research directions are discussed in Section [IX](#S9 "IX Current Challenge
    and Future Perspectives ‣ Survey of Deep Learning for Autonomous Surface Vehicles
    in Marine Environments"). Finally, the conclusion of this work is given in Section
    [X](#S10 "X Conclusion ‣ Survey of Deep Learning for Autonomous Surface Vehicles
    in Marine Environments").
  prefs: []
  type: TYPE_NORMAL
- en: II ASV-Related Surveys and Survey Scope
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: From 2006 to 2017, only 16 surveys were published, and they mainly covered ASV
    prototypes [[4](#bib.bib4), [27](#bib.bib27), [3](#bib.bib3), [28](#bib.bib28),
    [29](#bib.bib29), [30](#bib.bib30), [31](#bib.bib31), [32](#bib.bib32), [33](#bib.bib33),
    [34](#bib.bib34), [2](#bib.bib2), [35](#bib.bib35)] and NGC systems [[28](#bib.bib28),
    [36](#bib.bib36), [30](#bib.bib30), [37](#bib.bib37), [2](#bib.bib2)]. At the
    beginning of 2017, many large ship companies, such as Rolls-Royce, Kongsberg,
    and Yara, made contributions to the development of an autonomous ship. Rolls-Royce
    published a report and made efforts toward its vision of autonomous shipping [[38](#bib.bib38)].
    Then, Kongsberg and Yara collaborated to build the world’s first fully electric,
    autonomous, zero-emission ship - Yara Birkeland. At the end of 2017, the International
    Maritime Organization (IMO) developed their Strategic Plan for the Organization
    for the 6-year period from 2018 to 2023 and discussed the issue of autonomous
    marine surface ships, which was defined as MASS in 2018.
  prefs: []
  type: TYPE_NORMAL
- en: Between 2018 and 2022, 25 surveys strongly related to ASVs were published. Some
    of these works introduced further developments of the ASV and NGC systems [[39](#bib.bib39),
    [40](#bib.bib40), [41](#bib.bib41), [42](#bib.bib42), [43](#bib.bib43), [44](#bib.bib44),
    [45](#bib.bib45), [7](#bib.bib7), [8](#bib.bib8), [46](#bib.bib46)], as well as
    their real-world applications [[47](#bib.bib47), [48](#bib.bib48), [49](#bib.bib49),
    [50](#bib.bib50)]. In addition, to meet the goal of introducing the next level
    of autonomy to ASVs, the researchers focused their attention on collaboration
    [[51](#bib.bib51), [52](#bib.bib52), [53](#bib.bib53)] and communication [[54](#bib.bib54)]
    between multiple ASVs and other vehicles. Other researchers explored current trends
    toward autonomous shipping [[55](#bib.bib55), [56](#bib.bib56), [57](#bib.bib57),
    [42](#bib.bib42), [58](#bib.bib58)]. When imagining ASV or MASS voyaging on a
    surface autonomously, issues, including control and support centers [[59](#bib.bib59)],
    civil liabilities and insurance [[60](#bib.bib60)], technology [[61](#bib.bib61)]
    and business requirements [[56](#bib.bib56)], need to be addressed carefully.
  prefs: []
  type: TYPE_NORMAL
- en: DL has radically changed many research areas and led to a surge of research
    in the past decade. DNNs are capable of forming compact representations of states
    from raw, high-dimensional, multi-modal sensor data, which are commonly found
    in robotic systems. For navigation subsystems, convolutional neural networks (CNNs)
    with hierarchical feature extraction capability have already been shown to be
    efficient for object detection and obstacle identification [[50](#bib.bib50)].
    With the collection of increasing amounts of maritime data, DL is considered a
    powerful framework compared to other machine learning methods to interpret large
    quantities of data automatically and relatively quickly. DNN has also been shown
    to be efficient in ASV control, especially in autonomous docking [[57](#bib.bib57)].
    In the field of robotic control for intelligent autonomous systems, DRL [[17](#bib.bib17)]
    has recently been applied to AUV, UAV [[62](#bib.bib62)], autonomous cars [[18](#bib.bib18)],
    and ASVs [[14](#bib.bib14)].
  prefs: []
  type: TYPE_NORMAL
- en: 'However, based on existing surveys, there is a lack of discussion about the
    implementation of DL for ASVs. Therefore, this work reviews past and future technical
    developments and challenges of ASVs, especially the role of DL methods in improving
    the intelligence and autonomous levels. In addition to a thorough comparison of
    ASV prototypes and the architecture of ASV control systems, the authors try to
    answer the following questions: “What DL methods have been successfully applied
    to ASVs? What are the theoretical and practical strengths and weaknesses”; “How
    can current maritime operations be solved with DL methods? and, which directions
    are promising for future research?” To the best knowledge of the authors, the
    DL techniques for ASVs have not yet been comprehensively studied. A better understanding
    of the current and potential role of up-and-coming DL techniques in ASVs will
    provide momentum for future autonomous maritime operations.'
  prefs: []
  type: TYPE_NORMAL
- en: III ASV Systems
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: III-A ASV Category
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Each type of ASV can be leveraged for a specific application based on its size,
    function, or unique features, as shown in Figure [1](#S3.F1 "Figure 1 ‣ III-A
    ASV Category ‣ III ASV Systems ‣ Survey of Deep Learning for Autonomous Surface
    Vehicles in Marine Environments"). For example, naval ASVs need to be controlled
    remotely and operated at high speed. Additionally, heavy payloads and limitations
    on energy consumption are required. ASV research for oceanography requires autonomous
    navigation, energy conservation, and stable measurements at low speed [[34](#bib.bib34)].
    Commercial surveillance ASVs are usually equipped with advanced visual monitoring
    sensors, high-performance controllers, and efficient communication systems with
    on-shore management centers.
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/6080bcba0b5701dc547e8f1e8c1cfa43.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1: ASV Classification'
  prefs: []
  type: TYPE_NORMAL
- en: III-B ASV Architecture
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '![Refer to caption](img/aec2cea0031c2d9aff0356249c3e89ea.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2: The 6 DOFs of an ASV'
  prefs: []
  type: TYPE_NORMAL
- en: 'The motion of a ship can be described as an earth-fixed frame or body-fixed
    frame, as shown in Figure [2](#S3.F2 "Figure 2 ‣ III-B ASV Architecture ‣ III
    ASV Systems ‣ Survey of Deep Learning for Autonomous Surface Vehicles in Marine
    Environments"). The rigid body motions of a typical surface vehicle with 6 DOFs
    include:'
  prefs: []
  type: TYPE_NORMAL
- en: (1) Three types of displacement motions (heave, sway or drift, and surge), which
    move through the x_0, y_0, and z_0 directions, respectively.
  prefs: []
  type: TYPE_NORMAL
- en: (2) Three angular motions (yaw, pitch, and roll), which are the rotations about
    the x_0, y_0, and z_0 axes, respectively.
  prefs: []
  type: TYPE_NORMAL
- en: Among the multiple options for the manufacture of ASV, the hull supports the
    main four components of the system, including the engine, communication, sensor
    and NGC systems [[35](#bib.bib35)].
  prefs: []
  type: TYPE_NORMAL
- en: III-B1 Hull
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: As the main physical component of ASVs, hulls are waterproof bodies of ships
    or boats that can be classified into single hulls (kayaks and monohulls) and multihulls
    (catamarans and trimarans).
  prefs: []
  type: TYPE_NORMAL
- en: III-B2 Engine System
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The controller design should consider how many appreciable degrees of freedom
    (DOFs) of the ASVs can be actuated by the actuators. Most existing ASVs use underactuated
    controls, which means that only part of the DOFs can be controlled. If all DOFs
    can be controlled by multiple actuators, then the ASV is activated. For more complex
    tasks, such as docking, overactuated controls that can make use of additional
    DOFs are more effective.
  prefs: []
  type: TYPE_NORMAL
- en: III-B3 Communication System
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Stable and reliable communication is essential for information exchange between
    (1) computers, sensors, and other hardware that need to be controlled; (2) multiple
    vehicles, such as ASVs, AUVs, and UAVs; (3) vehicles and onshore control centers;
    and (4) vehicles and remote satellites.
  prefs: []
  type: TYPE_NORMAL
- en: III-B4 Sensor System
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Sensors act as an interface between an ASV and the environment, providing a
    vehicle with information relative to its self-state and the environment. In addition
    to the performance monitoring sensor, the ASV shipboard sensors provide location,
    status, and environmental information, as shown in Table III. The deployment of
    different types of sensors depends on the mission requirements.
  prefs: []
  type: TYPE_NORMAL
- en: III-B5 NGC System
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: In an attempt to automate the ASV operation process, three systems are indispensable
    in the software structure. Navigation, guidance, and control, as illustrated in
    Figure [4](#S3.F4 "Figure 4 ‣ III-B5 NGC System ‣ III-B ASV Architecture ‣ III
    ASV Systems ‣ Survey of Deep Learning for Autonomous Surface Vehicles in Marine
    Environments"). As software installed on an onboard computer, the NGC system processes
    the data collected for situation awareness, plans the possible path, and drives
    the surface vehicle to the destination. The NGC system is the core of autonomous
    operation.
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/08d45f040dadf49e34391e468eb0062d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4: The structure of ASV systems'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Navigation (Section [V](#S5 "V Deep Learning Driven Navigation System
    ‣ Survey of Deep Learning for Autonomous Surface Vehicles in Marine Environments")):
    Navigation usually refers to the study of the process of monitoring the movement
    of vehicles. As the most fundamental requirement for safe operation, full assessment
    of surface vehicle status and its surrounding environment based on sensor data
    is essential for maritime vehicles. There are two stages in navigation systems,
    that is, environmental perception and state estimation.'
  prefs: []
  type: TYPE_NORMAL
- en: Environmental Perception refers to the process of measuring surrounding environments,
    such as waves, winds, objects, and obstacles on the surface [[63](#bib.bib63)].
  prefs: []
  type: TYPE_NORMAL
- en: State Estimation refers to the problem of reconstructing the underlying state
    of a system given a sequence of measurements and a prior model of the system.
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Guidance (Section [VI](#S6 "VI Deep Learning Driven Guidance System
    ‣ Survey of Deep Learning for Autonomous Surface Vehicles in Marine Environments")):
    Based on the status information provided by the navigation system, the goal of
    guidance is to plan and generate possible paths from departure to destination
    with the ability to avoid obstacles and obey rules.'
  prefs: []
  type: TYPE_NORMAL
- en: Path Planning can be further divided into global and local methods [[2](#bib.bib2)].
    Global path planning aims to find an optimal or near-optimal collision-free path
    between the origin and destination in advance.Local path planning requires an
    ASV response to the previously unknown obstacle and changes in the environment.
  prefs: []
  type: TYPE_NORMAL
- en: Path Generation refers to the process of generating an optimal path for ASV.
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Control (Section [VII](#S7 "VII Deep Learning Driven Control Systems
    ‣ Survey of Deep Learning for Autonomous Surface Vehicles in Marine Environments")):
    The control system generates the proper control forces and moments for the ASV
    driving equipment [[2](#bib.bib2)].'
  prefs: []
  type: TYPE_NORMAL
- en: Motion Control Scenarios refer to the specific scenarios in which an ASV operates,
    including point stabilization, target tracking, path following, trajectory tracking,
    maneuvering, and berthing. The definition of each motion control scenario can
    be found in Section [VII](#S7 "VII Deep Learning Driven Control Systems ‣ Survey
    of Deep Learning for Autonomous Surface Vehicles in Marine Environments").
  prefs: []
  type: TYPE_NORMAL
- en: IV Deep Learning Models and Techniques
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Many publication have focused on the advancement of DL [[21](#bib.bib21), [64](#bib.bib64)],
    as well as the applications of DL on robotics [[65](#bib.bib65)], autonomous cars
    [[66](#bib.bib66)], UAVs [[62](#bib.bib62)], and UUVs. Therefore, to avoid unnecessary
    repetition, we briefly introduce the DL models and its applications categorized
    by different learning methods, i.e., supervised, unsupervised, and reinforcement
    learning methods.
  prefs: []
  type: TYPE_NORMAL
- en: IV-A Supervised Deep Learning Method
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Supervised deep learning methods are trained using well-labelled data to learn
    a function that maps an input to an output. They have been widely applied to solve
    problems on ASV navigation, guidance and control.
  prefs: []
  type: TYPE_NORMAL
- en: IV-A1 Multilayer Perceptron (MLP)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: MLP (also called FeedForward NN, that is, FFNN) is one of the most basic neural
    network (NN) models that can approximate nonlinear functions and add one or multiple
    fully connected hidden layers between the output and input layers. MLP with more
    than one hidden layer is called DNN. Model training is usually performed through
    backpropagation for all layers. MLP are usually used to estimate the model uncertainties
    of ASV controller. The modified version of MLP is listed as follows.
  prefs: []
  type: TYPE_NORMAL
- en: 'Radial Basis Function (RBF): The RBF network can effectively accelerate convergence
    speed and avoid local optima because it utilizes Gaussian functions $\varphi(\cdot)$
    as activation functions in the hidden layer, which is a local approximation network.
    RBF has only one hidden layer, and there is usually one neuron in the output layer,
    which does not use the activation function.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Wavelet Neural Network (WNN): Combining the characteristics of wavelet transform
    and NN, WNN has advantages such as time-frequency localization, self-learning
    ability, faster convergence speed, and low false alarm rate. Using the structure
    of MLP or RBF, WNN uses the wavelet function $f(.)$ as the active function.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Fuzzy Neural Network (FNN): Fuzzy logic captures the uncertainties associated
    with human reasoning based on “degrees of truth” method, which humans are more
    easily understood compared to the conventional “true or false” method. The integration
    of fuzzy logic and NN, i.e., using a NN to learn the parameters of a fuzzy logic
    system, creates an FNN, which can model uncertainty and nonlinearly in complicated
    systems.'
  prefs: []
  type: TYPE_NORMAL
- en: IV-A2 Convolutional Neural Network (CNN)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The basic structure of CNN contains an input layer, several convolution layers,
    several pooling layers, a fully connected layer, and an output layer. In traditional
    DNNs, the neurons in different layers are fully connected. In contrast, the neurons
    in the convolution layers and pooling layers of CNNs are not fully connected to
    their forward layer. As a result, sparse interaction and parameter sharing are
    the two most important characteristics in a CNN learning process. Based on the
    basic idea of CNNs, advanced architectures are designed to solve three fundamental
    problems in the computer vision field, i.e., image classification, object detection,
    and image segmentation. Some popular architectures are briefly introduced below,
    which are used to perceive the surrounding environment through images, videos,
    or data collected in the maritime environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'CNN-based Classification: Image classification aims to predict the label for
    the given image. Based on traditional CNNs, several improved architectures with
    more complex structures are proposed, including LeNet-5, AlexNet, VGG, GoogLeNet,
    Inception Net,ResNet,and others. As the top competitors of the ILSVRC, these CNN
    architectures achieve high classification accuracy, and some of them even surpass
    human-level performance on the ImageNet database. These networks are widely used
    in many applications as the basic models for feature extraction or applied in
    object detection and segmentation tasks as the backbone network.'
  prefs: []
  type: TYPE_NORMAL
- en: 'CNN-based Object Detection: Autonomous vehicles must identify and locate an
    object when perceiving their surroundings with sensors. In general, there are
    two types of object detection frameworks:'
  prefs: []
  type: TYPE_NORMAL
- en: (1) The two-stage algorithm first extracts candidate regions that may contain
    the object and then determines whether the proposed regions contain the object.
    The first stage uses a method such as selective search or a region proposal network
    (RPN) to generate the regions of interest (ROIs). Then, another network, such
    as ResNet, is leveraged to classify the proposed regions. Popular two-stage object
    detection methods include R-CNN, Fast R-CNN, Faster R-CNN, and Mask R-CNN.
  prefs: []
  type: TYPE_NORMAL
- en: (2) The one-stage algorithm directly classifies an object and predicts the object-bounding
    boxes for an image in one step. More specifically, an image is input, and the
    class probabilities and bounding box coordinates are learned simultaneously. The
    typical framework includes You Only Look Once (YOLO), Single Shot Detector (SSD)
    and RetinaNet.
  prefs: []
  type: TYPE_NORMAL
- en: 'CNN-based Segmentation: In some tasks, each pixel in captured images should
    be labeled with semantic tags to indicate which object the pixel belongs to. Image
    segmentation refers to the classification of every pixel in the image.'
  prefs: []
  type: TYPE_NORMAL
- en: Fully Convolutional Networks (FCN) are the first CNN-based network that can
    solve segmentation problems. FCN replaces the fully connected layers of CNN with
    convolutional layers and upsamples the high-level feature map into a heatmap,
    the size of which is the same as the original image. The heatmap shows the classification
    result for every pixel of the image. The pyramid attention network (PAN) further
    improves FCN by proposing the feature pyramid attention (FPA) and global attention
    upsampling (GAU) modules to learn better feature representations by considering
    the global context information. Another commonly used segmentation method is U-Net,
    which is structured like a capital letter U. The architecture of U-Net contains
    two paths. The first path is the contraction path, which is composed of a traditional
    stack of convolutional and max pooling layers to capture the context in the image.
    The second path is the symmetric expanding path, which is used to enable precise
    localization using transposed convolutions. Compared to FCN, U-Net fuses the features
    of the two paths on more levels. In terms of the feature fusion strategy, FCN
    uses additive fusion and U-Net uses channel-dimensional concatenation.
  prefs: []
  type: TYPE_NORMAL
- en: IV-A3 Recurrent Neural Network (RNN)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: RNN can make use of historical information for the prediction of future behavior
    by passing all the information from the beginning to the current end of the model
    through the hidden layer. RNNs perform very well when modeling time-dependent
    and sequential data tasks, but usually fail to converge during training because
    of problems related to vanishing and exploding gradients. As an improved version
    of RNN, the long-short-term memory (LSTM) has a specially designed memory network,
    including a cell, an input gate, an output gate, and a forget gate, to address
    the vanishing gradient problem that limits the use of traditional RNNs. Similar
    to LSTM, the gate recurrent unit (GRU) has two gates as opposed to three gates
    in an LSTM cell, which means that GRU has fewer training parameters than LSTM.
  prefs: []
  type: TYPE_NORMAL
- en: IV-B Unsupervised Deep Learning Method
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Unsupervised deep learning method can learn patterns from untagged data.
  prefs: []
  type: TYPE_NORMAL
- en: IV-B1 AutoEncoder (AE)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: AE is an unsupervised learning algorithm that is designed to reduce the dimensions
    of the data by learning the structure within the data and ignoring the signal
    noise. It has an input layer, a hidden layer that reconstructs the input data
    for compressed representation, and an output layer that reconstructs the input.
    The network should minimize the difference between the input and output vectors.
    Therefore, AE is applied to reduce the noise and dimensions of the original input
    in ASV navigation module.
  prefs: []
  type: TYPE_NORMAL
- en: IV-B2 Generative Adversarial Networks (GAN)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: GAN is an adversarial learning framework designed for data generation that has
    a generative model G, which generates samples similar to training data, and a
    discriminative model D, which estimates whether a sample comes from training data
    or G. The training process for G is to minimize the Jensen–Shannon (JS) divergence
    between the real data distribution and the generated data distribution. The training
    process for D is to distinguish between real data and generated data as much as
    possible. Furthermore, a deep convolutional GAN (DCGAN) is proposed to provide
    an experiment-based optimal hyperparameter set and training skills to improve
    the stability of a GAN training process. To further improve the stability of GANs
    from their structure and eliminate problems such as model collapse and vanishing
    gradient, Arjovsky et al. [[67](#bib.bib67)] proposed the Wasserstein GAN (WGAN),
    which uses the Wasserstein distance instead of the JS divergence to measure the
    difference between the real and generated data distributions. GAN has been widely
    used to expand the dataset by generating fake images, which is very useful for
    the ASV navigation module if the training dataset is not enough.
  prefs: []
  type: TYPE_NORMAL
- en: IV-C Reinforcement Learning Method
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Supervised and unsupervised learning is generally trained with labeled or unlabeled
    datasets that are provided in advance. Reinforcement Learning (RL) is another
    type of machine learning technique that enables an agent to learn mapping from
    situations to actions by maximizing a scalar reward or reinforcement signal. The
    agent observes the state of the environment $s_{t}$ and takes an action $a_{t}$
    at time $t$ in an environment. Then, the environment enters a new state $s_{t+1}$
    and issues an immediate reward $r_{t+1}$ to the agent. Finally, the agent tries
    to learn to select actions that maximize the cumulative reward $Q(s_{t},a_{t})$,
    a.k.a. $Q$-value.
  prefs: []
  type: TYPE_NORMAL
- en: IV-C1 Deep Reinforcement Learning (DRL)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: For a complex environment, when the number of states and actions increases dramatically,
    the DL-based method can automatically extract features from very large states
    and action spaces with high dimensions, which introduces deep Q-networks (DQNs).
    The combination of RL and DL enables agents to construct and learn knowledge directly
    from raw sensors or image signals without any predefined features [[26](#bib.bib26)].
    However, DQN is only applicable to discrete and low-dimensional action spaces.
    It cannot be straightforwardly applied to continuous domains, since it relies
    on finding the action that maximizes the action-value function, which in the continuous-valued
    case requires an iterative optimization process at every step. To address this
    problem, Lillicrap et al. [[68](#bib.bib68)] presented the deep deterministic
    policy gradient (DDPG), which is a model-free, off-policy actor-critic algorithm
    that utilizes deep function approximators that can learn policies in high-dimensional
    and continuous action spaces.
  prefs: []
  type: TYPE_NORMAL
- en: V Deep Learning Driven Navigation System
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: V-A Definition and Key Problems
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An ASV navigation system provides environmental and self-state information to
    guidance and control systems based on collected data [[32](#bib.bib32), [2](#bib.bib2)].
    ASV usually has many sensors onboard that cumulatively collect very large amounts
    of data to monitor the performance of the ASV and the local environment, including
    the shore and static or moving obstacles [[69](#bib.bib69)]. In addition, with
    the support of an advanced communication system, ASV can also receive information
    about the global environment, which covers large areas, such as an entire port
    with hundreds of ships. This type of information includes data from other ships
    collected by AIS [[70](#bib.bib70)], synthetic aperture radar (SAR) images [[20](#bib.bib20)],
    and images and videos taken by cameras on Autonomous Air Vehicle (AAV) [[71](#bib.bib71)]
    or other platforms [[72](#bib.bib72)]. The key problems of ASV navigation are
    discussed below.
  prefs: []
  type: TYPE_NORMAL
- en: V-A1 Environmental Perception
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Shipboard and remote sensors can provide information to ASVs for surrounding
    awareness to address external factors introduced by waves, currents, winds, and
    weather in a typical maritime environment and adapt to complex environments that
    include a large number of stationary or moving obstacles in real time [[63](#bib.bib63)].
    However, using highly dimensional data collected from a variety of types of equipment
    to reflect the complex environment is a very large challenge.
  prefs: []
  type: TYPE_NORMAL
- en: V-A2 State Estimation
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: An ASV state usually includes its position, orientation, velocity, and acceleration.
    However, the positions, Euler angles and linear and angular velocities of a ship
    measured by sensors such as global navigation satellite systems (GNSS) and inertial
    measurement units (IMUs) usually contain noise and errors, which can lead to failure.
    In recent years, advanced onboard sensors such as camera [[69](#bib.bib69), [73](#bib.bib73),
    [74](#bib.bib74)], radar, LiDAR [[75](#bib.bib75)] and remote SAR image [[76](#bib.bib76)]
    have improved the accuracy of the estimation. However, several unique situations,
    such as noise introduced by winds, waves, and weather, and harsh communication
    environments in the open sea, make accurate state estimation very challenging.
  prefs: []
  type: TYPE_NORMAL
- en: V-A3 Data Processing Problem
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The large number of data streams collected by heterogeneous sensors are different
    from each other in temporal and spatial resolution, data format, and geometric
    alignment. Therefore, certain processes, such as compression, dimensionality reduction,
    and fusion, may help improve the quality of data.
  prefs: []
  type: TYPE_NORMAL
- en: V-B Navigation with Deep Learning Model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: V-B1 Environmental Perception
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Existing related work regarding the application of DL methods on maritime environmental
    perception can be categorized by the type of navigation data source, i.e., data
    collected by onboard or onshore equipment (optical and infrared images, radar
    images, and point clouds), or images captured by satellite (optical remote sensing
    images and SAR images). Here, based on different data source types, we introduce
    the DL-based environmental perception methods for optical and radar images, respectively.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Processing of Optical Images: They are captured by on-board, onshore sensor,
    or satellite sensor, and usually experience the following challenges:'
  prefs: []
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The image quality depends greatly on the time of day and the absence of cloud
    coverage.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A large quantity of data has high resolution and is thus more difficult to utilize
    in real-time applications.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is difficult to separate ships in ports because there are complex contexts
    such as buildings, docks, and overlapped ships that are usually closely docked
    side by side.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is also difficult to locate a ship accurately because the target ships have
    extremely long and thin shapes and arbitrary rotations, as shown in Figure [5](#S5.F5
    "Figure 5 ‣ V-B1 Environmental Perception ‣ V-B Navigation with Deep Learning
    Model ‣ V Deep Learning Driven Navigation System ‣ Survey of Deep Learning for
    Autonomous Surface Vehicles in Marine Environments").
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Refer to caption](img/1619d41b41328a54c08fa1855b7f9425.png)'
  prefs: []
  type: TYPE_IMG
- en: (a) Horizontal bounding boxes
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/a88457412d0353826ed56a6bc3e8dd70.png)'
  prefs: []
  type: TYPE_IMG
- en: (b) Rotated bounding boxes
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 5: Ship detection with optical remote sensing [[77](#bib.bib77)]'
  prefs: []
  type: TYPE_NORMAL
- en: Above challenges have been studied to detect ships with complex backgrounds
    [[78](#bib.bib78), [72](#bib.bib72), [79](#bib.bib79), [80](#bib.bib80), [81](#bib.bib81),
    [82](#bib.bib82), [83](#bib.bib83), [77](#bib.bib77), [84](#bib.bib84), [85](#bib.bib85)],
    detect multiscale ships [[72](#bib.bib72), [79](#bib.bib79), [80](#bib.bib80),
    [77](#bib.bib77), [84](#bib.bib84), [86](#bib.bib86), [87](#bib.bib87), [88](#bib.bib88)],
    and detect ships with small data sets [[89](#bib.bib89), [90](#bib.bib90), [91](#bib.bib91)].
  prefs: []
  type: TYPE_NORMAL
- en: For ship detection with complex backgrounds, extracting appropriate feature
    representations that can better distinguish ships from surrounding turbulence
    is very important. Researchers have tried to integrate high- and low-level features
    for ship detection. One typical solution is to extract multiscale feature representations.
    Based on Mask R-CNN, Nie et al. [[83](#bib.bib83)] added a bottom-up path to propagate
    low-level features to the top layer. Another solution is to extract features using
    image pyramids, the feature maps of which from low to high layers form a pyramid-like
    shape. Yang et al. [[77](#bib.bib77), [84](#bib.bib84)] applied a dense FPN, in
    which the feature maps in different layers are densely connected and merged by
    concatenation. Huang et al. [[85](#bib.bib85)] designed skip-connection path networks
    to extract features from each CNN layer and fuse all extracted features. Furthermore,
    expanding the training data set using a data augmentation strategy [[81](#bib.bib81)]
    and segmenting the sea and land areas before feature extraction [[72](#bib.bib72),
    [80](#bib.bib80)] are also effective strategies.
  prefs: []
  type: TYPE_NORMAL
- en: For multiscale ship detection, popular object detection methods based on horizontal
    region detection have a large redundancy region for the bounding box of ship detection
    (see Figure [5](#S5.F5 "Figure 5 ‣ V-B1 Environmental Perception ‣ V-B Navigation
    with Deep Learning Model ‣ V Deep Learning Driven Navigation System ‣ Survey of
    Deep Learning for Autonomous Surface Vehicles in Marine Environments") (a)) compared
    to region detection based on rotated bounding boxes, which can be rotated according
    to the orientation of the ship (see Figure [5](#S5.F5 "Figure 5 ‣ V-B1 Environmental
    Perception ‣ V-B Navigation with Deep Learning Model ‣ V Deep Learning Driven
    Navigation System ‣ Survey of Deep Learning for Autonomous Surface Vehicles in
    Marine Environments") (b)). Li et al. [[86](#bib.bib86)] constructed two regression
    branches to independently predict the location of the center points $x,y$, the
    width $w$, and height $h$, and the orientation $\theta$ of the boundary box based
    on different CNN characteristics. For arbitrarily oriented ships, Yu et al. [[87](#bib.bib87)]
    proposed an anchor-assisted strategy that accurately predicts rotational bounding
    boxes and does not require manual anchor design. Zhang et al. [[88](#bib.bib88)]
    proposed an anchor-free rotation ship detection method by transforming the ship
    detection task into a binary semantic segmentation task, which directly detects
    pixels belonging to ships and predicts the distance between each pixel and four
    boundaries.
  prefs: []
  type: TYPE_NORMAL
- en: For ship detection with small dataset, to increase the training samples, researchers
    pre-trained a DL-based object detection framework on a well-established open dataset
    [[89](#bib.bib89)], or generate fake ship images with GAN [[91](#bib.bib91)].
  prefs: []
  type: TYPE_NORMAL
- en: 'The Processing of Radar Images: They are captured by on-board, onshore sensor,
    or satellite sensor, and usually suffer from the following issues:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/9e515f39c2c3d75f87202179f57344ae.png)'
  prefs: []
  type: TYPE_IMG
- en: (a) Small and densely clustered ships with big bounding box
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/74a02b7ad69b3c28bb92cd5a039310a1.png)'
  prefs: []
  type: TYPE_IMG
- en: (b) False detection on the land
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 6: Ship detection in SAR image [[92](#bib.bib92)]'
  prefs: []
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Although SAR is capable of working all day under any weather conditions, SAR
    images usually have a lower resolution and fewer pixels than optical remote sensing
    images. Thus, some of the models used on optical images cannot be applied directly
    to SAR images.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Small and densely clustered multi-scale ships in SAR images that occupy only
    a few pixels are very difficult to detect (see Figure [6](#S5.F6 "Figure 6 ‣ V-B1
    Environmental Perception ‣ V-B Navigation with Deep Learning Model ‣ V Deep Learning
    Driven Navigation System ‣ Survey of Deep Learning for Autonomous Surface Vehicles
    in Marine Environments") (a)).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ships in SAR images exist at a variety of scales, have arbitrary directions,
    and are densely arranged or even overlapped in ports.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Objects with analogical scatterings on land cause high false alarm rates (see
    Figure [6](#S5.F6 "Figure 6 ‣ V-B1 Environmental Perception ‣ V-B Navigation with
    Deep Learning Model ‣ V Deep Learning Driven Navigation System ‣ Survey of Deep
    Learning for Autonomous Surface Vehicles in Marine Environments") (b)).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Massive open SAR image datasets are rare and extensively labeled samples require
    a large amount of manual labor.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Above challenges have been studied to detect multiscale ship [[93](#bib.bib93),
    [94](#bib.bib94), [95](#bib.bib95), [92](#bib.bib92), [96](#bib.bib96), [97](#bib.bib97),
    [98](#bib.bib98), [99](#bib.bib99), [100](#bib.bib100)] and detect ship with small
    dataset [[101](#bib.bib101), [102](#bib.bib102), [103](#bib.bib103), [104](#bib.bib104),
    [104](#bib.bib104), [105](#bib.bib105), [106](#bib.bib106)].
  prefs: []
  type: TYPE_NORMAL
- en: For multiscale ship detection, similar to optical images, integrating more extracted
    features from original SAR images to detect a ship is also useful. To obtain more
    semantic information, Cheng et al. [[107](#bib.bib107)] fused features extracted
    from radar and optical images to identify small objects on a water surface. VGG-13
    and the backbone network of YOLOv4 were adopted to extract features from optical
    and radar images, respectively. Sometimes, it is very difficult to distinguish
    backscattering points of interference from actual ships in SAR images. Therefore,
    exploring the relationships between local features and their global dependences
    and re-inspection of information in different feature maps can improve the performance
    of multiscale ship detection in SAR images. Zhao et al. [[95](#bib.bib95)] proposed
    a two-stage detection method that adopts and combines a receptive field block
    and a convolutional block attention module to enhance the relationships of local
    features with their global dependence and boost significant information while
    suppressing interference. Furthermore, as a type of radar image, SAR images contain
    frequency information and can provide features in the frequency domain [[92](#bib.bib92),
    [96](#bib.bib96)].
  prefs: []
  type: TYPE_NORMAL
- en: The lack of substantial ground truth data for training is one of the major problems
    in the detection and classification of ships and other objects in SAR images [[101](#bib.bib101)],
    which has hindered the development of object detectors. In addition to obtaining
    more datasets, effective efforts have been made, including the addition of simulated
    SAR images to a training dataset, training deeper networks that extract higher
    levels of data presentation features [[102](#bib.bib102)], and pre-training the
    object detection model on large open datasets [[103](#bib.bib103), [104](#bib.bib104)],
    have been made to reduce the false-positive rate on small datasets, improve detection
    accuracy, and overall performance. Furthermore, generating a fake dataset with
    WGAN can also improve the performance of ship detection in SAR images [[106](#bib.bib106)].
  prefs: []
  type: TYPE_NORMAL
- en: V-B2 State Estimation
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: DNN-based methods can estimate the motion of ASVs in the presence of nonlinear
    dynamics and high-dimensional sensor data with different sampling frequencies.
    Typical tasks include ship behavior recognition [[108](#bib.bib108), [109](#bib.bib109)],
    position identification [[110](#bib.bib110)] and motion prediction [[110](#bib.bib110),
    [111](#bib.bib111)].
  prefs: []
  type: TYPE_NORMAL
- en: 'Ship Behavior Recognition: High-fidelity ship kinematic information (displacement,
    movement speed, sailing angle, etc.) can be estimated directly from maritime surveillance
    video. Chen et al. [[108](#bib.bib108)] recognized ship behaviors based on video
    data in four steps: Ship feature extraction based on YOLO, bounding box generation,
    position identification based on geometry theory, and behavioral analysis. Chen
    et al. [[109](#bib.bib109)] proposed a CNN ship movement mode classification algorithm
    to classify ship movements by converting AIS trajectories of a ship into images
    with different movements.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Ship Position Identification: DNN was trained based on historical position
    data estimated by a star sensor to predict and compensate for an INS navigation
    error when the star sensor is unusable [[112](#bib.bib112)].'
  prefs: []
  type: TYPE_NORMAL
- en: 'Ship motion prediction: Zhang et al. [[110](#bib.bib110)] utilized LSTM to
    capture the inherent law of ship motion on each frequency scale. An attention
    mechanism was later adopted to further improve the accuracy of the prediction.'
  prefs: []
  type: TYPE_NORMAL
- en: V-B3 Data Processing
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: It is very difficult to use the large amount of navigation data in maritime
    environments, which suffer from the noise introduced by limited on-board loads,
    poor communication, and unexpected situations. Therefore, DNN-based methods have
    been adapted to extract data representation before applying traditional multisensor
    methods to reduce data dimension or improve data quality [[113](#bib.bib113)].
  prefs: []
  type: TYPE_NORMAL
- en: To reduce the data dimension, an autoencoder system architecture was proposed
    to reduce the performance dimensions and navigation data during transmission [[114](#bib.bib114)].
    To improve the quality of the data, Cheng et al. [[115](#bib.bib115)] applied
    CNN in a data fusion module to extract joint information from different types
    of raw input, including the state of motion of the vessel, the state of existence
    of obstacles, and the previous control behavior. The output of a CNN model is
    a state vector StateID that contains the operating states of the vessel.
  prefs: []
  type: TYPE_NORMAL
- en: VI Deep Learning Driven Guidance System
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: VI-A Definition and Key Problems
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Global path planning and local path planning are two main problems for ASV guidance
    [[2](#bib.bib2)]. Traditionally, the path planning problem needs to be transformed
    into a solvable problem, such as a search problem, which can be solved by a deterministic
    method that guarantees the provision of a complete and consistent search result
    as long as it exists. Alternatively, this problem can be solved by a heuristic
    method that is able to obtain an approximate solution with a near optimal result
    if the deterministic approach is ineffective. These solutions are listed in Table
    [I](#S6.T1 "TABLE I ‣ VI-A3 Constraints ‣ VI-A Definition and Key Problems ‣ VI
    Deep Learning Driven Guidance System ‣ Survey of Deep Learning for Autonomous
    Surface Vehicles in Marine Environments").
  prefs: []
  type: TYPE_NORMAL
- en: VI-A1 Global Path Planning
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Global path planning should generate an appropriate path from the original to
    the destination based on static obstacle map information or historical data. With
    an increasing amount of AIS data available, how to make the best use of these
    massive data to produce a global path for ASVs has become a challenge [[116](#bib.bib116),
    [22](#bib.bib22)].
  prefs: []
  type: TYPE_NORMAL
- en: VI-A2 Local Path Planning
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The predefined trajectory should be able to adjust according to tasks, complex
    and dynamic environments in real time, which requires local path planning. Currently,
    in congested sea areas such as complex ports or waterways, different surface vehicles
    frequently encounter each other. To avoid collisions in an efficient manner, “own
    ship” (OS) and “target ships” (TSs) should comply with widely accepted regulations
    such as COLREGS [[117](#bib.bib117)]. More specifically, if two ASVs encounter
    one another in a water way, from the first-person perspective, OS and TSs have
    four types of encounter situations, i.e., the head-on, stand on, give way and
    overtake encounters. Before generating a local path, how to make appropriate decisions
    (i.e., choose the encounter situation) in real time is a very large challenge
    for researchers, especially under more complex situations such as OS encounters
    many TSs simultaneously.
  prefs: []
  type: TYPE_NORMAL
- en: VI-A3 Constraints
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'In real-world scenarios, certain constraints should be considered according
    to the specific task an ASV is assigned to [[44](#bib.bib44)], such as:'
  prefs: []
  type: TYPE_NORMAL
- en: 'TABLE I: The category of path planning algorithm [[118](#bib.bib118)]'
  prefs: []
  type: TYPE_NORMAL
- en: '| General Methods | Specific Methods |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Deterministic Searching Algorithm |  |'
  prefs: []
  type: TYPE_TB
- en: '| Roadmap based searching | Visibility graph |'
  prefs: []
  type: TYPE_TB
- en: '| - Map construction methods | Voronoi diagrams |'
  prefs: []
  type: TYPE_TB
- en: '|  | Probability road map |'
  prefs: []
  type: TYPE_TB
- en: '| Roadmap based searching | A* searching |'
  prefs: []
  type: TYPE_TB
- en: '| - Searching methods | D* searching |'
  prefs: []
  type: TYPE_TB
- en: '|  | Field D* searching |'
  prefs: []
  type: TYPE_TB
- en: '| Potential Field | Conventional potential field |'
  prefs: []
  type: TYPE_TB
- en: '|  | Harmonic potential field |'
  prefs: []
  type: TYPE_TB
- en: '|  | Potential field by fast marching |'
  prefs: []
  type: TYPE_TB
- en: '| Optimisation method | Mixed integer programming |'
  prefs: []
  type: TYPE_TB
- en: '|  | Optimal control |'
  prefs: []
  type: TYPE_TB
- en: '| Heuristic Searching Algorithm |  |'
  prefs: []
  type: TYPE_TB
- en: '| Evolutionary algorithm | Genetic Algorithm (GA) |'
  prefs: []
  type: TYPE_TB
- en: '|  | Particle swarm optimisation |'
  prefs: []
  type: TYPE_TB
- en: '|  | Asexual reproduction optimisation |'
  prefs: []
  type: TYPE_TB
- en: '|  | Ant Colony Algorithm (ACA) |'
  prefs: []
  type: TYPE_TB
- en: '| Neural Network | MultiLayer Perceptron (MLP) |'
  prefs: []
  type: TYPE_TB
- en: '|  | Fuzzy Neural Network (FNN) |'
  prefs: []
  type: TYPE_TB
- en: '|  | Long Short Term Memory (LSTM) |'
  prefs: []
  type: TYPE_TB
- en: '|  | Deep Reinforcement Learning (DRL) |'
  prefs: []
  type: TYPE_TB
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Geography constraints include seacoasts, rocks, and small islands that are present
    on geological maps. For global planning in a large area, such as navigating from
    one port to another, considering only geographical constraints is sufficient.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shape constraints refer to the specific size (length, width, and height) of
    the ASV, which must be considered when planning a path in the middle scale area,
    where an ASV cannot be treated as a point. For example, if ASV enters a channel,
    the width of the ASV and the channel will have a very large influence on the path
    planning process.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kinematics constraints represent the specific ranges of ship and acceleration
    velocities, which should be considered if the ASV enters an inner port.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ASV dynamic constraints contain the inertia forces and moments of the surge,
    swaying, yawing, etc. of the ship, which cannot be neglected for precise path
    planning in small-scale areas, such as ASV berthing, which requires knowing how
    to precisely steer to berth and must consider kinematics and shape constraints.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: VI-B Guidance with Deep Learning Model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: VI-B1 Global Path Planning
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Conventional deterministic and heuristic search algorithms can generate a collision-free
    path between the start point and the destination. However, in existing research,
    there are several complex tasks that the deterministic method cannot complete
    but can be solved by DNN. These include planning the most energy-efficient path
    [[119](#bib.bib119)], predicting future paths based on historical trajectories
    [[70](#bib.bib70), [116](#bib.bib116), [22](#bib.bib22), [120](#bib.bib120)],
    and planning the optimal path for multiple tasks [[121](#bib.bib121)], which are
    each described below.
  prefs: []
  type: TYPE_NORMAL
- en: 'Planning the Most Energy Efficient Path: It is very difficult to model the
    relationship between the environment and energy-efficient-related parameters in
    mathematical formulas. Zhang et al. [[119](#bib.bib119)] proposed a data-driven
    ship speed optimization model and an ice route planning model to calculate the
    path of the ship with the highest energy efficiency for the Arctic area. On the
    basis of historical data, a DNN-based method was used to determine the relationship
    between ice concentration, ship speed, and an energy efficiency indicator, and
    then the optimal path and speed were calculated.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Predicting the Future Paths: The future locations of ships can be predicted
    by DNN trained with turning point data such as latitude and longitude, speed,
    course, length, width, and draft of the ship [[22](#bib.bib22)]. Instead of predicting
    the trajectory iteratively, Gao et al. [[120](#bib.bib120)] performed multistep
    predictions by predicting both the support point and the destination point, where
    the destination point was generated by historical data, and the support point
    was produced by a trained LSTM model.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Planning the Optimal Path for Multiple Tasks: To visit multiple water monitoring
    stations on the surface with minimal costs, Liu et al. [[121](#bib.bib121)] mathematically
    summarized the task as the travel salesman problem, the goal of which is to visit
    all water monitoring stations and return to the starting point. In the global
    path planning stage, a self-organizing map-based DNN was applied to learn the
    relationship between the location of the water monitoring stations and the optimal
    execution sequence.'
  prefs: []
  type: TYPE_NORMAL
- en: VI-B2 Local Path Planning
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Conventional methods do not address sea or weather conditions or consider nonlinear
    ship dynamics due to the following shortcomings [[39](#bib.bib39)]:'
  prefs: []
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The computational complexity of ship collision avoidance mathematical models
    is too high to be calculated in an assumed short period in highly dynamic environments
    with multiple objects.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Predefined architectures can only adopt some specified situations that involve
    oversimplified assumptions in risk assessment and ship dynamic constraints, which
    cannot adapt to complex encounter situations that need to comply with COLREGs.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The control law is usually formed as complicated formulas that consider all
    possible situations, which cannot be further adapted through changes.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Therefore, most of the previous studies address only one obstacle for one instance,
    which is not practical in increasingly busy maritime environments. In this section,
    we review the DRL-based [[122](#bib.bib122), [117](#bib.bib117), [123](#bib.bib123),
    [124](#bib.bib124)] and DNN-based [[122](#bib.bib122), [117](#bib.bib117), [125](#bib.bib125)]
    local path planning methods.
  prefs: []
  type: TYPE_NORMAL
- en: 'DRL-based Local Path Planning: A DRL model learns how to react through continuous
    interaction with an uncertain environment in real time. Ideally, a reward function
    should reward an agent for reaching a destination and avoiding collision with
    other objects while complying with COLREGs [[117](#bib.bib117)]. However, to avoid
    collisions, ASV must deviate from its path and sometimes even move in the opposite
    direction of the destination, which will cause penalties. In [[122](#bib.bib122)],
    if the distances detected from other ships exceed the threshold value, a negative
    reward will be assigned; otherwise, a positive reward will be continuously provided.
    In [[117](#bib.bib117), [124](#bib.bib124)], a path-following reward function
    is used in a safe navigation environment. If TSs enter a safe area around the
    OS, the collision avoidance reward function will be activated.'
  prefs: []
  type: TYPE_NORMAL
- en: 'DNN-based Local Path Planning: In a practical environment, the OS encounters
    many TSs; thus, the number of states related to the TSs changes continuously.
    However, DNN has only a fixed-dimensional input. As a result, to handle the multi-ship
    encounter situation, in [[122](#bib.bib122)], the last five records of detected
    distances were used as input. In [[117](#bib.bib117)], the input dimension of
    DNN is set to four by categorizing the TSs into four regions defined by COLREGs.
    Gao et al. [[125](#bib.bib125)] combined LSTM and sequence conditional GAN to
    learn 12 types of ship encounter modes from AIS data and make an anthropomorphic
    decision to avoid ship collisions.'
  prefs: []
  type: TYPE_NORMAL
- en: VII Deep Learning Driven Control Systems
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: VII-A Definition and Key Problems
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A motion controller of a surface vehicle obtains input references from the guidance
    system, calculates the differences in the input references and the actual output
    values correspondingly, and gives commands to the activators such as thrusters
    and rudders. Figure [7](#S7.F7 "Figure 7 ‣ VII-A Definition and Key Problems ‣
    VII Deep Learning Driven Control Systems ‣ Survey of Deep Learning for Autonomous
    Surface Vehicles in Marine Environments") shows the problems that existing studies
    generally focus on to design a proper ASV controller. The details are as follows.
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/6f393c0dcbbd874c7af8f651f71be298.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7: Problems considered in ASV controller design'
  prefs: []
  type: TYPE_NORMAL
- en: VII-A1 ASV Modeling
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'ASV modeling requires the description of the motion of surface vehicles, which
    is divided into kinematics and dynamics. Kinematics only considers geometrical
    aspects of motion, and dynamics is the analysis of the forces causing motion.
    The vast majority of studies confine surface vehicles into three DOFs, since the
    roll and pitch motions are negligible in many water environments. As shown in
    Figure [2](#S3.F2 "Figure 2 ‣ III-B ASV Architecture ‣ III ASV Systems ‣ Survey
    of Deep Learning for Autonomous Surface Vehicles in Marine Environments"), the
    moving coordinate frame that is attached to the vessel is called the body-fixed
    reference frame, $\sum x_{b}y_{b}O_{b}z_{b}$. The origin of the body-fixed frame
    is chosen to coincide with the center of gravity of the vessel. Moreover, the
    ASV kinematic model of the body-fixed frame is described relative to an inertial
    reference frame as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | $\displaystyle\dot{\bm{\eta}}=R(\eta)\bm{v},$ |  | (1) |'
  prefs: []
  type: TYPE_TB
- en: where $\bm{\eta}=[x~{}y~{}\psi]^{T}\in\mathbb{R}^{3}$ denotes the position and
    heading angle of the vessel in the inertial frame, $\bm{v}=[u~{}v~{}r]^{T}\in\mathbb{R}^{3}$
    denotes the surge velocity, the sway velocity and the angular velocity in the
    body-fixed frame, and $R(\eta)=[\cos{\psi}~{}-\sin{\psi}~{}0;\sin{\psi}~{}\cos{\psi}~{}0;0~{}0~{}1]^{T}$
    is the transformation matrix converting a state vector from the body-fixed frame
    to the inertial frame.
  prefs: []
  type: TYPE_NORMAL
- en: Following the notation developed by Fossen [[126](#bib.bib126)], the nonlinear
    dynamics of surface vessels is described by the following differential equation.
  prefs: []
  type: TYPE_NORMAL
- en: '|  | $\displaystyle\bm{M}\dot{\bm{v}}+\bm{C}(\bm{v})\bm{v}+\bm{D}(\bm{v})\bm{v}=\bm{\tau}+\bm{\tau}_{\text{env}},$
    |  | (2) |'
  prefs: []
  type: TYPE_TB
- en: where $\bm{M}\in\mathbb{R}^{3\times 3}$ is the positive-definite symmetric mass
    and inertia matrix, $\bm{C}(\bm{v})\in\mathbb{R}^{3\times 3}$ is the skew-symmetric
    vessel matrix of Coriolis and centripetal terms, $\bm{D}(\bm{v})\in\mathbb{R}^{3\times
    3}$ is the positive-semidefinite drag matrix, $\bm{\tau}=[\tau_{u}~{}\tau_{v}~{}\tau_{r}]^{T}\in\mathbb{R}^{3}$
    is the applied forces and torques generated by propellers in a body-fixed frame,
    and $\bm{\tau}_{\text{env}}\in\mathbb{R}^{3}$ is the environmental disturbances
    from the winds, currents and waves.
  prefs: []
  type: TYPE_NORMAL
- en: According to the thruster configuration of a vessel, the actuation force and
    moment vector $\bm{\tau}$ can be written as
  prefs: []
  type: TYPE_NORMAL
- en: '|  | $\displaystyle\bm{\tau}=\bm{B}\bm{u},$ |  | (3) |'
  prefs: []
  type: TYPE_TB
- en: where $\bm{B}\in\mathbb{R}^{3\times{n_{u}}}$ is the control matrix that describes
    the thruster configuration and $\bm{u}\in\mathbb{R}^{{n_{u}}}$ is the control
    vector that represents the forces generated by the propellers, where $n_{u}$ is
    the dimension of the control vector.
  prefs: []
  type: TYPE_NORMAL
- en: 'Furthermore, by combining ([1](#S7.E1 "In VII-A1 ASV Modeling ‣ VII-A Definition
    and Key Problems ‣ VII Deep Learning Driven Control Systems ‣ Survey of Deep Learning
    for Autonomous Surface Vehicles in Marine Environments")), ([2](#S7.E2 "In VII-A1
    ASV Modeling ‣ VII-A Definition and Key Problems ‣ VII Deep Learning Driven Control
    Systems ‣ Survey of Deep Learning for Autonomous Surface Vehicles in Marine Environments"))
    and ([3](#S7.E3 "In VII-A1 ASV Modeling ‣ VII-A Definition and Key Problems ‣
    VII Deep Learning Driven Control Systems ‣ Survey of Deep Learning for Autonomous
    Surface Vehicles in Marine Environments")), the complete dynamic model of the
    vessel is reformulated as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | $\displaystyle\dot{\mathbf{q}}(t)=f(\mathbf{q}(t),\mathbf{u}(t)),$ |  |
    (4) |'
  prefs: []
  type: TYPE_TB
- en: where $\mathbf{q}=[x~{}y~{}\psi~{}u~{}v~{}r]^{T}\in\mathbb{R}^{6\times 1}$ is
    the vessel state vector and $f(\cdot,\cdot,\cdot):\mathbb{R}^{n_{q}}\times\mathbb{R}^{n_{u}}\longrightarrow\mathbb{R}^{n_{q}}$
    denotes the continuously differentiable state update function. The system model
    describes how the full state $\mathbf{q}$ changes in response to applied control
    input $\mathbf{u}\in\mathbb{R}^{{n_{u}}}$.
  prefs: []
  type: TYPE_NORMAL
- en: VII-A2 Controller Design
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A controller can be built based on classical, optimal, adaptive, intelligent,
    robust, and sliding mode control methods, or a combination of these techniques,
    as listed in Table [II](#S7.T2 "TABLE II ‣ VII-A2 Controller Design ‣ VII-A Definition
    and Key Problems ‣ VII Deep Learning Driven Control Systems ‣ Survey of Deep Learning
    for Autonomous Surface Vehicles in Marine Environments").
  prefs: []
  type: TYPE_NORMAL
- en: 'TABLE II: Main control techniques [[37](#bib.bib37)]'
  prefs: []
  type: TYPE_NORMAL
- en: '| Control Techniques | Examples |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Classical Control Methods | Proportional-Integral-Derivative (PID) |'
  prefs: []
  type: TYPE_TB
- en: '| Recursive Control | Backstepping |'
  prefs: []
  type: TYPE_TB
- en: '| Adaptive Control | NN Adaptive Control |'
  prefs: []
  type: TYPE_TB
- en: '| Hierarchical Control System |  |'
  prefs: []
  type: TYPE_TB
- en: '| Intelligent Control | Neural Networks (NN) |'
  prefs: []
  type: TYPE_TB
- en: '|  | Bayesian Probability |'
  prefs: []
  type: TYPE_TB
- en: '|  | Genetic Algorithms |'
  prefs: []
  type: TYPE_TB
- en: '|  | Fuzzy Logic |'
  prefs: []
  type: TYPE_TB
- en: '|  | Machine Learning |'
  prefs: []
  type: TYPE_TB
- en: '|  | Evolutionary Computation |'
  prefs: []
  type: TYPE_TB
- en: '| Optimal Control | Linear-Quadratic-Gaussian Control (LQG) |'
  prefs: []
  type: TYPE_TB
- en: '|  | Model Predictive Control (MPC) |'
  prefs: []
  type: TYPE_TB
- en: '| Robust Control | H-infinity Loop-Shaping |'
  prefs: []
  type: TYPE_TB
- en: '|  | Sliding Mode Control (SMC) |'
  prefs: []
  type: TYPE_TB
- en: '|  | Dynamic Surface Control (DSC) |'
  prefs: []
  type: TYPE_TB
- en: '| Stochastic Control |  |'
  prefs: []
  type: TYPE_TB
- en: '| Energy-shaping Control |  |'
  prefs: []
  type: TYPE_TB
- en: '| Self-organized Criticality Control |  |'
  prefs: []
  type: TYPE_TB
- en: VII-A3 Actuation Capabilities
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A vehicle with full actuation can control all its DOFs simultaneously independently;
    otherwise, the vehicle is underactuated. As the most common configuration among
    ASVs, underactuation makes the design of controllers much more difficult compared
    to actuated ASVs because only the surge and yaw axes are directly actuated with
    propellers and rudders. There are no actuators for direct control of sway motion
    for actuated ASVs.
  prefs: []
  type: TYPE_NORMAL
- en: VII-A4 Motion Control Scenarios
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Many motion controllers are designed to solve one or more specific problems
    in different scenarios to accomplish their specified tasks. In general, depending
    on what motion information and constraints are available as a priori, they can
    be categorized into point stabilizing, target tracking, trajectory tracking, path
    following, maneuvering, and berthing. The schematic diagrams are shown in Figure [8](#S7.F8
    "Figure 8 ‣ VII-A4 Motion Control Scenarios ‣ VII-A Definition and Key Problems
    ‣ VII Deep Learning Driven Control Systems ‣ Survey of Deep Learning for Autonomous
    Surface Vehicles in Marine Environments"), and we describe each motion control
    scenario below.
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/5c001acd52a28dbb19c9b550015722dc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8: Motion Control Scenarios, (a)-(d) refer to [[127](#bib.bib127)]'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Point Stabilization: The objective is to position and orient the
    ASV in fixed target operations without time constraints under changing ocean disturbances
    [[128](#bib.bib128)]. For underactuated ASVs, only discontinuous or smooth time-varying
    control is possible if all three coordinates are stabilized [[36](#bib.bib36)].
    The thruster-assisted position mooring system (PM) for anchored vessels and the
    dynamic positioning system (DP) for free-floating vessels are two main types of
    positioning systems for traditional vessels [[128](#bib.bib128)]. PM consumes
    less energy because it usually has many anchor lines for each platform. The DP
    system uses only actuated thrusters to accurately maintain the position and heading
    of the ASV at a fixed location or on a predetermined track. DP has gained increasing
    attention because it easily changes position and is adapted to various ocean environments.'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Target Tracking: The goal is to track the motion of static or dynamic
    targets without knowing future information about the motion of the target [[129](#bib.bib129)].
    Related spatio-temporal constraints must be considered simultaneously.'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Trajectory Tracking: This refers to the ability to follow a specified
    path at a desired forward speed with a time constraint. Therefore, it is possible
    to consider the spatiotemporal constraints related to the target separately [[130](#bib.bib130)].'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Path Following (also called track keeping, path keeping, or course
    keeping): The objective is to follow a predefined path with constant forward velocity
    that only involves a spatial constraint [[130](#bib.bib130)].'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Manoeuvring: As a subset of the path following [[127](#bib.bib127)],
    the objective of maneuvering is to steer the ASV along a predefined path, while
    controlling speed can be addressed as a separate task [[131](#bib.bib131)]. The
    maneuvering problem can be divided into geometric and dynamic tasks. The first
    is similar to the following path, and the second assigns a time, speed, or acceleration
    along the path. In contrast, the tracking problem merges the above two tasks into
    a single task.'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Berthing: A ship should be able to stop near the berthing point at
    low speed [[132](#bib.bib132)]. As one of the most difficult problems in automated
    ship control, it is almost impossible to consider all possible situations during
    berthing due to the influence of unpredictable environmental disturbances. In
    more extreme cases, with drastic reduction in ship maneuverability, the signals
    of ship motion and noise are almost the same, making it difficult to adjust the
    rudder angle.'
  prefs: []
  type: TYPE_NORMAL
- en: VII-A5 Practical Issue
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Model uncertainties and constraints are commonly considered issues. To address
    nonlinear systems with uncertainties and constraints, model-free methods such
    as DNNs and fuzzy logic controllers are widely used.
  prefs: []
  type: TYPE_NORMAL
- en: 'Model Uncertainties: They are usually caused by unknown dynamics [[133](#bib.bib133),
    [134](#bib.bib134), [135](#bib.bib135)], underactuated ASVs [[136](#bib.bib136)],
    high-speed maneuvering situation [[137](#bib.bib137)], sensor errors [[134](#bib.bib134)],
    or environmental disturbances [[138](#bib.bib138)], which may introduce unknown
    parameters, terms, or functions into an ASV control system.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Constraints: Various constraints widely exist in most physical systems, such
    as input / output control signals, velocities, performance and communication constraints
    [[139](#bib.bib139)]. Control systems must address these limits and constraints,
    or the control performance will degrade, leading to control failure or even potential
    collisions.'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Input Control Signal Constraints: In practical control systems, feedback
    control systems are inevitably subject to actuator saturation/input saturation,
    which means that the control torques are constrained due to the physical limitations
    of actuators. If the control signals generated by the controller exceed a certain
    range, the tracking performance for the closed-loop system cannot be guaranteed.'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Output Control Signal Constraints: ASV outputs are not allowed to
    exceed a certain constrained distance from the predefined path; that is, the range
    of the output error is limited [[136](#bib.bib136)]. Such constraints are crucial
    for system performance and ASV safety, especially in narrow waterways.'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Velocities Constraints: In certain real scenarios, an underactuated
    ship moves in the open sea with limited forward and angular velocity. Therefore,
    velocity constraints are considered in some studies [[140](#bib.bib140)].'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Performance Constraints: To achieve steady-state tracking performance,
    the prescribed transient performance (e.g., predetermined convergence rate) is
    important in many practical applications [[141](#bib.bib141)]. For example, angle
    and LOS range errors should always stay within predefined regions.'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Communication Constraints: Communication resources are limited in
    a real maritime environment. Therefore, event-triggered control methods, which
    only update actuator state if a particular event occurs or a given condition is
    met, have been studied by many researchers [[142](#bib.bib142), [143](#bib.bib143),
    [144](#bib.bib144)].'
  prefs: []
  type: TYPE_NORMAL
- en: VII-B Control with Deep Learning Model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: DNN and DRL are model-free estimators that map conditions to actions and are
    widely employed to develop robust adaptive controllers for uncertain nonlinear
    systems to estimate model uncertainties or generate a control signal. All controllers
    based on the DL model or related to the DL model are compared in Table [III](#S7.T3
    "TABLE III ‣ VII-B Control with Deep Learning Model ‣ VII Deep Learning Driven
    Control Systems ‣ Survey of Deep Learning for Autonomous Surface Vehicles in Marine
    Environments") and categorized into 6 typical motion control scenarios. Several
    key works are described in the following paragraph for different purposes of the
    DL model.
  prefs: []
  type: TYPE_NORMAL
- en: 'TABLE III: The Comparison of DL-Based or Related Controllers'
  prefs: []
  type: TYPE_NORMAL
- en: '| Applied DL | DL App. | Main Control Techniques | Proposed Model | DIS. |
    CON. | ACT. | REF. |'
  prefs: []
  type: TYPE_TB
- en: '| Point Stabilization |'
  prefs: []
  type: TYPE_TB
- en: '| MLP | E. | Backstepping | Robust adaptive position mooring control | ✓ |
    In. | - | [[145](#bib.bib145)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | Backstepping | Robust adaptive nonlinear controller | ✓ | - |
    - | [[146](#bib.bib146)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | Backstepping | Robust adaptive output feedback control scheme
    | ✓ | - | - | [[147](#bib.bib147)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | Backstepping | Robust neural event-triggered control | ✓ | Com.
    | Act. | [[142](#bib.bib142)] |'
  prefs: []
  type: TYPE_TB
- en: '| Target Tracking |'
  prefs: []
  type: TYPE_TB
- en: '| MLP | E. | ESO | Target tracking controller | ✓ | In. | Un. | [[148](#bib.bib148)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| Trajectory Tracking |'
  prefs: []
  type: TYPE_TB
- en: '| MLP | E. | Backstepping | Stable tracking controller | ✓ | - | Act. | [[10](#bib.bib10)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | Backstepping | Robust adaptive tracking controller | ✓ | In. |
    - | [[149](#bib.bib149)] |'
  prefs: []
  type: TYPE_TB
- en: '| WNN | G. | WNN | Neural and auxiliary compensation controller | ✓ | - | -
    | [[150](#bib.bib150)] |'
  prefs: []
  type: TYPE_TB
- en: '| MLP | E. | NN&PD | Adaptive output feedback controller | ✓ | - | - | [[137](#bib.bib137)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | Backstepping | Adaptive NN controller | ✓ | Out. | Act. | [[139](#bib.bib139)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| One-layer | E. | Backstepping | NN controller | ✓ | - | - | [[151](#bib.bib151)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | Backstepping | Adaptive output feedback NN tracking controller
    | ✓ | - | Act. | [[152](#bib.bib152)] |'
  prefs: []
  type: TYPE_TB
- en: '| One-layer | E. | Backstepping | NN based tracking controller | ✓ | In.Vel.
    | Un. | [[140](#bib.bib140)] |'
  prefs: []
  type: TYPE_TB
- en: '| FNN | E. | SMC | Adaptive robust fuzzy neural controller | ✓ | - | - | [[153](#bib.bib153)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| MLP | E. | NN | Saturated neural adaptive robust controller | ✓ | - | Un.
    | [[154](#bib.bib154)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | HGO | Adaptive NN controller |  | Out. | Act. | [[155](#bib.bib155)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | NN | Adaptive output feedback controller | ✓ | - | Un. | [[156](#bib.bib156)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | Backstepping | Trajectory tracking controller | ✓ | - | Act. |
    [[11](#bib.bib11)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | Backstepping | Sign of the error based adaptive NN controller
    | ✓ | Per. | Act. | [[141](#bib.bib141)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | DSC & backstepping | Adaptive neural controller | ✓ | Per. | Un.
    | [[136](#bib.bib136)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | SMC & backstepping | Adaptive sliding mode controller | ✓ | In.
    | Un. | [[133](#bib.bib133)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | SMC & DSC | Adaptive dynamic surface controller | ✓ | In. | Act.
    | [[134](#bib.bib134)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | Backstepping & HGO | Neuro-adaptive trajectory tracking controller
    | ✓ | - | Un. | [[135](#bib.bib135)] |'
  prefs: []
  type: TYPE_TB
- en: '| DRL | G. | DRL | Mode-reference RL controller | ✓ | - | - | [[138](#bib.bib138)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | DSC | Robust adaptive controller | ✓ | In.Out. | - | [[157](#bib.bib157)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | DSC | Adaptive NN controller | ✓ | In. | Un. | [[158](#bib.bib158)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| DRL | G. | DRL | Actor-critic NNs based controller | ✓ | Out. | Un. | [[159](#bib.bib159)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | Backstepping | Robust adaptive controller | ✓ | - | Un. | [[160](#bib.bib160)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | Backstepping | Adaptive neural output feedback controller | ✓
    | - | - | [[161](#bib.bib161)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | SMC | BF-based adaptive NN SMC | ✓ | - | - | [[162](#bib.bib162)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| DRL | G. | DRL | Data-driven performance-prescribed RL controller | ✓ | Per.
    | - | [[16](#bib.bib16)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | SMC | Fixed-time SMC | ✓ | Vel. | Un. | [[163](#bib.bib163)] |'
  prefs: []
  type: TYPE_TB
- en: '| MLP | E. | MPC | PWM-driven model predictive controller | ✓ | - | - | [[164](#bib.bib164)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| MLP%DRL | E.&G. | DRL | RL based optimal tracking controller | ✓ | Vel. |
    - | [[15](#bib.bib15)] |'
  prefs: []
  type: TYPE_TB
- en: '| Path Following |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | G. | RBF | Ship steering control system |  | - | - | [[165](#bib.bib165)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | DSC | Adaptive NN path-following controller | ✓ | - | Un. | [[166](#bib.bib166)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | Backstepping | Robust adaptive RBFNN controller | ✓ | In. | -
    | [[167](#bib.bib167)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | DSC | Adaptive NN-DSC controller | ✓ | In. | Un. | [[168](#bib.bib168)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | RBF | Robust neural path-following controller | ✓ | Com. | Un.
    | [[169](#bib.bib169)] |'
  prefs: []
  type: TYPE_TB
- en: '| DRL | G. | DRL | DRL-based path following controller | ✓ | - | - | [[14](#bib.bib14)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | Backstepping | Adaptive NN event-triggered controller | - | -
    | Un. | [[144](#bib.bib144)] |'
  prefs: []
  type: TYPE_TB
- en: '| DRL | G. | DRL | RL-based controller |  | - | Un. | [[170](#bib.bib170)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| DRL | G. | DRL | Smoothly-convergent DRL method | ✓ | - | Un. | [[19](#bib.bib19)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | DSC | Composite neural learning fault-tolerant controller | ✓
    | Com. | Un. | [[143](#bib.bib143)] |'
  prefs: []
  type: TYPE_TB
- en: '| Projection NN | G. | MPC | Quasi-infinite horizon MPC controller | ✓ | Vel.
    | Un. | [[171](#bib.bib171)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | DSC&backstepping | Adaptive NN control | ✓ | Out. | Un. | [[172](#bib.bib172)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| Critic NN | E. | Backstepping | Dynamic path-following controller | ✓ | Vel.
    | Un. | [[173](#bib.bib173)] |'
  prefs: []
  type: TYPE_TB
- en: '| Manoeuvring |'
  prefs: []
  type: TYPE_TB
- en: '| RNN | G. | RNN | RNN manoeuvring simulation model |  | - | - | [[12](#bib.bib12)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| MLP | E. | PID/PD | Self-tuning NN based PID controller |  | - | - |'
  prefs: []
  type: TYPE_TB
- en: '&#124; [[174](#bib.bib174)] &#124;'
  prefs: []
  type: TYPE_NORMAL
- en: '&#124; [[175](#bib.bib175)] &#124;'
  prefs: []
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| RBF | G. | RBF | Course keeping and roll damping controller | ✓ | - | - |
    [[176](#bib.bib176)] |'
  prefs: []
  type: TYPE_TB
- en: '| LSTM | E. | LSTM | DL based dynamic model identification method |  | In.
    | - | [[177](#bib.bib177)] |'
  prefs: []
  type: TYPE_TB
- en: '| DRL | G. | DRL | Concise DRL obstacles avoidance control | ✓ | Vel. | Un.
    | [[115](#bib.bib115)] |'
  prefs: []
  type: TYPE_TB
- en: '| Berthing |'
  prefs: []
  type: TYPE_TB
- en: '| MLP | G. | MLP | Multi-variable Neural Controller | ✓ | - | - | [[132](#bib.bib132)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| MLP | G. | MLP&PD | NN and PD controller | ✓ | In. | - | [[178](#bib.bib178)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| MLP | G. | MLP | NN controller |  | - | - | [[179](#bib.bib179)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF | E. | DSC | Auto-berthing control scheme | ✓ | In. | Un. | [[180](#bib.bib180)]
    |'
  prefs: []
  type: TYPE_TB
- en: '| MLP | G. | MLP | NN based automatic ship docking | ✓ | Vel. | - | [[25](#bib.bib25)]
    |'
  prefs: []
  type: TYPE_TB
- en: 'Notes: 1\. (-) not mentioned; (✓) considered. 2\. (DL App.) Applications of
    DL, including Model Uncertainties Estimation [E.], Control Signals Generation
    [G.]; (DIS.) Disturbance; (CON.) Constraints, including constraints on Input control
    signal [In.], Output control signal [Out.], Velocities [Vel.], Performance [Per.],
    Communications [Com.]; (ACT.) Actuated [Act.] or Underactuated [Un.]; (REF.) References.'
  prefs: []
  type: TYPE_NORMAL
- en: VII-B1 Model Uncertainties Estimation
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The unknown parameters, terms or functions introduced by unknown dynamics, underactuated
    ASVs, high-speed maneuvering situations, sensor errors, or environmental disturbances
    can be estimated by DNN.
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Point Stabilization: DNN has been applied to estimate the model uncertainties
    for both PM systems [[145](#bib.bib145)] and DP systems [[146](#bib.bib146), [147](#bib.bib147),
    [142](#bib.bib142)]. Actuator faults are frequently encountered for DP ships with
    multiple actuators. Zhang et al. [[142](#bib.bib142)] designed a DP control method
    that considers actuator faults and limited communication resources. The uncertainty
    of these subsystems was approximated by RBF, and the computational complexity
    was reduced by DSC, which greatly reduced gain-related adaptive parameters.'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Target Tracking: Without knowing the target velocity information,
    Liu et al. [[148](#bib.bib148)] used the extended state observer (ESO) and DNN
    to estimate the dynamics of the target and follower, respectively. Furthermore,
    the control torques are bounded by integrating the neural estimation model and
    a saturated function.'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Trajectory Tracking: DL model is capable of learning the unknown
    dynamics for fully actuated ASVs [[10](#bib.bib10), [149](#bib.bib149), [139](#bib.bib139),
    [151](#bib.bib151), [153](#bib.bib153), [155](#bib.bib155), [141](#bib.bib141),
    [133](#bib.bib133), [134](#bib.bib134), [157](#bib.bib157), [161](#bib.bib161),
    [138](#bib.bib138), [164](#bib.bib164), [162](#bib.bib162), [137](#bib.bib137),
    [15](#bib.bib15)], estimating the unknown dynamics for underactuated ASVs [[140](#bib.bib140),
    [154](#bib.bib154), [156](#bib.bib156), [136](#bib.bib136), [135](#bib.bib135),
    [158](#bib.bib158), [159](#bib.bib159), [160](#bib.bib160), [163](#bib.bib163)]
    and approximating unknown disturbances [[10](#bib.bib10), [149](#bib.bib149),
    [139](#bib.bib139), [153](#bib.bib153), [11](#bib.bib11), [159](#bib.bib159),
    [162](#bib.bib162)].'
  prefs: []
  type: TYPE_NORMAL
- en: DNNs are usually adopted to estimate the term of the control law, which is formed
    by unknown parameters, such as the inertia matrix $M$, the Coriolis and centripetal
    terms matrix $C(v)$, the damping matrix $D(v)$, and the unknown vector of gravitational
    and buoyancy forces and moments $g(\eta)$ [[10](#bib.bib10), [149](#bib.bib149),
    [139](#bib.bib139), [151](#bib.bib151), [152](#bib.bib152), [153](#bib.bib153),
    [155](#bib.bib155), [133](#bib.bib133), [134](#bib.bib134), [157](#bib.bib157)].
    DNNs can also estimate unmeasurable velocities [[161](#bib.bib161)].
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Path Following: To address arbitrary uncertainties, DNN is used to
    approximate unknown dynamics [[166](#bib.bib166), [167](#bib.bib167), [168](#bib.bib168),
    [169](#bib.bib169), [143](#bib.bib143), [169](#bib.bib169), [144](#bib.bib144),
    [172](#bib.bib172), [173](#bib.bib173)] and disturbances [[167](#bib.bib167),
    [168](#bib.bib168)]. For most of the existing work, researchers focused on controlling
    underactuated ASVs because they are characterized by strong nonlinearity, uncertainty
    of the model parameter, and constraints of the control input saturation, and are
    easily influenced by external interference [[166](#bib.bib166), [144](#bib.bib144),
    [168](#bib.bib168), [169](#bib.bib169), [144](#bib.bib144), [143](#bib.bib143),
    [172](#bib.bib172), [173](#bib.bib173)].'
  prefs: []
  type: TYPE_NORMAL
- en: In DNN-based backstepping design, Li et al. [[144](#bib.bib144)] combined a
    fast power reaching law with RBFNN in the controller design to accelerate the
    convergence rate of tracking error and achieve finite-time stabilization of the
    controller. The DSC technique can reduce the computational burden introduced by
    backstepping. In the DNN-based DSC design, DNN estimated the unknown system functions
    of the proposed controller to develop uncertain nonlinear multi-input-multiple-output
    (MIMO) time-delay systems [[166](#bib.bib166), [168](#bib.bib168)].
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Manoeuvring: Among the 6-DOF of a ship, the roll motion has gained
    the most attention because large rolling motions may capsize a ship. Therefore,
    DNN was applied to estimate the unknown dynamics to reduce the rolling motion
    [[174](#bib.bib174), [175](#bib.bib175)].'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Berthing: When approaching a port, a ship is very difficult to control
    and is easily influenced by disturbances and winds at a very low speed, making
    prediction or representation using differential equations difficult because the
    signal-to-noise ratio is too low for any controller to separate it from the real
    motion of the ship [[132](#bib.bib132)]. The automatic berthing controller is
    a complicated MIMO system that can simultaneously evaluate many factors, such
    as the current speed of the ship, the angle of berth and the distance to the pier.
    DNN can be used to reconstruct uncertain modal dynamics and unknown disturbances
    [[180](#bib.bib180)] or learn any nonlinear MIMO system and respond to any unknown
    situation if enough input and output data are available for training [[132](#bib.bib132),
    [178](#bib.bib178), [179](#bib.bib179), [25](#bib.bib25)].'
  prefs: []
  type: TYPE_NORMAL
- en: VII-B2 Control Signals Generation
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Data driven models such as DNN and DRL can generate control signals without
    an a prioir model [[127](#bib.bib127)].
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Trajectory Tracking: Wang et al. [[16](#bib.bib16)] proposed an RL
    control algorithm with a DNN-based actor-critic structure to establish a data-driven
    method-based optimal control scheme, which only requires ASV input-output data
    pairs. Here, the critic and actor DNNs learned the optimal policy and cost function
    simultaneously.'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Path Following: Without dependency on prior knowledge of dynamic
    modeling, DNN [[165](#bib.bib165)] and DRL [[14](#bib.bib14), [19](#bib.bib19),
    [170](#bib.bib170)] can generate the control signal directly. DRL can learn from
    the interactions between the agent and the environment to find the best policy
    without knowing any information in advance. Based on a two-DQN structure, Zhao
    et al. [[19](#bib.bib19)] reduced the complexity of the control law by designing
    computationally efficient exploring and reward functions.'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Manoeuvring: To adapt to various and complex navigation requirements,
    Cheng et al. [[115](#bib.bib115)] used the DRL method with a DQN architecture
    to control underactuated ASVs. The objectives and constraints, including destination,
    obstacle avoidance, target approach, speed modification, and attitude correction,
    were considered in the avoidance reward function, the input of which is provided
    by a CNN-based data fusion module, and the outputs of the DRL network were the
    propulsion surge force and the yaw moment.'
  prefs: []
  type: TYPE_NORMAL
- en: '$\bullet$ Berthing: Im et al. [[179](#bib.bib179)] proposed an artificial NN
    controller that could automatically control the ship during berthing at the original
    port and other ports. The initial conditions of the inputs in the head-up coordinate
    system of other ports should be similar to those of the training data in the original
    port. Then, a DNN controller can adapt to different ports without retaining based
    on two key inputs, that is, the relative bearing and distance from the ship to
    the berth.'
  prefs: []
  type: TYPE_NORMAL
- en: VIII Deep Learning in Cooperative Operations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To carry out complex and large-scale missions in maritime cooperation scenarios,
    cooperative control of multiple ASVs offers increased efficacy, performance, scalability,
    and robustness and the emergence of new capabilities [[127](#bib.bib127)]. Furthermore,
    as an indispensable part of future transportation systems, autonomous systems
    are supported by the internal and external Internet of Things (IoT), big data
    platforms, and communication infrastructures. As shown in Figure [9](#S8.F9 "Figure
    9 ‣ VIII Deep Learning in Cooperative Operations ‣ Survey of Deep Learning for
    Autonomous Surface Vehicles in Marine Environments"), taking advantage of advanced
    communication technologies, together with multiple underwater and air vehicles,
    intelligent cooperative maritime operations have emerged. A considerable portion
    of ship intelligence will consist of a DL-based framework, especially for networks
    that are trained by image-based information and navigational actions rather than
    system parameters [[9](#bib.bib9)]. In this section, several issues regarding
    cooperative operations based on the application of DL methods are discussed. Table
    [IV](#S8.T4 "TABLE IV ‣ VIII-A Cooperative Control ‣ VIII Deep Learning in Cooperative
    Operations ‣ Survey of Deep Learning for Autonomous Surface Vehicles in Marine
    Environments") compares coordinated control methods based on DL or related to
    DL.
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/f6b4b575af19c6961e339602cd2da908.png)'
  prefs: []
  type: TYPE_IMG
- en: (a) Typical scenarios [[129](#bib.bib129)]
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/62ba73e64bf40183f2057fe5339e4aff.png)'
  prefs: []
  type: TYPE_IMG
- en: (b) Key techniques [[5](#bib.bib5)]
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 9: Communication and Networking of Autonomous Systems'
  prefs: []
  type: TYPE_NORMAL
- en: VIII-A Cooperative Control
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Cooperative control aims to force a group of ASVs to achieve and maintain the
    desired formation geometry by designing path-following, trajectory-following,
    and target-following controllers while ensuring that the agents complete the predefined
    task. Leader-follower formation control and leaderless formation control are two
    common strategies of cooperative control methods. The difference between these
    methods lies in whether the group follows a physical leader ASV or reaches a common
    value through local interaction [[181](#bib.bib181)]. In this survey, existing
    results can also be classified into coordinated controls guided by a trajectory,
    a path and a maneuvering guide according to various types of reference signals,
    which can be further classified into three architectures according to the available
    communication bandwidths and sensing abilities, i.e., centralized, decentralized
    and distributed controls. In addition to sophisticated guidance and control methods,
    the challenges of cooperative control systems with multiple ASVs include model
    uncertainties, environmental disturbances, communication constraints, and collision
    avoidance (avoiding static and dynamic obstacles while maintaining the predefined
    formation pattern) [[127](#bib.bib127)].
  prefs: []
  type: TYPE_NORMAL
- en: 'TABLE IV: The Comparison of DL-Based or Related Cooperative Control Methods'
  prefs: []
  type: TYPE_NORMAL
- en: '| App. of DL | Controller | Proposed Model | ARC. | DIS. | CON. | ACT. | REF.
    |'
  prefs: []
  type: TYPE_TB
- en: '| Leader-follower formation control - Path-guided coordinated controls |'
  prefs: []
  type: TYPE_TB
- en: '| MLP / E. | Backstepping | NN-based robust adaptive formation controller |
    Cent. | ✓ | - | Un. | [[182](#bib.bib182)] |'
  prefs: []
  type: TYPE_TB
- en: '| MLP / E. | DSC | Adaptive dynamic surface control | Cent. | ✓ | - | Un. |
    [[183](#bib.bib183)] |'
  prefs: []
  type: TYPE_TB
- en: '| Leader-follower formation control - Trajectory-guided coordinated controls
    |'
  prefs: []
  type: TYPE_TB
- en: '| RBF / E. | Adaptive robust control | Leader-follower formation tracking controller
    | Cent. | ✓ | In. | Un. | [[184](#bib.bib184)] |'
  prefs: []
  type: TYPE_TB
- en: '| MLP / E. | Adaptive robust control | Output feedback formation control |
    Cent. | ✓ | In. | Act. | [[13](#bib.bib13)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF / E. | DSC | Robust adaptive formation control | Cent. | ✓ | - | Un.
    | [[185](#bib.bib185)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF / E. | DSC & Backstepping | Adaptive platoon formation control | Dece.
    | ✓ | Per.CA | Act. | [[186](#bib.bib186)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF / E. | DSC & Backstepping | Decentralized adaptive formation control
    | Dece. | ✓ | Per.CA | Act. | [[187](#bib.bib187)] |'
  prefs: []
  type: TYPE_TB
- en: '| MLP / E. | DSC & Backstepping | Output-feedback formation tacking control
    | Dece. | - | Com.CA | Act. | [[188](#bib.bib188)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF / E. | Backstepping | Adaptive finite-time event-triggered control |
    Cent. | ✓ | Out.Per. | Act. | [[189](#bib.bib189)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF / E. | Fault-tolerant control | Neural finite-time formation control
    | Cent. | ✓ | - | Un. | [[190](#bib.bib190)] |'
  prefs: []
  type: TYPE_TB
- en: '| Leaderless formation control - Path-guided coordinated controls |'
  prefs: []
  type: TYPE_TB
- en: '| MLP / E. | DSC | Cooperative path following controllers | Dist. | ✓ | In.
    | - | [[191](#bib.bib191)] |'
  prefs: []
  type: TYPE_TB
- en: '| MLP / E. | DSC | NN based adaptive dynamic surface control | Dece. | ✓ |
    Com. | - | [[192](#bib.bib192)] |'
  prefs: []
  type: TYPE_TB
- en: '| MLP / E. | Backstepping | Adaptive bounded neural network controller | Dist.
    | ✓ | In. | Un. | [[193](#bib.bib193)] |'
  prefs: []
  type: TYPE_TB
- en: '| MLP / E. | Model-free control | Integrated distributed guidance and learning
    control | Dist. | ✓ | - | Un. | [[194](#bib.bib194)] |'
  prefs: []
  type: TYPE_TB
- en: '| DRL / G. | DRL | USV Formation and Path-Following Control | Dist. | - | -
    | Un. | [[195](#bib.bib195)] |'
  prefs: []
  type: TYPE_TB
- en: '| Leaderless formation control - Trajectory-guided coordinated controls |'
  prefs: []
  type: TYPE_TB
- en: '| MLP / E. | Backstepping | Distributed adaptive controller | Dist. | ✓ | -
    | - | [[181](#bib.bib181)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF / E. | DSC | Distributed robust adaptive cooperative control | Dist.
    | ✓ | In. | - | [[196](#bib.bib196)] |'
  prefs: []
  type: TYPE_TB
- en: '| MLP / E. | Backstepping | Distributed cooperation formation control | Dist.
    | ✓ | Per. | Act. | [[197](#bib.bib197)] |'
  prefs: []
  type: TYPE_TB
- en: '| WNN / E. | Backstepping | Distributed coordinated tracking control | Dist.
    | ✓ | CA | Un. | [[198](#bib.bib198)] |'
  prefs: []
  type: TYPE_TB
- en: '| MLP / E. | DSC & Backstepping | Adaptive neural formation control | Dece.
    | - | CA | Un. | [[199](#bib.bib199)] |'
  prefs: []
  type: TYPE_TB
- en: '| MLP / E. | Distributed coordinated control | Event-triggered distributed
    coordinated control | Dist. | ✓ | In. | Act. | [[200](#bib.bib200)] |'
  prefs: []
  type: TYPE_TB
- en: '| MLP / E. | Event-triggered control | Event-triggered adaptive neural fault-tolerant
    control | Cent. | ✓ | In. | Un. | [[201](#bib.bib201)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF / E. | SMC | Finite-time distributed formation control | Dist. | ✓ |
    In. | Act. | [[202](#bib.bib202)] |'
  prefs: []
  type: TYPE_TB
- en: '| Leaderless formation control - Maneuvering-guided coordinated controls |'
  prefs: []
  type: TYPE_TB
- en: '| RNN / E. | DSC | Containment maneuvering controller | Dist. | ✓ | - | Act.
    | [[203](#bib.bib203)] |'
  prefs: []
  type: TYPE_TB
- en: '| RNN / E. | TD | Cooperative path maneuvering controller | Dist. | ✓ | - |
    Un. | [[204](#bib.bib204)] |'
  prefs: []
  type: TYPE_TB
- en: '| RNN / O. | Fuzzy kinetic control | Distributed maneuvering controller | Dist.
    | ✓ | Vel. | - | [[205](#bib.bib205)] |'
  prefs: []
  type: TYPE_TB
- en: '| RBF / E. | TD | Event-triggered modular-ISS NN controller | Dist. | ✓ | -
    | Act. | [[206](#bib.bib206)] |'
  prefs: []
  type: TYPE_TB
- en: '| RNN / O. | Distributed control | Safety-critical containment maneuvering
    control | Dist. | ✓ | In.CA | Un. | [[207](#bib.bib207)] |'
  prefs: []
  type: TYPE_TB
- en: 'Notes: 1\. (-) not mentioned; (✓) considered. 2\. (App. of DL) The applied
    DL model and the applications of DL model, the applications include Model Uncertainties
    Estimation [E.], Control Signals Generation [G.], Optimization [O.]; (ARC.) Architecture
    in coordinated control, including Centralized control [Cent.], Decentralized control
    [Dece.], and Distributed control [Dist.]; (DIS.) Disturbance; (CON.) Constraints,
    including constraints on Input control signal [In.], Output control signal [Out.],
    Velocities [Vel.], Performance [Per.], Communications [Com.], Collision Avoidance
    [CA]; (ACT.) Actuated [Act.] or Underactuated [Un.]; (REF.) References.'
  prefs: []
  type: TYPE_NORMAL
- en: VIII-A1 Leader-Follower Formation Control
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Path-guided coordinated controls [[182](#bib.bib182), [183](#bib.bib183)] and
    trajectory-guided coordinated controls [[184](#bib.bib184), [13](#bib.bib13),
    [186](#bib.bib186), [187](#bib.bib187), [185](#bib.bib185), [188](#bib.bib188),
    [189](#bib.bib189), [190](#bib.bib190)] are two basic tasks for DL-based leader-follower
    formation control. The DL model is generally applied to estimate the uncertainties
    of the model, i.e., to compensate for unknown disturbance [[184](#bib.bib184),
    [13](#bib.bib13), [185](#bib.bib185), [189](#bib.bib189)], unknown dynamic [[184](#bib.bib184),
    [183](#bib.bib183), [186](#bib.bib186), [187](#bib.bib187), [188](#bib.bib188),
    [189](#bib.bib189), [190](#bib.bib190)], or unknown velocities [[182](#bib.bib182),
    [183](#bib.bib183)].
  prefs: []
  type: TYPE_NORMAL
- en: 'Path-guided Coordinated Controls: Existing research attempted to address unknown
    dynamics, unmodeled disturbances, velocity estimations, and system stability in
    path-guided coordinated control tasks. Peng et al. [[182](#bib.bib182), [183](#bib.bib183)]
    proposed a DNN-based formation control that only uses the LOS range and angle
    measured by local sensors and can compensate for both uncertain leader and local
    dynamics.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Trajectory-guided Coordinated Controls: This research mainly focuses on the
    problems of unmodeled dynamics [[184](#bib.bib184), [13](#bib.bib13), [186](#bib.bib186),
    [187](#bib.bib187), [188](#bib.bib188), [189](#bib.bib189), [190](#bib.bib190)],
    unknown disturbance [[184](#bib.bib184), [13](#bib.bib13), [186](#bib.bib186),
    [187](#bib.bib187), [189](#bib.bib189)], actuator saturation [[184](#bib.bib184),
    [13](#bib.bib13)], system stability [[184](#bib.bib184), [13](#bib.bib13), [186](#bib.bib186),
    [188](#bib.bib188), [190](#bib.bib190)], velocity estimation [[13](#bib.bib13),
    [190](#bib.bib190)], collision avoidance [[186](#bib.bib186), [187](#bib.bib187),
    [188](#bib.bib188)], connectivity maintenance [[186](#bib.bib186), [188](#bib.bib188)],
    performance constraints [[186](#bib.bib186), [187](#bib.bib187)], computational
    effort reduction [[185](#bib.bib185)], communication reduction [[188](#bib.bib188),
    [189](#bib.bib189)], and output constraints [[189](#bib.bib189)].'
  prefs: []
  type: TYPE_NORMAL
- en: Taking into account the collision constraints, Dai et al. [[186](#bib.bib186)]
    limited the ASV position outputs to a given range and applied the prescribed performance
    control to guarantee that formation errors remained always within the predefined
    regions. Based on the DSC technique, the backstepping procedure and Lyapunov synthesis,
    adaptive formation control integrates DNN and disturbance observers to estimate
    unknown dynamics and disturbances, respectively.
  prefs: []
  type: TYPE_NORMAL
- en: To reduce communication cost, Dong et al. [[188](#bib.bib188)] considered a
    one-to-one communication topology with a decentralized adaptive output feedback
    formation tracking controller, where DNN was used to approximate uncertain dynamics.
  prefs: []
  type: TYPE_NORMAL
- en: VIII-A2 Leaderless Formation Control
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The leaderless formation refers to a situation in which all agents reach a common
    value through local interaction with desired relative deviations and there is
    no physical leader among agents [[181](#bib.bib181)]. Therefore, the single point
    failure problem, which occurs when a leader does not work and the entire fleet
    cannot maintain a formation, can be avoided. There are three basic tasks for DL-based
    leaderless formation control in this part, i.e., path-guided [[192](#bib.bib192),
    [193](#bib.bib193), [191](#bib.bib191), [194](#bib.bib194), [195](#bib.bib195)],
    trajectory-guided [[181](#bib.bib181), [196](#bib.bib196), [197](#bib.bib197),
    [198](#bib.bib198), [199](#bib.bib199), [201](#bib.bib201), [202](#bib.bib202),
    [200](#bib.bib200)], and maneuvering-guided coordinated controls [[203](#bib.bib203),
    [204](#bib.bib204), [205](#bib.bib205), [206](#bib.bib206), [207](#bib.bib207)].
    The DL model is generally applied to estimate the uncertainties of the model,
    that is, to compensate for unknown disturbance [[191](#bib.bib191), [192](#bib.bib192),
    [203](#bib.bib203), [204](#bib.bib204), [198](#bib.bib198), [202](#bib.bib202)],
    unknown dynamic [[181](#bib.bib181), [191](#bib.bib191), [192](#bib.bib192), [203](#bib.bib203),
    [204](#bib.bib204), [196](#bib.bib196), [197](#bib.bib197), [198](#bib.bib198),
    [206](#bib.bib206), [199](#bib.bib199), [201](#bib.bib201), [194](#bib.bib194),
    [200](#bib.bib200)], unknown input coefficients [[200](#bib.bib200)], to solve
    the quadratic optimization problem [[205](#bib.bib205), [207](#bib.bib207)] or
    to generate the control signal [[195](#bib.bib195)].
  prefs: []
  type: TYPE_NORMAL
- en: 'Path-guided Coordinated Controls: Based on different assumptions about what
    information is known or unknown by vehicles, existing research has made efforts
    to address unknown dynamics [[191](#bib.bib191), [192](#bib.bib192), [193](#bib.bib193)],
    unmodeled disturbances [[191](#bib.bib191), [200](#bib.bib200), [192](#bib.bib192),
    [193](#bib.bib193)], unknown kinetic models [[194](#bib.bib194)], input saturation
    [[191](#bib.bib191), [193](#bib.bib193)], velocity estimation [[192](#bib.bib192),
    [194](#bib.bib194)], communication reduction [[191](#bib.bib191), [192](#bib.bib192)],
    cyber attack [[193](#bib.bib193)], system stability [[191](#bib.bib191), [192](#bib.bib192),
    [193](#bib.bib193)], and control signal generation [[195](#bib.bib195)].'
  prefs: []
  type: TYPE_NORMAL
- en: With partial knowledge of the reference velocity, Wang et al. [[191](#bib.bib191)]
    designed a cooperative path following control, which used the DNN-based DSC technique
    to estimate unknown dynamics and disturbances, used an auxiliary design to handle
    input saturation, and applied a distributed speed estimator to reduce the amount
    of communication. Cyberattacks exist widely in real-world communication networks.
    To achieve a desired formation during a state-dependent cyberattack varying in
    time, Gu et al. [[193](#bib.bib193)] developed a path update law based on a synchronization
    scheme and an adaptive control method. DNN was used to approximate the uncertainties
    of the model and environmental disturbances.
  prefs: []
  type: TYPE_NORMAL
- en: The DRL model is able to resolve the problem of following the ASV formation
    path by designing reward functions that consider the velocity and error distance
    of each ASV related to the given formation [[195](#bib.bib195)]. ASVs are able
    to automatically and flexibly adjust their formation under the proposed DRL-based
    method.
  prefs: []
  type: TYPE_NORMAL
- en: 'Trajectory-guided Coordinated Controls: Existing studies on trajectory-guided
    coordinated controls usually attempt to solve the problem of unmodeled dynamics
    [[196](#bib.bib196), [198](#bib.bib198), [197](#bib.bib197), [199](#bib.bib199),
    [201](#bib.bib201), [202](#bib.bib202), [200](#bib.bib200)], unknown disturbance
    [[196](#bib.bib196), [198](#bib.bib198), [197](#bib.bib197), [201](#bib.bib201),
    [202](#bib.bib202), [200](#bib.bib200)], actuator saturation [[196](#bib.bib196),
    [201](#bib.bib201), [202](#bib.bib202)], system stability [[181](#bib.bib181),
    [196](#bib.bib196), [198](#bib.bib198), [197](#bib.bib197), [199](#bib.bib199),
    [201](#bib.bib201), [202](#bib.bib202), [200](#bib.bib200)], velocity estimation
    [[199](#bib.bib199)], collision avoidance [[198](#bib.bib198), [199](#bib.bib199)],
    connectivity maintenance [[199](#bib.bib199)], unknown input coefficients [[200](#bib.bib200)],
    computational effort reduction [[196](#bib.bib196), [197](#bib.bib197), [201](#bib.bib201),
    [202](#bib.bib202)], self-organized aggregation [[198](#bib.bib198)], and communication
    reduction [[200](#bib.bib200)].'
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, to reduce computational complexity, researchers tried to decrease
    the number of learning parameters of DNNs with the minimum learning parameter
    algorithm [[196](#bib.bib196), [202](#bib.bib202)], self-structured NNs [[197](#bib.bib197)],
    or the virtual parameter leaning algorithm [[201](#bib.bib201)]. To save system
    resources, periodic communication-based event-triggered mechanisms were proposed
    in [[200](#bib.bib200)]. The desired path was predicted by the last event-triggered
    velocity during the triggering interval, and the model uncertainties and unknown
    input coefficients were estimated by a neural predictor based on concurrent learning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Maneuvering-guided Coordinated Controls: Existing studies tried to solve the
    following problems in maneuvering-guided coordinated control scenarios: Unmodeled
    dynamics [[203](#bib.bib203), [204](#bib.bib204), [205](#bib.bib205), [207](#bib.bib207),
    [206](#bib.bib206)], environmental disturbances [[203](#bib.bib203), [204](#bib.bib204),
    [205](#bib.bib205), [207](#bib.bib207), [206](#bib.bib206)], system stability
    [[203](#bib.bib203), [204](#bib.bib204), [205](#bib.bib205), [206](#bib.bib206),
    [207](#bib.bib207)], collision avoidance [[207](#bib.bib207)], input saturation[[207](#bib.bib207)],
    and communication reduction [[206](#bib.bib206)].'
  prefs: []
  type: TYPE_NORMAL
- en: ASV has only limited resource, therefore, it is very practical to design a resource-constrained
    system. Instead of periodically updating the communication and actuation of systems,
    Zhang et al. [[206](#bib.bib206)] designed an event-triggered DNN controller that
    decreased the communication burden of both followers and leaders. Under distributed
    directed communication, the actuator of each follower was updated when predetermined
    events are triggered. They utilized DNN to identify uncertain nonlinearities and
    introduced third-order linear tracking differentiators to estimate derivative
    information of the virtual control law.
  prefs: []
  type: TYPE_NORMAL
- en: Taking into account the collision constraints, Gu et al. [[207](#bib.bib207)]
    addressed the avoidance of collisions between vehicles and obstacles with input-to-state
    safe control barrier functions that mapped the safety constraints in states to
    the constraints in the control inputs. Furthermore, to calculate the forces and
    moments, the quadratic optimization problem was solved using an RNN-based neurodynamic
    optimization approach.
  prefs: []
  type: TYPE_NORMAL
- en: VIII-A3 Data-driven IoT System
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Modern industrial systems with various IoTs generate rich maritime data that
    should be appropriately analyzed to improve both the efficiency and reliability
    of existing systems. Perera et al. [[9](#bib.bib9)] designed a general framework
    for autonomous ship navigation for ASVs to achieve the required level of ocean
    autonomy. Each on-board ASV application may be equipped with an on-board decision-making
    process and is monitored by on-board and onshore IoT under a DL-type framework.
  prefs: []
  type: TYPE_NORMAL
- en: VIII-A4 Maritime Traffic Monitoring and Prediction
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Forecasting future traffic in a complex maritime environment can help design
    ship routes, reduce traffic jams, and improve the efficiency of traffic management,
    especially for inland waterways. Surface vehicles have different dimensions, shapes,
    and boundaries in physical form and can travel in a two-dimensional spatial surface,
    making maritime traffic monitoring and prediction more difficult [[23](#bib.bib23)].
    The given maritime region can be divided into grids, and then the inflow and outflow
    of each grid can be predicted. To predict the inflow and outflow of all grids,
    Zhou et al. [[208](#bib.bib208)] studied the spatial and temporal dependencies
    of the vessel flows by extracting the spatial features of the patterns of maritime
    traffic with CNN and learning the temporal correlation of the extracted patterns
    using LSTM.
  prefs: []
  type: TYPE_NORMAL
- en: VIII-B Communication and Networks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The ecosystem elements in cooperative operations include ASVs, UAVs, and AUVs.
    Advanced equipment is capable of collecting large amounts of data volume in different
    forms, such as images, videos, audio, and text, which introduces a great burden
    for the maritime service. Yang et al. [[209](#bib.bib209)] proposed a software-defined
    networking (SDN)-based framework that applies DRL to solve the overfitting and
    curse of dimensionality by establishing a mapping relationship between the acquired
    information and the optimal data transmission scheduling strategy in a self-learning
    way.
  prefs: []
  type: TYPE_NORMAL
- en: VIII-C Energy Efficient Operations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Reducing the speed of ships is the most effective way to improve energy efficiency.
    However, the best real-time speed of the ship is related to several factors, including
    future environmental conditions. In [[210](#bib.bib210)], data from AIS, GPS,
    and fuel, rotation, temperature, and environment sensors were obtained by continuous
    time sampling. Then, on the basis of LSTM, these data were used to calculate the
    fuel consumption rate of ships in real time. In addition, an optimization algorithm
    was presented, which is called the reduced space search algorithm, to minimize
    fuel consumption and the total cost of a voyage.
  prefs: []
  type: TYPE_NORMAL
- en: IX Current Challenge and Future Perspectives
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This section presents current challenges and potential future directions for
    NGC systems, cooperative operation, application scenarios, and DL limitations.
  prefs: []
  type: TYPE_NORMAL
- en: IX-A ASV Prototypes and Their Applications
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We comprehensively compare the NGC system, communication method, mechanical
    design and applications of 51 ASV prototypes, which can be found on the author’s
    website¹¹1The comparison of commercial and research ASV projects, https://yuanyuanqiao.github.io/publications/journal/qiao2022survey_appendix.pdf.
    By reviewing typical ASV prototypes and comparing their key features, we can see
    the driving force of ASVs.
  prefs: []
  type: TYPE_NORMAL
- en: IX-B NGC system
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: IX-B1 Navigation
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: DL-based methods have dramatically improved state-of-the-art perception in recent
    years [[21](#bib.bib21)]. However, perception remains very challenging due to
    harsh maritime environments.
  prefs: []
  type: TYPE_NORMAL
- en: 'Environmental Perception: For safer maritime navigation, ASVs must be aware
    of the surrounding environment in real time. An open dataset with large amounts
    of labeled data for marine navigation is not yet available. Therefore, most research
    on DL-based marine environmental perception focuses on remote sensing images that
    have open and labeled datasets. Image preprocessing, segmentation, and target
    recognition methods are the main topics of remote sensing processes. DL methods
    can extract and fuse low- and high-level features from raw datasets to find the
    complex relationship between the data by self-learning. Based on the growing interest
    in object detection on SAR images in the last 3 years, DL-based methods have been
    explored in depth to solve the inherent problems of remote sensing images, such
    as detecting dense and overlapping objects, small and densely clustered ships,
    and complex backgrounds [[76](#bib.bib76)]. However, to detect objects with complex
    backgrounds and multiple shapes in marine environments, learning robust and discriminative
    representations from complex remote sensing images is still very challenging compared
    to natural scene images[[211](#bib.bib211)].'
  prefs: []
  type: TYPE_NORMAL
- en: In addition, for the data collected from onboard sensors, such as optical, infrared,
    radar images, and point clouds data, existing methods regarding image classification,
    object detection, and segmentation can be well adapted to maritime offshore environment,
    which is a much more simple scenario in contrast to complex road conditions for
    autonomous cars. In marine environments, the vibration interference generated
    by non-stationary surface platforms (buoys, sailing ships, etc.) can be easily
    removed. DL techniques have been shown to outperform other conventional methods
    in accurate and robust detection [[75](#bib.bib75)], and performance can be improved
    with more labeled data [[74](#bib.bib74)]. DL-based methods are expected to be
    adapted to complex computer vision problems for navigation in marine environments,
    such as vision-based multisensor fusion for cooperative operations and berthing.
  prefs: []
  type: TYPE_NORMAL
- en: 'State Estimation: Estimating the states of focal ASV and other ASVs requires
    a data fusion technique, which is very important for path following, trajectory
    tracking, and multi-vehicle cooperation. Existing research mainly focuses on estimating
    the state of ASV with time series data, such as trajectory and motion data collected
    from AIS. Very few researchers try to fuse maritime video and AIS data to better
    understand the on-site traffic situation awareness information [[108](#bib.bib108)].
    Due to the strong capability in feature extraction and data representation, DL-based
    methods have already achieved high accuracy on data fusion tasks, especially for
    complex and imprecise data and image. How to extract and fuse features of maritime
    multi-sensor data with DL methods is very challenging, especially when the collected
    data is discontinuous and incomplete, which can be solved by the application of
    CNN, LSTM, AE, attention, and other DL models. Another possible research direction
    is to detect out-of-distribution (OOD) sensor data before fusion to achieve a
    better results. Furthermore, understanding the semantic environment, which is
    receiving increasing attention in the robotic field, can improve the efficiency
    of the calculation. DL has made great progress in image understanding and semantic
    segmentation and it is anticipated that they will be applied to maritime navigation
    to reduce the reliance on complex multisource data [[44](#bib.bib44)].'
  prefs: []
  type: TYPE_NORMAL
- en: Future development of environmental perception and state estimation for ASV
    navigation can still benefit greatly from the existing results of other autonomous
    vehicles. Based on transfer learning [[212](#bib.bib212)], the knowledge of other
    autonomous vehicles can be utilized to navigate ASVs to further improve the integrity
    level of ocean autonomy. In this article [[9](#bib.bib9)], the DL-type mathematical
    framework is considered the best tool for mimicking helmsman actions in ship navigation.
    However, how corresponding decisions are made to support each ASV’s different
    navigation situations is an open question.
  prefs: []
  type: TYPE_NORMAL
- en: IX-B2 Guidance
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Traditional path planning methods can enumerate appropriate trajectories between
    two points for ASV if all constraints, such as geographic features, static obstacles,
    dynamics and kinematics of ASV and energy consumption, have already been detected
    and considered. For complex tasks with uncertain and incomplete information in
    constantly changing environments, heuristic methods such as DNN can achieve optimal
    solutions. For global path planning, DL-based methods are able to learn patterns
    from massive historical data [[23](#bib.bib23)]. In addition, DRL can learn to
    react by interacting with an unknown environment to find the most efficient route
    for local path planning. The DRL network is able to evaluate possible behaviors
    and make the next move in a collision avoidance scenario. Furthermore, DL-based
    methods are very promising for addressing collision avoidance by analyzing complex
    and ambiguous situations when ASVs encounter other ships [[24](#bib.bib24)] and
    can learn behavior patterns from historical data [[115](#bib.bib115)]. The challenges
    in terms of DL application in guidance systems are discussed below.
  prefs: []
  type: TYPE_NORMAL
- en: 'COLREGs Compliance: The risk assessment and solution for COLREG-compliant collision
    avoidance in multiple-ship encounter situations cannot be solved by conventional
    methods if unknown disturbances and uncertain ship motions are impossible to ignore
    [[24](#bib.bib24)]. Most current experiments focus on simple encounter situations
    that only consider the OS and one TS based on Rules 6, 8, 13-19 of COLREGs. DL-based
    methods have already made some promising progress in collision avoidance, especially
    for situations that need to comply with COLREGs, which require human-like decision-making
    [[117](#bib.bib117), [122](#bib.bib122), [58](#bib.bib58)], because they are capable
    of extracting high-level characteristics from complex environments and learning
    the relationship between situations and possible actions. However, the following
    problems are very challenging.'
  prefs: []
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The design of reward functions. The architecture of a DRL network requires careful
    design and is usually based on experience and practice, rather than mathematical
    reasoning, resulting in inflexible application in real systems.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No universal rule for collision avoidance. The highly complex dynamics under
    different environmental conditions vary with the types and sizes of ships that
    require specific rules for each encounter.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: As a result, apart from proposing a model that makes human-like decisions to
    comply with COLREGs, designing maritime traffic rules that adapt to modern maritime
    environments has become a more reachable goal in recent years. Then, the DL model
    can be used to predict maritime traffic and the trajectories of sailing ASVs,
    which is important for maritime traffic management.
  prefs: []
  type: TYPE_NORMAL
- en: 'Decision Making: Real-time decision-making refers to the ability to make appropriate
    decisions under practical maritime conditions based on knowledge of the surrounding
    environment of the ASV. In collision avoidance [[24](#bib.bib24)], which has challenges
    including uncertainties in ship motion models, rule-compliant navigation systems,
    and unknown environmental disturbances [[42](#bib.bib42)], it is very difficult
    to evaluate all possibilities and find the optimal behaviors based on the massive
    data collected by multiple sensors. On the one hand, nonlinear methods are often
    computationally expensive, require a priori knowledge of unknown states, and are
    driven by human knowledge [[213](#bib.bib213)]. On the other hand, DL methods
    have already made many processes in decision-making for autonomous vehicles.In
    the future, DL-based integrated approaches for robots are expected to reduce uncertainty
    in perception, decision-making, and execution [[65](#bib.bib65)].'
  prefs: []
  type: TYPE_NORMAL
- en: 'Cooperative Path Planning for Multiple ASVs: Multiple ASVs can perform more
    complex tasks than a single ASV, requiring the analysis of emergent behaviors,
    learning communication, learning cooperation, and agent modeling. Conventional
    cooperative methods are usually limited to discrete actions and require handcrafted
    features, which might not be suitable for real applications. On the other hand,
    DRL methods can generate paths for multiple ASVs to keep the formation shape robust
    or vary the shapes where necessary.'
  prefs: []
  type: TYPE_NORMAL
- en: IX-B3 Control
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Unlike cars or other modes of land transportation, one of the biggest problems
    for ASV is the hydrodynamic water-body interaction. Although this interaction
    complicates the problems of motion and control, DL-based controllers are introduced
    as a potential solution. In general, DNNs are required to estimate unknown parameters,
    terms, or functions during ASV modeling. In addition, other approximators, such
    as fuzzy systems, can also obtain similar results to DNNs. However, the exact
    mathematical estimator may not be able to adapt to complex sea environments [[19](#bib.bib19)].
    For the DRL-based model, the agent interacts with the unknown or potentially partially
    unobservable environment and then iteratively approximates the behavior policy
    that maximizes the agent’s expected long-term reward in the environment. Although
    it has gained much attention in the field of autonomous systems [[18](#bib.bib18)],
    the DRL-based controller cannot yet support real-world ASV. Most of the above
    work tests DRL-based control in simulation environments, which provides a large-scale
    training dataset. However, machine learning models usually perform poorly if the
    data distributions of the training dataset and testing dataset are not identically
    distributed; thus, ASV training in simulation environments often fails to complete
    tasks in the real world. A possible solution is to use transfer learning, which
    applies an algorithm trained in one or more “source domains” to a different (but
    related) “target domain” [[212](#bib.bib212)]. Knowledge learned from other vehicles
    or other tasks can be used by employing transfer learning, which requires fewer
    training data for the current task. Therefore, pre-training agents on available
    high-quality datasets and then fine-tuning them on collected datasets can improve
    the performance of the model. However, due to the lack of open datasets, the related
    research field is still in its early stages.
  prefs: []
  type: TYPE_NORMAL
- en: Although RL-based controllers have been successfully applied to ASVs on sea
    trails, DRL-based controllers are still in an early stage and can only be used
    to estimate the parameters of a model that presents a physical system. More complex
    problems, such as such constraints, have not yet been considered. To construct
    a complete real-world ASV system, better performance can be achieved by combining
    DL and classical controllers such as MPC or PID [[66](#bib.bib66)]. All hard constraints
    of the modeled system are estimated by DL, and classical model-based control techniques
    provide a stable and deterministic mode [[24](#bib.bib24)].
  prefs: []
  type: TYPE_NORMAL
- en: IX-C Cooperative Operations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A fleet of ASVs is able to complete more difficult tasks than a single ASV.
    However, the design of the controller and communication scheme for cooperative
    control of multiple ASVs is very challenging, since ASVs must maintain desired
    positions and orientations with predefined geometric shapes [[127](#bib.bib127)].
    Since the DL-based model has already been applied to design collision-free cooperative
    controllers and communication protocols for multi-agents [[213](#bib.bib213)],
    improving these methods for maritime environments is anticipated in the future.
    The challenges of cooperative operations and the potential of DL applications
    are discussed as follows.
  prefs: []
  type: TYPE_NORMAL
- en: IX-C1 Behavior Prediction
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Massive information collected by AIS provides an opportunity to discover the
    historical behavior of fleets for the management of maritime traffic safety [[23](#bib.bib23)],
    trajectory reconstruction, anomaly detection and vessel type identification. In
    addition to a large amount of multi-source data stream, the inherent noise patterns
    and irregular time sampling, and the influence of weather and current have also
    increased the difficulty of analyzing AIS data. DL methods have already been applied
    to road traffic prediction because they can capture the spatial and temporal correlations
    of trafficwhile simultaneously considering the influences [[214](#bib.bib214)].
    Therefore, how to make the best use of the increasing amount of AIS data has great
    significance for maritime cooperative operations, which requires the assistance
    of advanced methods such as DL.
  prefs: []
  type: TYPE_NORMAL
- en: IX-C2 Communications and Networks
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: GPS has provided a high-performance navigational aid, and commercially available
    satellite communication receivers allow for almost instantaneous communication
    over most of the world. Networking of ASVs and UAVs further expands the communication
    range on the surface [[5](#bib.bib5)]. Furthermore, the network of smart interconnected
    maritime objects has received a new concept term, the Internet of Ships (IoS)
    [[215](#bib.bib215)], as shown in Figure [10](#S9.F10 "Figure 10 ‣ IX-C2 Communications
    and Networks ‣ IX-C Cooperative Operations ‣ IX Current Challenge and Future Perspectives
    ‣ Survey of Deep Learning for Autonomous Surface Vehicles in Marine Environments").
    The main technical challenge for remote operation is the connectivity between
    the vessel and the control facility. Possible solutions are to build high-bandwidth
    and low-latency wireless networks sufficiently and to reduce large-scale sensor
    data. DL-based methods have already been used to design wireless networks, compress
    data, and determine an optimal strategy for data transmission [[209](#bib.bib209)].
    These methods are expected to be applied to future maritime network management
    and control.
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/d8133ddd711cafa20764ef8d2cbc9139.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10: An example of Internet of Ship scenario [[215](#bib.bib215)]'
  prefs: []
  type: TYPE_NORMAL
- en: IX-D Specific Application Scenarios
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: IX-D1 Smart Port
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: How ASVs will berth and maneuver around densely trafficked ports has gradually
    become an imminent problem for modern maritime security and management. Existing
    work has already applied the latest technologies to smart ports [[216](#bib.bib216)].
    There are many computer vision tasks in port, such as container identification,
    image and object recognition, situational awareness, monitoring, and surveillance
    [[215](#bib.bib215)]. DL-based methods can help develop a fully automated port
    with advanced sensing systems. Future work related to ASV monitoring and management
    in ports, MASS docking and departure, and loading and unloading are anticipated.
  prefs: []
  type: TYPE_NORMAL
- en: IX-D2 ASV in City
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: ASV may also be able to play an important role in the future of transportation
    in many coastal and riverside cities, such as Amsterdam and Venice, where the
    existing infrastructure of roads and bridges is always extremely busy. The Roboat
    project [[217](#bib.bib217)] will develop a logistics platform for people and
    goods, superimposing a dynamic infrastructure in one of the world’s most famous
    water cities. When ASVs move in narrow and crowded urban environments, the requirements
    of autonomous systems, such as control and obstacle avoidance, are much higher
    than those of surface vehicles for open-water areas. Therefore, a DL-based framework,
    especially DRL, could be a viable option for ASV control and obstacle avoidance
    problems in these challenging urban environments.
  prefs: []
  type: TYPE_NORMAL
- en: IX-D3 MASS
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Related research is still in the conceptual stage and focuses mainly on discussing
    the operation and safety of MASS, including navigational risk [[218](#bib.bib218)],
    collision avoidance [[219](#bib.bib219)], and human-system interaction in autonomy
    [[220](#bib.bib220)]. Most of the navigation algorithms deployed on small ASVs
    cannot be applied directly to MASS. Large ships need more sensors than small ASVs
    to cover the very large MASS hull. Furthermore, MASS deceleration at moderate
    or high speeds, during which time the capabilities of the thrusters are negligible,
    requires more time and resistance. This makes the design of the controller and
    collision avoidance methods for MASS entirely different from other vehicles. The
    above-mentioned problems may be overcome by mathematical frameworks based on DL
    supported by the decision support layer [[9](#bib.bib9)]. More specifically, communication
    and computation infrastructure is needed by adopting an information technology/information
    system (IT/IS) based on real-time data-driven decision support in the maritime
    industry. In addition, a large amount of ship performance and navigation data
    collected and exchanged by onboard and onshore IoT should be integrated with modern
    IT systems and DL algorithms. However, the limited availability of testing ships
    and fields has slowed the study of practical applications for MASS in the scientific
    research field.
  prefs: []
  type: TYPE_NORMAL
- en: IX-E The Limitation of DL
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: DL is considered one of the most promising methods for feature learning [[211](#bib.bib211)].
    Its limitations are as follows and possible solutions can be found in paper [[64](#bib.bib64)].
  prefs: []
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Learning with little or no external supervision: Supervised learning requires
    a lot of labeled data. DRL requires far too many experiments and handcrafted rewards.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Coping with test examples that come from a different distribution than the
    training examples: The assumption of Independent Identically Distribution (I.I.D)
    is central to almost all machine learning algorithms. Thus, DL models cannot quickly
    adapt to data distribution changes with very few examples.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Solving problems like humans: It is very difficult for DL algorithms to solve
    problems by using a deliberate sequence of steps.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: There are several methods that can alleviate the problems of DL in the marine
    environment. For the first and second problems, in addition to calling for a high
    quality open dataset or fine-tune networks pre-trained on ImageNet [[105](#bib.bib105)],
    transfer learning and GAN have already been applied to reuse high-level feature
    during training and to generate high-quality samples, respectively. However, this
    process is still quite challenging, because bias will inevitably be introduced
    due to the domain mismatch between different types of data. In recent years, as
    a self-supervised learning algorithm, contrastive learning has gained increasing
    attention. This algorithm can learn the general features of a dataset without
    labels by learning representations such that similar samples remain close to each
    other. It would be interesting to pretrain the maritime navigation module under
    the contrastive learning framework, which can support various downstream tasks.
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, based on DRL, the control law can be learned directly to compensate
    for uncertainties and disturbances [[138](#bib.bib138)]. The reward functions
    of DRL have a very large impact on the learned desired behavior. However, the
    reward function is usually hand-crafted, and a single reward function cannot adapt
    to complex systems in a dynamic environment. Existing studies designed extrinsic
    rewards considering the following path [[170](#bib.bib170), [19](#bib.bib19)],
    obstacle avoidance [[170](#bib.bib170), [115](#bib.bib115)], velocity[[19](#bib.bib19),
    [115](#bib.bib115)], environmental disturbances [[19](#bib.bib19)], distance [[115](#bib.bib115)],
    etc. A better solution for the agent is to learn some intrinsic reward functions
    by itself. For example, the agent can perform imitation learning by incorporating
    domain knowledge into RL with reward shaping,or observing its behavior with inverse
    RL.
  prefs: []
  type: TYPE_NORMAL
- en: X Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Full autonomy can be anticipated in the following decades for maritime scenarios.
    However, common interfaces, which heavily rely on advances in the underpinning
    technology, have not yet been agreed upon. This paper aims to bridge the research
    gap between DL applications and ASVs by providing a systematic review of the literature
    on the overlap between these two fields. The importance of this work is emphasized
    by comparing existing ASV-related surveys. Then, state-of-the-art DL models are
    presented, as well as their implementation on NGC systems and maritime cooperative
    operations classified by scenarios. In consideration of the above-related studies,
    we discuss current challenges and possible future research topics in the direction
    of intelligent maritime autonomous operations.
  prefs: []
  type: TYPE_NORMAL
- en: XI Acknowledgment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The authors would like to thank the AMS Amsterdam Institute for Advanced Metropolitan
    Solutions and the members of the MIT Senseable City Lab consortium. This work
    is supported by the Funds of the National Natural Science Foundation of China
    (No. 62272057).
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] A. Ab Rahman, U. Z. A. Hamid, and T. A. Chin, “Emerging technologies with
    disruptive effects: a review,” *Perintis e-Journal*, vol. 7, no. 2, pp. 111–128,
    2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[2] Z. Liu, Y. Zhang, X. Yu, and C. Yuan, “Unmanned surface vehicles: An overview
    of developments and challenges,” *Annual Reviews in Control*, vol. 41, pp. 71–93,
    2016.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[3] J. E. Manley, “Unmanned surface vehicles, 15 years of development,” in
    *IEEE OCEANS 2008*, September 2008, pp. 1–4.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[4] M. Caccia, “Autonomous surface craft: prototypes and basic research issues,”
    in *2006 IEEE 14th Mediterranean Conference on Control and Automation*, June 2006,
    pp. 1–6.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[5] A. Zolich, D. Palma, K. Kansanen, K. Fjørtoft, J. Sousa, K. H. Johansson,
    Y. Jiang, H. Dong, and T. A. Johansen, “Survey on communication and networks for
    autonomous marine systems,” *Journal of Intelligent & Robotic Systems*, vol. 95,
    no. 3-4, pp. 789–813, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[6] A. Stateczny, K. Gierlowski, and M. Hoeft, “Wireless local area network
    technologies as communication solutions for unmanned surface vehicles,” *Sensors*,
    vol. 22, no. 2, p. 655, 2022.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[7] S. Thombre, Z. Zhao, H. Ramm-Schmidt, J. M. V. García, T. Malkamäki, S. Nikolskiy,
    T. Hammarberg, H. Nuortie, M. Z. H. Bhuiyan, S. Särkkä *et al.*, “Sensors and
    ai techniques for situational awareness in autonomous ships: A review,” *IEEE
    Transactions on Intelligent Transportation Systems*, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[8] H. R. Karimi and Y. Lu, “Guidance and control methodologies for marine
    vehicles: A survey,” *Control Engineering Practice*, vol. 111, p. 104785, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[9] L. P. Perera, “Deep learning toward autonomous ship navigation and possible
    colregs failures,” *Journal of Offshore Mechanics and Arctic Engineering*, vol.
    142, no. 3, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[10] K. P. Tee and S. S. Ge, “Control of fully actuated ocean surface vessels
    using a class of feedforward approximators,” *IEEE Transactions on Control Systems
    Technology*, vol. 14, no. 4, pp. 750–756, 2006.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[11] Z. Zheng, C. Jin, M. Zhu, and K. Sun, “Trajectory tracking control for
    a marine surface vessel with asymmetric saturation actuators,” *Robotics and Autonomous
    Systems*, vol. 97, pp. 83–91, 2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[12] L. Moreira and C. G. Soares, “Dynamic model of manoeuvrability using recursive
    neural networks,” *Ocean Engineering*, vol. 30, no. 13, pp. 1669–1697, 2003.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[13] K. Shojaei, “Observer-based neural adaptive formation control of autonomous
    surface vessels with limited torque,” *Robotics and Autonomous Systems*, vol. 78,
    pp. 83–96, 2016.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[14] J. Woo, C. Yu, and N. Kim, “Deep reinforcement learning-based controller
    for path following of an unmanned surface vehicle,” *Ocean Engineering*, vol.
    183, pp. 155–166, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[15] N. Wang, Y. Gao, H. Zhao, and C. K. Ahn, “Reinforcement learning-based
    optimal tracking control of an unknown unmanned surface vehicle,” *IEEE Transactions
    on Neural Networks and Learning Systems*, vol. 32, no. 7, pp. 3034–3045, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[16] N. Wang, Y. Gao, and X. Zhang, “Data-driven performance-prescribed reinforcement
    learning control of an unmanned surface vehicle,” *IEEE Transactions on Neural
    Networks and Learning Systems*, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[17] K. Arulkumaran, M. P. Deisenroth, M. Brundage, and A. A. Bharath, “Deep
    reinforcement learning: A brief survey,” *IEEE Signal Processing Magazine*, vol. 34,
    no. 6, pp. 26–38, 2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[18] B. R. Kiran, I. Sobh, V. Talpaert, P. Mannion, A. A. Al Sallab, S. Yogamani,
    and P. Pérez, “Deep reinforcement learning for autonomous driving: A survey,”
    *IEEE Transactions on Intelligent Transportation Systems*, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[19] Y. Zhao, X. Qi, Y. Ma, Z. Li, R. Malekian, and M. A. Sotelo, “Path following
    optimization for an underactuated usv using smoothly-convergent deep reinforcement
    learning,” *IEEE Transactions on Intelligent Transportation Systems*, vol. 22,
    no. 10, pp. 6208–6220, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[20] K. Jin, Y. Chen, B. Xu, J. Yin, X. Wang, and J. Yang, “A patch-to-pixel
    convolutional neural network for small ship detection with polsar images,” *IEEE
    Transactions on Geoscience and Remote Sensing*, vol. 58, pp. 6623–6638, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[21] Y. LeCun, Y. Bengio, and G. Hinton, “Deep learning,” *Nature*, vol. 521,
    no. 7553, pp. 436–444, 2015.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[22] Y. Wen, Z. Sui, C. Zhou, C. Xiao, Q. Chen, D. Han, and Y. Zhang, “Automatic
    ship route design between two ports: A data-driven method,” *Applied Ocean Research*,
    vol. 96, p. 102049, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[23] Z. Xiao, X. Fu, L. Zhang, and R. S. M. Goh, “Traffic pattern mining and
    forecasting technologies in maritime traffic service networks: A comprehensive
    survey,” *IEEE Transactions on Intelligent Transportation Systems*, vol. 21, no. 5,
    pp. 1796–1825, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[24] J. Woo and N. Kim, “Collision avoidance for an unmanned surface vehicle
    using deep reinforcement learning,” *Ocean Engineering*, vol. 199, p. 107001,
    2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[25] Y. Shuai, G. Li, X. Cheng, R. Skulstad, J. Xu, H. Liu, and H. Zhang, “An
    efficient neural-network based approach to automatic ship docking,” *Ocean Engineering*,
    vol. 191, p. 106514, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[26] V. Mnih, K. Kavukcuoglu, D. Silver, A. A. Rusu, J. Veness, M. G. Bellemare,
    A. Graves, M. Riedmiller, A. K. Fidjeland, G. Ostrovski *et al.*, “Human-level
    control through deep reinforcement learning,” *Nature*, vol. 518, no. 7540, pp.
    529–533, 2015.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[27] V. Bertram, “Unmanned surface vehicles-a survey,” *Skibsteknisk Selskab,
    Copenhagen, Denmark*, vol. 1, pp. 1–14, 2008.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[28] P. F. Rynne and K. D. von Ellenrieder, “Unmanned autonomous sailing: Current
    status and future role in sustained ocean observations,” *Marine Technology Society
    Journal*, vol. 43, no. 1, pp. 21–30, 2009.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[29] R.-j. Yan, S. Pang, H.-b. Sun, and Y.-j. Pang, “Development and missions
    of unmanned surface vehicle,” *Journal of Marine Science and Application*, vol. 9,
    no. 4, pp. 451–457, 2010.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[30] S. Campbell, W. Naeem, and G. W. Irwin, “A review on improving the autonomy
    of unmanned surface vehicles through intelligent collision avoidance manoeuvres,”
    *Annual Reviews in Control*, vol. 36, no. 2, pp. 267–283, 2012.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[31] R. Stelzer and K. Jafarmadar, “History and recent developments in robotic
    sailing,” in *Robotic Sailing*.   Springer, 2011, pp. 3–23.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[32] H. Zheng, R. R. Negenborn, and G. Lodewijks, “Survey of approaches for
    improving the intelligence of marine surface vehicles,” in *16th International
    IEEE Conference on Intelligent Transportation Systems (ITSC 2013)*, 2013, pp.
    1217–1223.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[33] E. Othman, “A review on current design of unmanned surface vehicles (usvs),”
    *J. Adv. Rev. Sci. Res*, vol. 16, pp. 12–17, 2015.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[34] J. E. Manley, “Unmanned maritime vehicles, 20 years of commercial and
    technical evolution,” in *OCEANS 2016 MTS/IEEE Monterey*, September 2016, pp.
    1–6.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[35] M. Schiaretti, L. Chen, and R. R. Negenborn, “Survey on autonomous surface
    vessels: Part ii-categorization of 60 prototypes and future applications,” in
    *International Conference on Computational Logistics*.   Springer, 2017, pp. 234–252.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[36] H. Ashrafiuon, K. R. Muske, and L. C. McNinch, “Review of nonlinear tracking
    and setpoint control approaches for autonomous underactuated marine vehicles,”
    in *Proceedings of the 2010 American Control Conference*, June 2010, pp. 5203–5211.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[37] M. Azzeri, F. Adnan, and M. Zain, “Review of course keeping control system
    for unmanned surface vehicle,” *Jurnal Teknologi*, vol. 74, no. 5, pp. 11–20,
    2015.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[38] O. Levander, “Autonomous ships on the high seas,” *IEEE Spectrum*, vol. 54,
    no. 2, pp. 26–31, 2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[39] R. Polvara, S. Sharma, J. Wan, A. Manning, and R. Sutton, “Obstacle avoidance
    approaches for autonomous navigation of unmanned surface vehicles,” *The Journal
    of Navigation*, vol. 71, no. 1, pp. 241–256, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[40] X. Wang, X. Song, and L. Du, “Review and application of unmanned surface
    vehicle in china,” in *2019 5th International Conference on Transportation Information
    and Safety (ICTIS)*, July 2019, pp. 1476–1481.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[41] M. F. Silva, A. Friebe, B. Malheiro, P. Guedes, P. Ferreira, and M. Waller,
    “Rigid wing sailboats: A state of the art survey,” *Ocean Engineering*, vol. 187,
    p. 106150, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[42] Y. Huang, L. Chen, P. Chen, R. R. Negenborn, and P. van Gelder, “Ship
    collision avoidance methods: State-of-the-art,” *Safety Science*, vol. 121, pp.
    451–473, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[43] W. Jing, C. Liu, T. Li, A. M. Rahman, L. Xian, X. Wang, Y. Wang, Z. Guo,
    G. Brenda, and K. W. Tendai, “Path planning and navigation of oceanic autonomous
    sailboats and vessels: A survey,” *Journal of Ocean University of China*, vol. 19,
    pp. 609–621, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[44] C. Zhou, S. Gu, Y. Wen, Z. Du, C. Xiao, L. Huang, and M. Zhu, “The review
    unmanned surface vehicle path planning: Based on multi-modality constraint,” *Ocean
    Engineering*, vol. 200, p. 107043, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[45] A. Vagale, R. Oucheikh, R. T. Bye, O. L. Osen, and T. I. Fossen, “Path
    planning and collision avoidance for autonomous surface vehicles i: a review,”
    *Journal of Marine Science and Technology*, pp. 1–15, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[46] N. Gu, D. Wang, Z. Peng, J. Wang, and Q.-L. Han, “Advances in line-of-sight
    guidance for path following of autonomous marine vehicles: An overview,” *IEEE
    Transactions on Systems, Man, and Cybernetics: Systems*, 2022.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[47] E. Zereik, M. Bibuli, N. Mišković, P. Ridao, and A. Pascoal, “Challenges
    and future trends in marine robotics,” *Annual Reviews in Control*, vol. 46, pp.
    350–368, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[48] H. I. Moud, A. Shojaei, and I. Flood, “Current and future applications
    of unmanned surface, underwater, and ground vehicles in construction,” in *Proceedings
    of the Construction Research Congress*, April 2018, pp. 106–115.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[49] U. K. Verfuss, A. S. Aniceto, D. V. Harris, D. Gillespie, S. Fielding,
    G. Jiménez, P. Johnston, R. R. Sinclair, A. Sivertsen, S. A. Solbø *et al.*, “A
    review of unmanned vehicles for the detection and monitoring of marine fauna,”
    *Marine pollution bulletin*, vol. 140, pp. 17–29, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[50] V. A. Jorge, R. Granada, R. G. Maidana, D. A. Jurak, G. Heck, A. P. Negreiros,
    D. H. Dos Santos, L. M. Gonçalves, and A. M. Amory, “A survey on unmanned surface
    vehicles for disaster robotics: Main challenges and directions,” *Sensors*, vol. 19,
    no. 3, p. 702, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[51] Y. Liu and R. Bucknall, “A survey of formation control and motion planning
    of multiple unmanned vehicles,” *Robotica*, vol. 36, no. 7, pp. 1019–1047, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[52] F. Thompson and D. Guihen, “Review of mission planning for autonomous
    marine vehicle fleets,” *Journal of Field Robotics*, vol. 36, no. 2, pp. 333–354,
    2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[53] L. Chen, R. Negenborn, Y. Huang, and H. Hopman, “Survey on cooperative
    control for waterborne transport,” *IEEE Intelligent Transportation Systems Magazine*,
    vol. 13, no. 2, pp. 71–90, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[54] J. Ge, T. Li, and T. Geng, “The wireless communications for unmanned surface
    vehicle: An overview,” in *International Conference on Intelligent Robotics and
    Applications*.   Springer, 2018, pp. 113–119.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[55] L. E. van Cappelle, L. Chen, and R. R. Negenborn, “Survey on short-term
    technology developments and readiness levels for autonomous shipping,” in *International
    Conference on Computational Logistics*.   Springer, 2018, pp. 106–123.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[56] Z. H. Munim, “Autonomous ships: a review, innovative applications and
    future maritime business models,” *Supply Chain Forum: An International Journal*,
    vol. 20, no. 4, pp. 266–279, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[57] L. Wang, Q. Wu, J. Liu, S. Li, and R. R. Negenborn, “State-of-the-art
    research on motion control of maritime autonomous surface ships,” *Journal of
    Marine Science and Engineering*, vol. 7, no. 12, p. 438, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[58] X. Zhang, C. Wang, L. Jiang, L. An, and R. Yang, “Collision-avoidance
    navigation systems for maritime autonomous surface ships: A state of the art survey,”
    *Ocean Engineering*, vol. 235, p. 109380, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[59] MUNIN, “Research in maritime autonomous systems project results and technology
    potentials,” 2016.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[60] CORE, “Maritime autonomous surface ships zooming in on civil liability
    and insurance,” 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[61] B. Martin, D. C. Tarraf, T. C. Whitmore, J. DeWeese, C. Kenney, J. Schmid,
    and P. DeLuca, “Advancing autonomous systems: an analysis of current and future
    technology for unmanned maritime vehicles,” RAND Corporation Santa Monica, Tech.
    Rep., 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[62] A. Carrio, C. Sampedro, A. Rodriguez-Ramos, and P. Campoy, “A review of
    deep learning methods and applications for unmanned aerial vehicles,” *Journal
    of Sensors*, vol. 2017, 2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[63] L. Elkins, D. Sellers, and W. R. Monach, “The autonomous maritime navigation
    (amn) project: Field tests, autonomous and cooperative behaviors, data fusion,
    sensors, and vehicles,” *Journal of Field Robotics*, vol. 27, no. 6, pp. 790–818,
    2010.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[64] Y. Bengio, Y. Lecun, and G. Hinton, “Deep learning for ai,” *Communications
    of the ACM*, vol. 64, no. 7, pp. 58–65, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[65] N. Sünderhauf, O. Brock, W. Scheirer, R. Hadsell, D. Fox, J. Leitner,
    B. Upcroft, P. Abbeel, W. Burgard, M. Milford *et al.*, “The limits and potentials
    of deep learning for robotics,” *The International Journal of Robotics Research*,
    vol. 37, no. 4-5, pp. 405–420, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[66] S. Grigorescu, B. Trasnea, T. Cocias, and G. Macesanu, “A survey of deep
    learning techniques for autonomous driving,” *Journal of Field Robotics*, vol. 37,
    no. 3, pp. 362–386, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[67] M. Arjovsky, S. Chintala, and L. Bottou, “Wasserstein gan,” *arXiv: Machine
    Learning*, 2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[68] T. P. Lillicrap, J. J. Hunt, A. Pritzel, N. Heess, T. Erez, Y. Tassa,
    D. Silver, and D. Wierstra, “Continuous control with deep reinforcement learning,”
    in *4th International Conference on Learning Representations*, May 2015.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[69] Y. Chen, X. Chen, J. Zhu, F. Lin, and B. M. Chen, “Development of an autonomous
    unmanned surface vehicle with object detection using deep learning,” in *IECON
    2018-44th Annual Conference of the IEEE Industrial Electronics Society*, October
    2018, pp. 5636–5641.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[70] E. Tu, G. Zhang, L. Rachmawati, E. Rajabally, and G.-B. Huang, “Exploiting
    ais data for intelligent maritime navigation: a comprehensive survey from data
    to methodology,” *IEEE Transactions on Intelligent Transportation Systems*, vol. 19,
    no. 5, pp. 1559–1582, 2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[71] A.-J. Gallego, A. Pertusa, and P. Gil, “Automatic ship classification
    from optical aerial images with convolutional neural networks,” *Remote Sensing*,
    vol. 10, no. 4, p. 511, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[72] Z. Shao, L. Wang, Z. Wang, W. Du, and W. Wu, “Saliency-aware convolution
    neural network for ship detection in surveillance video,” *IEEE Transactions on
    Circuits and Systems for Video Technology*, vol. 30, no. 3, pp. 781–794, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[73] W. Zhan, C. Xiao, Y. Wen, C. Zhou, H. Yuan, S. Xiu, Y. Zhang, X. Zou,
    X. Liu, and Q. Li, “Autonomous visual perception for unmanned surface vehicle
    navigation in an unknown environment,” *Sensors*, vol. 19, no. 10, p. 2216, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[74] J. Han, Y. Cho, J. Kim, J. Kim, N.-s. Son, and S. Y. Kim, “Autonomous
    collision detection and avoidance for aragon usv: Development and field tests,”
    *Journal of Field Robotics*, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[75] X. Yao, Y. Shan, J. Li, D. Ma, and K. Huang, “Lidar based navigable region
    detection for unmanned surface vehicles,” in *2019 IEEE/RSJ International Conference
    on Intelligent Robots and Systems (IROS)*, November 2019, pp. 3754–3759.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[76] J. E. Ball, D. T. Anderson, and C. S. Chan, “Comprehensive survey of deep
    learning in remote sensing: theories, tools, and challenges for the community,”
    *Journal of Applied Remote Sensing*, vol. 11, no. 4, p. 042609, 2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[77] X. Yang, H. Sun, K. Fu, J. Yang, X. Sun, M. Yan, and Z. Guo, “Automatic
    ship detection in remote sensing images from google earth of complex scenes based
    on multiscale rotation dense feature pyramid networks,” *Remote Sensing*, vol. 10,
    no. 1, p. 132, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[78] X. Nie, M. Yang, and R. W. Liu, “Deep neural network-based robust ship
    detection under different weather conditions,” in *2019 IEEE Intelligent Transportation
    Systems Conference (ITSC)*.   IEEE, 2019, pp. 47–52.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[79] Y. Shan, X. Zhou, S. Liu, Y. Zhang, and K. Huang, “Siamfpn: A deep learning
    method for accurate and real-time maritime ship tracking,” *IEEE Transactions
    on Circuits and Systems for Video Technology*, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[80] Y. Wu, W. Ma, M. Gong, Z. Bai, W. Zhao, Q. Guo, X. Chen, and Q. Miao,
    “A coarse-to-fine network for ship detection in optical remote sensing images,”
    *Remote Sensing*, vol. 12, no. 2, p. 246, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[81] R. W. Liu, W. Yuan, X. Chen, and Y. Lu, “An enhanced cnn-enabled learning
    method for promoting ship detection in maritime surveillance system,” *Ocean Engineering*,
    vol. 235, p. 109435, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[82] H. Lin, Z. Shi, and Z. Zou, “Fully convolutional network with task partitioning
    for inshore ship detection in optical remote sensing images,” *IEEE Geoscience
    and Remote Sensing Letters*, vol. 14, no. 10, pp. 1665–1669, 2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[83] X. Nie, M. Duan, H. Ding, B. Hu, and E. K. Wong, “Attention mask r-cnn
    for ship detection and segmentation from remote sensing images,” *IEEE Access*,
    vol. 8, pp. 9325–9334, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[84] X. Yang, H. Sun, X. Sun, M. Yan, Z. Guo, and K. Fu, “Position detection
    and direction prediction for arbitrary-oriented ships via multitask rotation region
    convolutional neural network,” *IEEE Access*, vol. 6, pp. 50 839–50 849, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[85] G. Huang, Z. Wan, X. Liu, J. Hui, Z. Wang, and Z. Zhang, “Ship detection
    based on squeeze excitation skip-connection path networks for optical remote sensing
    images,” *Neurocomputing*, vol. 332, pp. 215–223, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[86] L. Li, Z. Zhou, B. Wang, L. Miao, and H. Zong, “A novel cnn-based method
    for accurate ship detection in hr optical remote sensing images via rotated bounding
    box,” *IEEE Transactions on Geoscience and Remote Sensing*, pp. 01–14, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[87] Y. Yu, X. Yang, J. Li, and X. Gao, “A cascade rotated anchor-aided detector
    for ship detection in remote sensing images,” *IEEE Transactions on Geoscience
    and Remote Sensing*, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[88] X. Zhang, G. Wang, P. Zhu, T. Zhang, C. Li, and L. Jiao, “Grs-det: An
    anchor-free rotation ship detector based on gaussian-mask in remote sensing images,”
    *IEEE Transactions on Geoscience and Remote Sensing*, vol. 59, no. 4, pp. 3518–3531,
    2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[89] M. Leclerc, R. Tharmarasa, M. C. Florea, A.-C. Boury-Brisset, T. Kirubarajan,
    and N. Duclos-Hindié, “Ship classification using deep learning techniques for
    maritime target tracking,” in *2018 IEEE 21st International Conference on Information
    Fusion (FUSION)*, July 2018, pp. 737–744.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[90] S. Moosbauer, D. Konig, J. Jakel, and M. Teutsch, “A benchmark for deep
    learning based object detection in maritime environments,” in *Proceedings of
    the IEEE Conference on Computer Vision and Pattern Recognition Workshops*, 2019,
    pp. 0–0.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[91] Z. Chen, D. Chen, Y. Zhang, X. Cheng, M. Zhang, and C. Wu, “Deep learning
    for autonomous ship-oriented small ship detection,” *Safety Science*, vol. 130,
    p. 104812, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[92] J. Zhao, Z. Zhang, W. Yu, and T.-K. Truong, “A cascade coupled convolutional
    neural network guided visual attention method for ship detection from sar images,”
    *IEEE Access*, vol. 6, pp. 50 693–50 708, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[93] Z. Cui, Q. Li, Z. Cao, and N. Liu, “Dense attention pyramid networks for
    multi-scale ship detection in sar images,” *IEEE Transactions on Geoscience and
    Remote Sensing*, vol. 57, no. 11, pp. 8983–8997, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[94] M. Kang, K. Ji, X. Leng, and Z. Lin, “Contextual region-based convolutional
    neural network with multilayer fusion for sar ship detection,” *Remote Sensing*,
    vol. 9, no. 8, p. 860, 2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[95] Y. Zhao, L. Zhao, B. Xiong, and G. Kuang, “Attention receptive pyramid
    network for ship detection in sar images,” *IEEE Journal of Selected Topics in
    Applied Earth Observations and Remote Sensing*, vol. 13, pp. 2738–2756, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[96] D. Li, Q. Liang, H. Liu, Q. Liu, H. Liu, and G. Liao, “A novel multidimensional
    domain deep learning network for sar ship detection,” *IEEE Transactions on Geoscience
    and Remote Sensing*, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[97] J. Fu, X. Sun, Z. Wang, and K. Fu, “An anchor-free method based on feature
    balancing and refinement network for multiscale ship detection in sar images,”
    *IEEE Transactions on Geoscience and Remote Sensing*, vol. 59, no. 2, pp. 1331–1344,
    2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[98] K. Oksuz, B. C. Cam, S. Kalkan, and E. Akbas, “Imbalance problems in object
    detection: A review,” *IEEE transactions on pattern analysis and machine intelligence*,
    2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[99] J. M. Johnson and T. M. Khoshgoftaar, “Survey on deep learning with class
    imbalance,” *Journal of Big Data*, vol. 6, no. 1, pp. 1–54, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[100] T. Zhang, X. Zhang, C. Liu, J. Shi, S. Wei, I. Ahmad, X. Zhan, Y. Zhou,
    D. Pan, J. Li *et al.*, “Balance learning for ship detection from synthetic aperture
    radar remote sensing imagery,” *ISPRS Journal of Photogrammetry and Remote Sensing*,
    vol. 182, pp. 190–207, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[101] C. M. Ward, J. Harguess, and C. Hilton, “Ship classification from overhead
    imagery using synthetic data and domain adaptation,” in *OCEANS 2018 MTS/IEEE
    Charleston*, October 2018, pp. 1–5.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[102] C. P. Schwegmann, W. Kleynhans, B. P. Salmon, L. W. Mdakane, and R. G.
    Meyer, “Very deep learning for ship discrimination in synthetic aperture radar
    imagery,” in *2016 IEEE International Geoscience and Remote Sensing Symposium
    (IGARSS)*, July 2016, pp. 104–107.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[103] J. Li, C. Qu, and J. Shao, “Ship detection in sar images based on an
    improved faster r-cnn,” in *2017 SAR in Big Data Era: Models, Methods and Applications
    (BIGSARDATA)*, November 2017, pp. 1–6.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[104] Z. Lin, K. Ji, X. Leng, and G. Kuang, “Squeeze and excitation rank faster
    r-cnn for ship detection in sar images,” *IEEE Geoscience and Remote Sensing Letters*,
    vol. 16, no. 5, pp. 751–755, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[105] Z. Deng, H. Sun, S. Zhou, and J. Zhao, “Learning deep ship detector in
    sar images from scratch,” *IEEE Transactions on Geoscience and Remote Sensing*,
    vol. 57, no. 6, pp. 4021–4039, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[106] L. Li, C. Wang, H. Zhang, and B. Zhang, “Sar image ship object generation
    and classification with improved residual conditional generative adversarial network,”
    *IEEE Geoscience and Remote Sensing Letters*, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[107] Y. Cheng, H. Xu, and Y. Liu, “Robust small object detection on the water
    surface through fusion of camera and millimeter wave radar,” in *Proceedings of
    the IEEE/CVF International Conference on Computer Vision*, 2021, pp. 15 263–15 272.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[108] X. Chen, L. Qi, Y. Yang, Q. Luo, O. Postolache, J. Tang, and H. Wu, “Video-based
    detection infrastructure enhancement for automated ship recognition and behavior
    analysis,” *Journal of Advanced Transportation*, vol. 2020, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[109] X. Chen, Y. Liu, K. Achuthan, and X. Zhang, “A ship movement classification
    based on automatic identification system (ais) data using convolutional neural
    network,” *Ocean Engineering*, vol. 218, p. 108182, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[110] T. Zhang, X.-Q. Zheng, and M.-X. Liu, “Multiscale attention-based lstm
    for ship motion prediction,” *Ocean Engineering*, vol. 230, p. 109066, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[111] R. Skulstad, G. Li, T. I. Fossen, B. Vik, and H. Zhang, “A hybrid approach
    to motion prediction for ship docking—integration of a neural network model into
    the ship dynamic model,” *IEEE Transactions on Instrumentation and Measurement*,
    vol. 70, pp. 1–11, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[112] Q. Wang, Y. Li, M. Diao, W. Gao, and Z. Qi, “Performance enhancement
    of ins/cns integration navigation system based on particle swarm optimization
    back propagation neural network,” *Ocean Engineering*, vol. 108, pp. 33–45, 2015.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[113] W. Naeem, R. Sutton, and T. Xu, “An integrated multi-sensor data fusion
    algorithm and autopilot implementation in an uninhabited surface craft,” *Ocean
    Engineering*, vol. 39, pp. 43–52, 2012.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[114] L. P. Perera and B. Mo, “Machine intelligence based data handling framework
    for ship energy efficiency,” *IEEE Transactions on Vehicular Technology*, vol. 66,
    no. 10, pp. 8659–8666, 2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[115] Y. Cheng and W. Zhang, “Concise deep reinforcement learning obstacle
    avoidance for underactuated unmanned marine vessels,” *Neurocomputing*, vol. 272,
    pp. 63–73, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[116] P. Borkowski, “The ship movement trajectory prediction algorithm using
    navigational data fusion,” *Sensors*, vol. 17, no. 6, p. 1432, 2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[117] L. Zhao and M.-I. Roh, “Colregs-compliant multiship collision avoidance
    based on deep reinforcement learning,” *Ocean Engineering*, vol. 191, p. 106436,
    2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[118] C. Tam, R. Bucknall, and A. Greig, “Review of collision avoidance and
    path planning methods for ships in close range encounters,” *The Journal of Navigation*,
    vol. 62, no. 3, pp. 455–476, 2009.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[119] C. Zhang, D. Zhang, M. Zhang, and W. Mao, “Data-driven ship energy efficiency
    analysis and optimization model for route planning in ice-covered arctic waters,”
    *Ocean Engineering*, vol. 186, p. 106071, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[120] D.-w. Gao, Y.-s. Zhu, J.-f. Zhang, Y.-k. He, K. Yan, and B.-r. Yan, “A
    novel mp-lstm method for ship trajectory prediction based on ais data,” *Ocean
    Engineering*, vol. 228, p. 108956, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[121] Y. Liu and R. Bucknall, “Efficient multi-task allocation and path planning
    for unmanned surface vehicle in support of ocean operations,” *Neurocomputing*,
    vol. 275, pp. 1550–1566, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[122] H. Shen, H. Hashimoto, A. Matsuda, Y. Taniguchi, D. Terada, and C. Guo,
    “Automatic collision avoidance of multiple ships based on deep q-learning,” *Applied
    Ocean Research*, vol. 86, pp. 268–288, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[123] S. Xie, X. Chu, M. Zheng, and C. Liu, “A composite learning method for
    multi-ship collision avoidance based on reinforcement learning and inverse control,”
    *Neurocomputing*, vol. 411, pp. 375–392, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[124] D.-H. Chun, M.-I. Roh, H.-W. Lee, J. Ha, and D. Yu, “Deep reinforcement
    learning-based collision avoidance for an autonomous ship,” *Ocean Engineering*,
    vol. 234, p. 109216, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[125] M. Gao and G.-Y. Shi, “Ship collision avoidance anthropomorphic decision-making
    for structured learning based on ais with seq-cgan,” *Ocean Engineering*, vol.
    217, p. 107922, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[126] T. I. Fossen *et al.*, *Guidance and control of ocean vehicles*.   Wiley
    New York, 1994, vol. 199, no. 4.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[127] Z. Peng, J. Wang, D. Wang, and Q.-L. Han, “An overview of recent advances
    in coordinated control of multiple autonomous surface vehicles,” *IEEE Transactions
    on Industrial Informatics*, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[128] A. J. Sørensen, “A survey of dynamic positioning control systems,” *Annual
    reviews in Control*, vol. 35, no. 1, pp. 123–136, 2011.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[129] M. Breivik and V. E. Hovstein, “Formation control for unmanned surface
    vehicles: theory and practice,” in *IFAC World Congress*, July 2008.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[130] M. Breivik, V. E. Hovstein, and T. I. Fossen, “Straight-line target tracking
    for unmanned surface vehicles,” *MIC Journal*, vol. 29, no. 4, pp. 131–149, 2008.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[131] R. Skjetne, T. I. Fossen, and P. V. Kokotović, “Adaptive maneuvering,
    with experiments, for a model ship in a marine control laboratory,” *Automatica*,
    vol. 41, no. 2, pp. 289–298, 2005.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[132] Y. Zhang, G. E. Hearn, and P. Sen, “A multivariable neural controller
    for automatic ship berthing,” *IEEE Control Systems Magazine*, vol. 17, no. 4,
    pp. 31–45, 1997.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[133] B. Qiu, G. Wang, Y. Fan, D. Mu, and X. Sun, “Adaptive sliding mode trajectory
    tracking control for unmanned surface vehicle with modeling uncertainties and
    input saturation,” *Applied Sciences*, vol. 9, no. 6, p. 1240, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[134] Z. Shen, Y. Bi, Y. Wang, and C. Guo, “Mlp neural network-based recursive
    sliding mode dynamic surface control for trajectory tracking of fully actuated
    surface vessel subject to unknown dynamics and input saturation,” *Neurocomputing*,
    vol. 377, pp. 103–112, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[135] C. Zhang, C. Wang, J. Wang, and C. Li, “Neuro-adaptive trajectory tracking
    control of underactuated autonomous surface vehicles with high-gain observer,”
    *Applied Ocean Research*, vol. 97, p. 102051, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[136] S.-L. Dai, S. He, M. Wang, and C. Yuan, “Adaptive neural control of underactuated
    surface vessels with prescribed performance guarantees,” *IEEE Transactions on
    Neural Networks and Learning Systems*, vol. 30, no. 12, pp. 3686–3698, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[137] L.-J. Zhang, H.-M. Jia, and X. Qi, “Nnffc-adaptive output feedback trajectory
    tracking control for a surface ship at high speed,” *Ocean Engineering*, vol. 38,
    no. 13, pp. 1430–1438, 2011.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[138] Q. Zhang, W. Pan, and V. Reppa, “Model-reference reinforcement learning
    for collision-free tracking control of autonomous surface vehicles,” *IEEE Transactions
    on Intelligent Transportation Systems*, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[139] Z. Zhao, W. He, and S. S. Ge, “Adaptive neural network control of a fully
    actuated marine surface vessel with multiple output constraints,” *IEEE Transactions
    on Control Systems Technology*, vol. 22, no. 4, pp. 1536–1543, 2013.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[140] C.-Z. Pan, X.-Z. Lai, S. X. Yang, and M. Wu, “A biologically inspired
    approach to tracking control of underactuated surface vessels subject to unknown
    dynamics,” *Expert Systems with Applications*, vol. 42, no. 4, pp. 2153–2161,
    2015.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[141] S. He, S.-L. Dai, and F. Luo, “Asymptotic trajectory tracking control
    with guaranteed transient behavior for msv with uncertain dynamics and external
    disturbances,” *IEEE Transactions on Industrial Electronics*, vol. 66, no. 5,
    pp. 3712–3720, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[142] G. Zhang, M. Yao, J. Xu, and W. Zhang, “Robust neural event-triggered
    control for dynamic positioning ships with actuator faults,” *Ocean Engineering*,
    vol. 207, p. 107292, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[143] G. Zhang, S. Chu, X. Jin, and W. Zhang, “Composite neural learning fault-tolerant
    control for underactuated vehicles with event-triggered input,” *IEEE Transactions
    on Cybernetics*, pp. 01–12, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[144] M. Li, T. Li, X. Gao, Q. Shan, C. P. Chen, and Y. Xiao, “Adaptive nn
    event-triggered control for path following of underactuated vessels with finite-time
    convergence,” *Neurocomputing*, vol. 379, pp. 203–213, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[145] M. Chen, S. S. Ge, B. V. E. How, and Y. S. Choo, “Robust adaptive position
    mooring control for marine vessels,” *IEEE Transactions on Control Systems Technology*,
    vol. 21, no. 2, pp. 395–409, 2012.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[146] J. Du, Y. Yang, D. Wang, and C. Guo, “A robust adaptive neural networks
    controller for maritime dynamic positioning system,” *Neurocomputing*, vol. 110,
    pp. 128–136, 2013.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[147] J. Du, X. Hu, H. Liu, and C. P. Chen, “Adaptive robust output feedback
    control for a marine dynamic positioning system based on a high-gain observer,”
    *IEEE Transactions on Neural Networks and Learning Systems*, vol. 26, no. 11,
    pp. 2775–2786, 2015.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[148] L. Liu, D. Wang, Z. Peng, C. P. Chen, and T. Li, “Bounded neural network
    control for target tracking of underactuated autonomous surface vehicles in the
    presence of uncertain target dynamics,” *IEEE Transactions on Neural Networks
    and Learning Systems*, vol. 30, no. 4, pp. 1241–1249, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[149] M. Chen, S. S. Ge, and Y. S. Choo, “Neural network tracking control of
    ocean surface vessels with input saturation,” in *2009 IEEE International Conference
    on Automation and Logistics*, August 2009, pp. 85–89.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[150] C.-H. Chen, “Intelligent transportation control system design using wavelet
    neural network and pid-type learning algorithms,” *Expert Systems with Applications*,
    vol. 38, no. 6, pp. 6926–6939, 2011.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[151] C.-Z. Pan, X.-Z. Lai, S. X. Yang, and M. Wu, “An efficient neural network
    approach to tracking control of an autonomous surface vehicle with unknown dynamics,”
    *Expert Systems with Applications*, vol. 40, no. 5, pp. 1629–1635, 2013.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[152] S.-L. Dai, M. Wang, C. Wang, and L. Li, “Learning from adaptive neural
    network output feedback control of uncertain ocean surface ship dynamics,” *International
    Journal of Adaptive Control and Signal Processing*, vol. 28, no. 3-5, pp. 341–365,
    2014.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[153] N. Wang and M. J. Er, “Self-constructing adaptive robust fuzzy neural
    tracking control of surface vehicles with uncertainties and unknown disturbances,”
    *IEEE Transactions on Control Systems Technology*, vol. 23, no. 3, pp. 991–1002,
    2014.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[154] K. Shojaei, “Neural adaptive robust control of underactuated marine surface
    vehicles with input saturation,” *Applied Ocean Research*, vol. 53, pp. 267–278,
    2015.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[155] W. He, Z. Yin, and C. Sun, “Adaptive neural network control of a marine
    vessel with constraints using the asymmetric barrier lyapunov function,” *IEEE
    Transactions on Cybernetics*, vol. 47, no. 7, pp. 1641–1651, 2016.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[156] B. S. Park, J.-W. Kwon, and H. Kim, “Neural network-based output feedback
    control for reference tracking of underactuated surface vessels,” *Automatica*,
    vol. 77, pp. 353–359, 2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[157] G. Zhu, J. Du, and Y. Kao, “Robust adaptive neural trajectory tracking
    control of surface vessels under input and output constraints,” *Journal of the
    Franklin Institute*, vol. 257, no. 13, pp. 8591–8610, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[158] R. Rout, R. Cui, and Z. Han, “Modified line-of-sight guidance law with
    adaptive neural network control of underactuated marine vehicles with state and
    input constraints,” *IEEE transactions on control systems technology*, vol. 28,
    no. 5, pp. 1902–1914, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[159] Z. Zheng, L. Ruan, M. Zhu, and X. Guo, “Reinforcement learning control
    for underactuated surface vessel with output error constraints and uncertainties,”
    *Neurocomputing*, vol. 399, pp. 479–490, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[160] C. Zhang, C. Wang, Y. Wei, and J. Wang, “Robust trajectory tracking control
    for underactuated autonomous surface vessels with uncertainty dynamics and unavailable
    velocities,” *Ocean Engineering*, vol. 218, p. 108099, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[161] G. Zhu, Y. Ma, Z. Li, R. Malekian, and M. Sotelo, “Adaptive neural output
    feedback control for msvs with predefined performance,” *IEEE Transactions on
    Vehicular Technology*, vol. 70, no. 4, pp. 2994–3006, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[162] Y. Yan, X. Zhao, S. Yu, and C. Wang, “Barrier function-based adaptive
    neural network sliding mode control of autonomous surface vehicles,” *Ocean Engineering*,
    vol. 238, p. 109684, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[163] B. Zhou, B. Huang, Y. Su, Y. Zheng, and S. Zheng, “Fixed-time neural
    network trajectory tracking control for underactuated surface vessels,” *Ocean
    Engineering*, vol. 236, p. 109416, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[164] Z. Peng, C. Meng, L. Liu, D. Wang, and T. Li, “Pwm-driven model predictive
    speed control for an unmanned surface vehicle with unknown propeller dynamics
    based on parameter identification and neural prediction,” *Neurocomputing*, vol.
    432, pp. 1–9, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[165] M. A. Unar and D. J. Murray-Smith, “Automatic steering of ships using
    neural networks,” *International Journal of Adaptive Control and Signal Processing*,
    vol. 13, no. 4, pp. 203–218, 1999.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[166] G. Zhang and X. Zhang, “Concise robust adaptive path-following control
    of underactuated ships using dsc and mlp,” *IEEE Journal of Oceanic Engineering*,
    vol. 39, no. 4, pp. 685–694, 2013.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[167] Z. Zheng and L. Sun, “Path following control for marine surface vessel
    with uncertainties and input saturation,” *Neurocomputing*, vol. 177, pp. 158–167,
    2016.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[168] C. Liu, C. P. Chen, Z. Zou, and T. Li, “Adaptive nn-dsc control design
    for path following of underactuated surface vessels with input saturation,” *Neurocomputing*,
    vol. 267, pp. 466–474, 2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[169] G. Zhang, Y. Deng, and W. Zhang, “Robust neural path-following control
    for underactuated ships with the dvs obstacles avoidance guidance,” *Ocean Engineering*,
    vol. 143, pp. 198–208, 2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[170] E. Meyer, H. Robinson, A. Rasheed, and O. San, “Taming an autonomous
    surface vehicle for path following and collision avoidance using deep reinforcement
    learning,” *IEEE Access*, vol. 8, pp. 41 466–41 481, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[171] C. Liu, D. Wang, Y. Zhang, and X. Meng, “Model predictive control for
    path following and roll stabilization of marine vessels based on neurodynamic
    optimization,” *Ocean Engineering*, vol. 217, p. 107524, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[172] R. Rout, R. Cui, and W. Yan, “Sideslip-compensated guidance-based adaptive
    neural control of marine surface vessels,” *IEEE Transactions on Cybernetics*,
    2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[173] W. Zhou, J. Fu, H. Yan, X. Du, Y. Wang, and H. Zhou, “Event-triggered
    approximate optimal path-following control for unmanned surface vehicles with
    state constraints,” *IEEE Transactions on Neural Networks and Learning Systems*,
    2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[174] M.-C. Fang, Y.-Z. Zhuo, and Z.-Y. Lee, “The application of the self-tuning
    neural network pid controller on the ship roll reduction in random waves,” *Ocean
    Engineering*, vol. 37, no. 7, pp. 529–538, 2010.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[175] M.-C. Fang, Y.-H. Lin, and B.-J. Wang, “Applying the pd controller on
    the roll reduction and track keeping for the ship advancing in waves,” *Ocean
    Engineering*, vol. 54, pp. 13–25, 2012.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[176] Y. Wang, S. Chai, F. Khan, and H. D. Nguyen, “Unscented kalman filter
    trained neural networks based rudder roll stabilization system for ship in waves,”
    *Applied Ocean Research*, vol. 68, pp. 26–38, 2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[177] J. Woo, J. Park, C. Yu, and N. Kim, “Dynamic model identification of
    unmanned surface vehicles using deep learning network,” *Applied Ocean Research*,
    vol. 78, pp. 123–133, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[178] Y. A. Ahmed and K. Hasegawa, “Automatic ship berthing using artificial
    neural network trained by consistent teaching data using nonlinear programming
    method,” *Engineering Applications of Artificial Intelligence*, vol. 26, no. 10,
    pp. 2287–2304, 2013.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[179] N.-K. Im and V.-S. Nguyen, “Artificial neural network controller for
    automatic ship berthing using head-up coordinate system,” *International Journal
    of Naval Architecture and Ocean Engineering*, vol. 10, no. 3, pp. 235–249, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[180] Z. Qiang, Z. Guibing, H. Xin, and Y. Renming, “Adaptive neural network
    auto-berthing control of marine ships,” *Ocean Engineering*, vol. 177, pp. 40–48,
    2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[181] Z. Peng, D. Wang, T. Li, and Z. Wu, “Leaderless and leader-follower cooperative
    control of multiple marine surface vehicles with unknown dynamics,” *Nonlinear
    Dynamics*, vol. 74, no. 1-2, pp. 95–106, 2013.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[182] Z. Peng, D. Wang, and X. Hu, “Robust adaptive formation control of underactuated
    autonomous surface vehicles with uncertain dynamics,” *IET Control Theory & Applications*,
    vol. 5, no. 12, pp. 1378–1387, 2011.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[183] Z. Peng, D. Wang, Z. Chen, X. Hu, and W. Lan, “Adaptive dynamic surface
    control for formations of autonomous surface vehicles with uncertain dynamics,”
    *IEEE Transactions on Control Systems Technology*, vol. 21, no. 2, pp. 513–520,
    2012.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[184] K. Shojaei, “Leader–follower formation control of underactuated autonomous
    marine surface vehicles with limited torque,” *Ocean Engineering*, vol. 105, pp.
    196–205, 2015.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[185] Y. Lu, G. Zhang, Z. Sun, and W. Zhang, “Robust adaptive formation control
    of underactuated autonomous surface vessels based on mlp and dob,” *Nonlinear
    Dynamics*, vol. 94, no. 1, pp. 503–519, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[186] S.-L. Dai, S. He, H. Lin, and C. Wang, “Platoon formation control with
    prescribed performance guarantees for usvs,” *IEEE Transactions on Industrial
    Electronics*, vol. 65, no. 5, pp. 4237–4246, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[187] S. He, M. Wang, S.-L. Dai, and F. Luo, “Leader–follower formation control
    of usvs with prescribed performance and collision avoidance,” *IEEE Transactions
    on Industrial Informatics*, vol. 15, no. 1, pp. 572–581, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[188] C. Dong, Q. Ye, and S.-L. Dai, “Neural-network-based adaptive output-feedback
    formation tracking control of usvs under collision avoidance and connectivity
    maintenance constraints,” *Neurocomputing*, vol. 401, pp. 101–112, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[189] M. Fu and L. Wang, “Adaptive finite-time event-triggered control of marine
    surface vehicles with prescribed performance and output constraints,” *Ocean Engineering*,
    vol. 238, p. 109712, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[190] C. Huang, X. Zhang, and G. Zhang, “Adaptive neural finite-time formation
    control for multiple underactuated vessels with actuator faults,” *Ocean Engineering*,
    vol. 222, p. 108556, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[191] H. Wang, D. Wang, and Z. Peng, “Adaptive dynamic surface control for
    cooperative path following of marine surface vehicles with input saturation,”
    *Nonlinear Dynamics*, vol. 77, no. 1-2, pp. 107–117, 2014.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[192] ——, “Neural network based adaptive dynamic surface control for cooperative
    path following of marine surface vehicles via state and output feedback,” *Neurocomputing*,
    vol. 133, pp. 170–178, 2014.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[193] N. Gu, D. Wang, Z. Peng, and L. Liu, “Adaptive bounded neural network
    control for coordinated path-following of networked underactuated autonomous surface
    vehicles under time-varying state-dependent cyber-attack,” *ISA transactions*,
    vol. 104, pp. 212–221, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[194] L. Liu, D. Wang, Z. Peng, and Q.-L. Han, “Distributed path following
    of multiple under-actuated autonomous surface vehicles based on data-driven neural
    predictors via integral concurrent learning,” *IEEE Transactions on Neural Networks
    and Learning Systems*, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[195] Y. Zhao, Y. Ma, and S. Hu, “Usv formation and path-following control
    via deep reinforcement learning with random braking,” *IEEE Transactions on Neural
    Networks and Learning Systems*, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[196] Y. Lu, G. Zhang, Z. Sun, and W. Zhang, “Adaptive cooperative formation
    control of autonomous surface vessels with uncertain dynamics and external disturbances,”
    *Ocean Engineering*, vol. 167, pp. 36–44, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[197] H. Liu, G. Chen, and X. Tian, “Cooperative formation control for multiple
    surface vessels based on barrier lyapunov function and self-structuring neural
    networks,” *Ocean Engineering*, vol. 216, p. 108163, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[198] X. Liang, X. Qu, Y. Hou, Y. Li, and R. Zhang, “Distributed coordinated
    tracking control of multiple unmanned surface vehicles under complex marine environments,”
    *Ocean Engineering*, vol. 205, p. 107328, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[199] S. He, C. Dong, and S.-L. Dai, “Adaptive neural formation control for
    underactuated unmanned surface vehicles with collision and connectivity constraints,”
    *Ocean Engineering*, vol. 226, p. 108834, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[200] Y. Zhang, D. Wang, Y. Yin, and Z. Peng, “Event-triggered distributed
    coordinated control of networked autonomous surface vehicles subject to fully
    unknown kinetics via concurrent-learning-based neural predictor,” *Ocean Engineering*,
    vol. 234, p. 108966, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[201] G. Zhu, Y. Ma, Z. Li, R. Malekian, and M. Sotelo, “Event-triggered adaptive
    neural fault-tolerant control of underactuated msvs with input saturation,” *IEEE
    Transactions on Intelligent Transportation Systems*, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[202] B. Huang, S. Song, C. Zhu, J. Li, and B. Zhou, “Finite-time distributed
    formation control for multiple unmanned surface vehicles with input saturation,”
    *Ocean Engineering*, vol. 233, p. 109158, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[203] Z. Peng, J. Wang, and D. Wang, “Containment maneuvering of marine surface
    vehicles with multiple parameterized paths via spatial-temporal decoupling,” *IEEE/ASME
    Transactions on Mechatronics*, vol. 22, no. 2, pp. 1026–1036, 2016.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[204] L. Liu, D. Wang, Z. Peng, and T. Li, “Modular adaptive control for los-based
    cooperative path maneuvering of multiple underactuated autonomous surface vehicles,”
    *IEEE Transactions on Systems, Man, and Cybernetics: Systems*, vol. 47, no. 7,
    pp. 1613–1624, 2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[205] Z. Peng, J. Wang, and D. Wang, “Distributed maneuvering of autonomous
    surface vehicles based on neurodynamic optimization and fuzzy approximation,”
    *IEEE Transactions on Control Systems Technology*, vol. 26, no. 3, pp. 1083–1090,
    2017.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[206] Y. Zhang, D. Wang, Z. Peng, T. Li, and L. Liu, “Event-triggered iss-modular
    neural network control for containment maneuvering of nonlinear strict-feedback
    multi-agent systems,” *Neurocomputing*, vol. 377, pp. 314–324, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[207] N. Gu, D. Wang, Z. Peng, and J. Wang, “Safety-critical containment maneuvering
    of underactuated autonomous surface vehicles based on neurodynamic optimization
    with control barrier functions,” *IEEE Transactions on Neural Networks and Learning
    Systems*, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[208] X. Zhou, Z. Liu, F. Wang, Y. Xie, and X. Zhang, “Using deep learning
    to forecast maritime vessel flows,” *Sensors*, vol. 20, no. 6, p. 1761, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[209] T. Yang, J. Li, H. Feng, N. Cheng, and W. Guan, “A novel transmission
    scheduling based on deep reinforcement learning in software-defined maritime communication
    networks,” *IEEE Transactions on Cognitive Communications and Networking*, vol. 5,
    no. 4, pp. 1155–1166, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[210] Z. Yuan, J. Liu, Q. Zhang, Y. Liu, Y. Yuan, and Z. Li, “Prediction and
    optimisation of fuel consumption for inland ships considering real-time status
    and environmental factors,” *Ocean Engineering*, vol. 221, p. 108530, 2021.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[211] L. Zhang, L. Zhang, and B. Du, “Deep learning for remote sensing data:
    A technical tutorial on the state of the art,” *IEEE Geoscience and Remote Sensing
    Magazine*, vol. 4, no. 2, pp. 22–40, 2016.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[212] F. Zhuang, Z. Qi, K. Duan, D. Xi, Y. Zhu, H. Zhu, H. Xiong, and Q. He,
    “A comprehensive survey on transfer learning,” *Proceedings of the IEEE*, vol.
    109, no. 1, pp. 43–76, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[213] M. Everett, Y. F. Chen, and J. P. How, “Motion planning among dynamic,
    decision-making agents with deep reinforcement learning,” in *2018 IEEE/RSJ International
    Conference on Intelligent Robots and Systems (IROS)*.   IEEE, 2018, pp. 3052–3059.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[214] A. Koesdwiady, R. Soua, and F. Karray, “Improving traffic flow prediction
    with weather information in connected cars: A deep learning approach,” *IEEE Transactions
    on Vehicular Technology*, vol. 65, no. 12, pp. 9508–9517, 2016.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[215] S. Aslam, M. P. Michaelides, and H. Herodotou, “Internet of ships: A
    survey on architectures, emerging applications, and challenges,” *IEEE Internet
    of Things Journal*, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[216] Y. Yang, M. Zhong, H. Yao, F. Yu, X. Fu, and O. Postolache, “Internet
    of things for smart ports: Technologies and challenges,” *IEEE Instrumentation
    & Measurement Magazine*, vol. 21, no. 1, pp. 34–43, 2018.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[217] W. Wang, T. Shan, P. Leoni, D. Fernández-Gutiérrez, D. Meyers, C. Ratti,
    and D. Rus, “Roboat ii: A novel autonomous surface vessel for urban environments,”
    in *2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)*.   IEEE,
    2020, pp. 1740–1747.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[218] C. Fan, K. Wróbel, J. Montewka, M. Gil, C. Wan, and D. Zhang, “A framework
    to identify factors influencing navigational risk for maritime autonomous surface
    ships,” *Ocean Engineering*, vol. 202, p. 107188, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[219] M. A. Ramos, I. B. Utne, and A. Mosleh, “Collision avoidance on maritime
    autonomous surface ships: Operators’ tasks and human failure events,” *Safety
    Science*, vol. 116, pp. 33–44, 2019.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[220] M. A. Ramos, C. A. Thieme, I. B. Utne, and A. Mosleh, “Human-system concurrent
    task analysis for maritime autonomous surface ship operation and safety,” *Reliability
    Engineering & System Safety*, vol. 195, p. 106697, 2020.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| ![[Uncaptioned image]](img/62115cce17ee9ede56bb64bc3e21c462.png) | Yuanyuan
    Qiao (M’17) received the B.E. degree from Xidian University, Xi’an, China, in
    2009 and the Ph.D. degree from the Beijing University of Posts and Telecommunications
    (BUPT), Beijing, China, in 2014\. From September 2019 to October 2020, she was
    a visiting scholar in Senseable City Lab, MIT, Cambridge, MA, USA. She is currently
    an associate professor with the School of Artificial Intelligence, BUPT, Beijing,
    China. Her research focuses on deep learning based big data analytics. |'
  prefs: []
  type: TYPE_TB
- en: '| ![[Uncaptioned image]](img/f73c87ac190d0e356c68a523f572ad63.png) | Jiaxin
    Yin received his Bachelor’s degree in School of Information and Telecommunication
    Engineering from BUPT, Beijing, China, in 2020. He is currently a Ph.D. student
    from the School of Artificial Intelligence, BUPT, Beijing, China, since Sept.
    2020, supervised by Prof. Jie Yang. His research topic contains semi-supervised
    anomaly detection, out-of-distribution detection and self-supervised learning.
    |'
  prefs: []
  type: TYPE_TB
- en: '| ![[Uncaptioned image]](img/5da759e3a2c4bfd6d5c51982d8c98a65.png) | Wei Wang
    (M’13) received the B.E. degree in automation from the University of Electronic
    Science and Technology of China, Chengdu, China, in 2010, and the Ph.D. degree
    in general mechanics and foundation of mechanics from Peking University, Beijing,
    China, in 2016. He was a joint Postdoctoral Associate from September 2016 to September
    2019, and a Senior Postdoctoral Associate from September 2019 to September 2021
    in both the Computer Science and Artificial Intelligence Laboratory (CSAIL) and
    the Senseable City Lab, MIT, Cambridge, MA, USA. He is currently a joint Research
    Scientist in both laboratories. His current research interests include marine
    robotics, dynamics and control, autonomous navigation, multi-robot systems, and
    bioinspired robotics. |'
  prefs: []
  type: TYPE_TB
- en: '| ![[Uncaptioned image]](img/493c43e8f24d72331c88f4e7a06cbe6c.png) | Fábio
    Duarte received the Ph.D. degree in communication and technology from the Universidade
    de São Paulo, Brazil. He has a background in urban planning and he is a Lecturer
    in DUSP, Head of Research Initiatives in the Center for Real Estate, and Principal
    Research Scientist at the MIT Senseable City Lab, where he manages projects including
    Underworlds, Roboat, City Scanner, as well as the data visualization team. Duarte
    was a professor at PUCPR (Curitiba, Brazil), and has been a visiting professor
    at Yokohama University and Twente University. Duarte serves as a consultant in
    urban planning and mobility for the World Bank. His most recent books are “Urban
    play: make-believe, technology and space” (MIT Press, 2021) and “Unplugging the
    city: the urban phenomenon and its sociotechnical controversies” (Routledge, 2018).
    |'
  prefs: []
  type: TYPE_TB
- en: '| ![[Uncaptioned image]](img/b913390c0cf15c7dbb4e61c99acb80a3.png) | Jie Yang
    received the B.E., M.E., and Ph.D. degrees from the BUPT, Beijing, China in 1993,
    1999, and 2007, respectively. She is currently a professor with the School of
    Artificial Intelligence, BUPT, and the director of the teaching and research center
    of intelligent perception and computing, BUPT. Her research focuses on deep learning
    based big data analytics. |'
  prefs: []
  type: TYPE_TB
- en: '| ![[Uncaptioned image]](img/5ef3621a2169cdf1bd82007d773c0efe.png) | Carlo
    Ratti graduated from the Politecnico di Torino and the École nationale des ponts
    et chaussées, and received the M.Phil. and Ph.D. degrees from the University of
    Cambridge, U.K. He is currently the Founder and the Director of the MIT Senseable
    City Laboratory, an Architect, and an Engineer by training. He practices in Italy
    and teaches at the Massachusetts Institute of Technology. He has coauthored over
    200 publications and holds several patents. His work has been exhibited worldwide
    at venues, such as the Venice Biennale; the Design Museum Barcelona; the Science
    Museum, London; GAFTA, San Francisco; and The Museum of Modern Art, New York.
    His Digital Water Pavilion at the 2008 World Expo was hailed by Time Magazine
    as one of the “Best Inventions of the Year.” He has been included in Esquire Magazine’s
    “Best and Brightest” list, Blueprint Magazine’s “25 People Who Will Change the
    World of Design,” and Forbes Magazine’s “Names You Need To Know” in 2011\. He
    was a Presenter at TED 2011\. He is serving as a member for the World Economic
    Forum Global Agenda Council for Urban Management. |'
  prefs: []
  type: TYPE_TB
