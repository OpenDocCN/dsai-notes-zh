- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-09-06 19:58:59'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: '[2010.03207] Deep learning models for predictive maintenance: a survey, comparison,
    challenges and prospect'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://ar5iv.labs.arxiv.org/html/2010.03207](https://ar5iv.labs.arxiv.org/html/2010.03207)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Deep learning models for predictive maintenance: a survey, comparison, challenges
    and prospect'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Oscar Serradilla [0000-0003-2557-9859](https://orcid.org/0000-0003-2557-9859
    "ORCID identifier") Mondragon UnibertsitateaElectronics and Computer ScienceLoramendi
    4MondragonSpain20500 [oserradilla@mondragon.edu](mailto:oserradilla@mondragon.edu)
    ,  Ekhi Zugasti [0000-0001-8506-5695](https://orcid.org/0000-0001-8506-5695 "ORCID
    identifier") Mondragon UnibertsitateaElectronics and Computer ScienceLoramendi
    4MondragonSpain20500 [ezugasti@mondragon.edu](mailto:ezugasti@mondragon.edu)  and 
    Urko Zurutuza [0000-0003-3720-6048](https://orcid.org/0000-0003-3720-6048 "ORCID
    identifier") Mondragon UnibertsitateaElectronics and Computer ScienceLoramendi
    4MondragonSpain20500 [uzurutuza@mondragon.edu](mailto:uzurutuza@mondragon.edu)
  prefs: []
  type: TYPE_NORMAL
- en: Abstract.
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Given the growing amount of industrial data spaces worldwide, deep learning
    solutions have become popular for predictive maintenance, which monitor assets
    to optimise maintenance tasks. Choosing the most suitable architecture for each
    use-case is complex given the number of examples found in literature. This work
    aims at facilitating this task by reviewing state-of-the-art deep learning architectures,
    and how they integrate with predictive maintenance stages to meet industrial companies’
    requirements (i.e. anomaly detection, root cause analysis, remaining useful life
    estimation). They are categorised and compared in industrial applications, explaining
    how to fill their gaps. Finally, open challenges and future research paths are
    presented.
  prefs: []
  type: TYPE_NORMAL
- en: 'Deep learning, predictive maintenance, data-driven, survey, review, Industry
    4.0^†^†ccs: Applied computing Engineering^†^†ccs: Computing methodologies Neural
    networks^†^†ccs: Computing methodologies Machine learning algorithms'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In recent years, industry has risen attention on artificial intelligence and
    machine learning techniques due to their capacity of creating automatic models
    that handle the big amount of data currently collected, which is growing exponentially.
    The research trend of machine learning has switched to more complex models such
    as ensemble methods and deep learning given their higher accuracy dealing with
    bigger datasets. These methods have evolved due to the increase of computing power
    and the latter mainly due to the evolution of GPU-s, being deep learning one of
    the most researched topics nowadays. These models achieve state-of-the-art results
    in many fields such as intrusion detection system, computer vision or language
    processing.
  prefs: []
  type: TYPE_NORMAL
- en: 'Maintenance is defined by the norm EN 13306 (UNE-EN 13306, [2018](#bib.bib169))
    as the combination of all technical, administrative and managerial actions during
    the life cycle of an item intended to retain it in, or restore it to, a state
    in which it can perform the required function. Moreover, it defines three types
    of maintenance: improvement maintenance improves machine reliability, maintainability
    and safety while keeping the original function; preventive maintenance is performed
    before failures occur either in periodical or predictive ways and corrective maintenance
    replaces the defective/broken parts when machine stops working. Currently, most
    industrial companies rely on periodical and corrective maintenance strategies.'
  prefs: []
  type: TYPE_NORMAL
- en: Nowadays, we are transitioning towards the fourth revolution denominated as
    Industry 4.0 (I4.0), which is based on cyber physical systems and industrial internet
    of things. It combines software, sensors and intelligent control units to improve
    industrial processes and fulfill their requirements (Lukac, [2016](#bib.bib110)).
    These techniques enable automatised predictive maintenance functions analysing
    massive amount of process and related data based on condition monitoring (CM).
    Predictive maintenance (PdM) is the most cost-optimal maintenance type given its
    potential to achieve an overall equipment effectiveness (OEE) (Vorne, [2019](#bib.bib172))
    higher than 90% by anticipating maintenance requirements (Colemen et al., [2017](#bib.bib38);
    Don Sanger, [2017](#bib.bib45)) and promise a return on investment up to 1000%
    (Lavi, [2018](#bib.bib82)). Maintenance optimisation is a priority for industrial
    companies given that effective maintenance can reduce their cost up to 60% by
    correcting failures of machines, systems and people (Dhillon, [2002](#bib.bib43)).
    Concretely, PdM maximises components’ working life by taking advantage of their
    unexploited lifetime potential while reducing downtime and replacement costs by
    replacement before failures occur; thus preventing expensive breakdowns and production
    time loss caused by unexpected stops.
  prefs: []
  type: TYPE_NORMAL
- en: 'The numerous research works on PdM can be classified in three approaches (Liao
    and Köttig, [2016](#bib.bib99)): physical model-based, data-driven and hybrid.
    Physical model methods use systems’ knowledge to build a mathematical description
    of their degradation (Li et al., [2000](#bib.bib95); Oppenheimer and Loparo, [2002](#bib.bib130);
    Venkatasubramanian et al., [2003](#bib.bib170); Blancke et al., [2018](#bib.bib19);
    Li et al., [2017](#bib.bib92)). It is easy to understand their physical meaning
    but difficult to implement in complex systems. Data-driven methods predict systems’
    state by monitoring their condition with solutions that learned from historical
    data (Baptista et al., [2018](#bib.bib17); Zhang et al., [2005](#bib.bib202);
    Yuan et al., [2016](#bib.bib193)). These are composed of statistical methods,
    reliability functions and artificial intelligence methods. They are suitable for
    complex systems since they do not need to understand how these work. However,
    it is more difficult to relate their output to physical meaning. Finally, hybrid
    approach combines the aforementioned two approaches (Liao and Köttig, [2016](#bib.bib99);
    Zhao et al., [2013](#bib.bib205)). Data-driven and deep learning methods have
    gained popularity in industry in recent years due to the increase of machine data
    collection, which enables the development of accurate PdM models in complex systems.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The review methodology of this survey on deep learning models application for
    predictive maintenance is explained in this paragraph. First, context and applications
    of PdM are analysed. After that, different types of models are researched. Then,
    data-driven models are analysed. Finally, deep learning models are thoroughly
    reviewed. This methodology has enabled to acquire general insight of the scope
    and then focus on the specific research topics. Furthermore, the state-of-the-art
    (SotA) analysis has enabled the comparison among methods and discussion on challenges
    and prospect of DL models for PdM. The conducted analysis is performed by querying
    search engines about aforementioned topics. Initially, Scopus and Engineering
    Village search engines were used, since these contain more specific and relevant
    articles of the field. However, when the research advanced to more specific topics,
    another search engine was included: Google Scholar. This extends the research
    space to unindexed journals and preprints, providing a wider space including newer
    and unindexed published works. Many works belong but are not limited to the following
    publishing editorials: ACM Digital Library, ScienceDirect, IEEE-Xplore and SpringerLink.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Despite existing several published reviews on machine learning and deep learning
    models for predictive maintenance, this work provides these additional contributions
    to the state-of-the-art (SotA): (1) We review and explain the most relevant data-driven
    techniques focused on SotA deep learning architectures with application to PdM,
    providing extensive perspective on the available techniques in a simplified and
    structured way. (2) We discuss the suitability of deep learning models for PdM
    and compare their benefits and drawbacks with statistical and classical machine
    learning models. (3) We analyse current trends on PdM publications, define their
    gaps, present research challenges, identifying opportunities and prospect.'
  prefs: []
  type: TYPE_NORMAL
- en: This paragraph describes the remaining content of this work. Section 2 reviews
    predictive maintenance’s background stages and provides an overview of traditional
    data-driven models used in the field, together with an overview about deep learning
    techniques. Section 3 reviews and categorises the most relevant state-of-the-art
    deep learning works for predictive maintenance by underlying technique, analysing
    them by PdM stages to enable comparison. Moreover, related reviews are analysed.
    Section 4 reviews the publicly available reference datasets for PdM model application
    and benchmarking. Section 5 discusses the suitability of deep learning models
    for predictive maintenance, evaluating their benefits and drawbacks in comparison
    with other data-driven techniques. Finally, Section 6 concludes this work by highlighting
    the most relevant aspects and gaps discovered during the review of referenced
    publications.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Overview of predictive maintenance and deep learning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 2.1\. Predictive maintenance background
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Predictive maintenance solutions have to deal with many factors, peculiarities
    and challenges of industrial data. The most relevant ones are discussed in the
    next paragraphs.
  prefs: []
  type: TYPE_NORMAL
- en: 'Venkatasubramanian et al. present in (Venkatasubramanian et al., [2003](#bib.bib170))
    the 10 desirable properties for a PdM system: quick detection and diagnosis, isolability
    (distinguish among different failure types), robustness, novelty identifiability,
    classification error estimation, adaptability, explanation facility, minimal modelling
    requirements, real-time computation and storage handling, multiple fault identifiability.'
  prefs: []
  type: TYPE_NORMAL
- en: Two main challenges of industrial use-cases are their behaviour and data variability.
    These occur even in assets working under same characteristics given the mechanical
    tolerances, mount adjustments, variations in EOC and other factors. These factors
    make PdM model reusability difficult among machines and assets. Other relevant
    challenges are gathering quality data, performing correct preprocessing and feature
    engineering to get a representative dataset for the problem. In addition, each
    observation is related to previous ones and therefore should be analysed together,
    which increases data dimensionality and modelling complexity; and failure data
    gathering is difficult given machines are designed and controlled to work correctly
    while preventing failures, therefore these are not frequent.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some commonly monitored key components in PdM are but not limited to, bearings,
    blades, engines, valves, gears and cutting tools (Zhang et al., [2019c](#bib.bib201)).
    Moreover, the most common failure types detected by CM are imbalance cracks, fatigue,
    abrasive and corrosion wear, rubbing, defects and leak detection among others.
    The publication by Li et al. (Li and Gao, [2010](#bib.bib91)) classifies the types
    of failures that may exist in the system as: component failure, environmental
    impact, human mistakes and procedure handling.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The commonly used CM techniques are the following ones (UESystems, [2019](#bib.bib167)):
    mechanical ultrasound (Bakar et al., [2013](#bib.bib15)), vibration analysis (Amruthnath
    and Gupta, [2018](#bib.bib8); Durbhaka and Selvaraj, [2016](#bib.bib48); Wen and
    Gao, [2018](#bib.bib179); Feng et al., [2012](#bib.bib52); and Saxena, [2013](#bib.bib9)),
    wear particle testing (Woldman et al., [2015](#bib.bib184); Elnasharty et al.,
    [2011](#bib.bib50)), thermography, motor signal current analysis (Dos Santos et al.,
    [2017](#bib.bib46)) and nondestructive testing (Drinkwater et al., [2009](#bib.bib47)),
    but there are additional techniques as torque, voltage and envelopes (Mehrjou
    et al., [2011](#bib.bib118)), acoustic emission (and Saxena, [2013](#bib.bib9)),
    pressure (Zhao et al., [2017a](#bib.bib206)) or temperature monitoring (Bakar
    et al., [2013](#bib.bib15); Zhao et al., [2017a](#bib.bib206)). The articles (Selcuk,
    [2017](#bib.bib155); García Márquez et al., [2012](#bib.bib55)) also dive into
    these techniques and cover the types of failures they can detect, together with
    their applications. They highlight that EOC information could complement these
    CM techniques to perform a more robust PdM analysis, collecting data from different
    sources: physical, machine and operating.'
  prefs: []
  type: TYPE_NORMAL
- en: Environmental and operational conditions (EOC) are conditions under which an
    industrial asset such a machine or component is working (Tavner et al., [2008](#bib.bib166)).
    Environmental conditions refer to external conditions that affect them like ambient
    temperature or surrounding vibration perturbations. In contrast, operational conditions
    are working processes’ assigned technical specifications, such as desired speed,
    force or positions. Additionally, sensor data comes from measurements taken by
    machine sensors. This data monitored over the time creates a dataset, in a form
    of time-series. Its analysis using condition monitoring techniques enable determining
    component and machine states by comparing patterns and trends with historical
    data. Many works present component degradation patterns in a plot denominated
    as P-F curve (UESystems, [2019](#bib.bib167)), where health decreases from healthy
    working condition until failure as time or machine cycles go by.
  prefs: []
  type: TYPE_NORMAL
- en: 2.2\. Data-driven predictive maintenance stages
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The majority of deep learning models for PdM are based on the same principles
    as other machine learning and statistical techniques. Precisely, most data-driven
    methods follow the incremental steps presented in the roadmap of Figure [1](#S2.F1
    "Figure 1 ‣ 2.2\. Data-driven predictive maintenance stages ‣ 2\. Overview of
    predictive maintenance and deep learning ‣ Deep learning models for predictive
    maintenance: a survey, comparison, challenges and prospect"), based on the articles
    (Welz, [2017](#bib.bib178); Prajapati et al., [2012](#bib.bib139)) and OSA-CBM
    standard (Lebold et al., [2002](#bib.bib84)): 1st anomaly detection, 2nd diagnosis,
    3rd prognosis and lastly mitigation.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/66d13566f49e8ceb481f1bd3653f5784.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1\. Predictive maintenance roadmap represented by a stages of a pyramid
    chart.
  prefs: []
  type: TYPE_NORMAL
- en: Commonly two additional steps are performed before the aforementioned ones to
    prepare the data for PdM, as general data analytic lifecycle, Khan et al. (Khan
    and Yairi, [2018](#bib.bib76)) and other PdM authors present. These steps are
    preprocessing and Feature Engineering (FE), which, as stated above, are key to
    enhance model accuracy on PdM stages by creating a representative dataset for
    the problem. All PdM stages have to be designed, adapted and implemented to fit
    use-cases’ requirements and their data characteristics. In addition, the PdM systems
    development is incremental and therefore, techniques, algorithms and decisions
    taken in each stage will influence the following ones. The next subsections overview
    the most common data-driven methods to address each PdM stage.
  prefs: []
  type: TYPE_NORMAL
- en: 2.2.1\. Preprocessing
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This step consists of preparing the collected data for further stages. Each
    PdM model has different requirements and these must be taken into consideration
    when choosing adequate preprocessing techniques to boost model performance. The
    most common techniques are briefly explained and referenced below: sensor data
    validation (Zugasti et al., [2012](#bib.bib214)) makes sure the collected data
    is correct; feature synchronisation (Kroll et al., [2014](#bib.bib80)) is used
    to gather signals sampled at different timestamps to create a time-series/cycle-based
    data that is easier to handle; data cleaning removes or interpolates not available
    and missing values (Cerqueira et al., [2016](#bib.bib31); Costa and Nascimento,
    [2016](#bib.bib40)); oversampling (Cerqueira et al., [2016](#bib.bib31); Perini,
    [2019](#bib.bib134)) is applied for imbalance data handling to boost accuracy
    on commonly scarce failure data class or to deal with small datasets; encoding
    (Martinez et al., [[n.d.]](#bib.bib115)) and discretisation (Martinez et al.,
    [[n.d.]](#bib.bib115)) change features’ type by projection to a new space where
    they are easier to handle by the model; segmentation splits data in chunks to
    analyse big datasets and enable parallelisation (Lo et al., [2018](#bib.bib107));
    feature scaling like normalisation (Sanayha and Vateekul, [2017](#bib.bib151))
    or standardisation (Pratama et al., [2018](#bib.bib140)) scales all features to
    the same or similar space that enables comparisons; noise handling (Kroll et al.,
    [2014](#bib.bib80)) facilitates noisy data modelling.'
  prefs: []
  type: TYPE_NORMAL
- en: 2.2.2\. Feature engineering
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This step consists of extracting a relevant feature subset to be used as input
    for models in further stages. It can boost statistical and machine learning model
    performance, despite not being compulsory for deep learning models given these
    can extract new representative features that fit the problem automatically. The
    most common techniques can be grouped into next groups: feature extraction as
    statistical features in time (Zhang et al., [2019c](#bib.bib201)) and frequency
    (Zhang et al., [2019c](#bib.bib201); Zhou et al., [2014](#bib.bib211); Garg et al.,
    [2015](#bib.bib56)) domains that extract time/frequency relations of features;
    based on projection to new space like principal component analysis (Dos Santos
    et al., [2017](#bib.bib46); Canizo et al., [2017](#bib.bib27)) which reduce dimensionality
    while keeping relevant information; concatenation and fusion methods (Lee et al.,
    [2006](#bib.bib88)) create new features by combining available ones; feature selection
    (Serradilla et al., [2020](#bib.bib156)) reduces dimensionality discarding features
    of low variance, redundant and uncorrelated to target, given these increase complexity
    while not supplying additional information.'
  prefs: []
  type: TYPE_NORMAL
- en: 2.2.3\. Anomaly detection
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'It aims to detect whether the asset is working under normal condition or not.
    There are three ways to address this step using data-driven models, classified
    by their underlying machine learning task: classification, one-class classification
    and clustering. Respectively, these can be used when labeled data of different
    classes is available in the training phase, when only one class data exist (commonly
    non-failure data) and when the data is unlabelled. Failure modes and effects analysis
    (FMEA) (Passarella, [2018](#bib.bib131)) and its evolution by adding criticality
    analysis FMECA (Bromley and Bottomley, [1994](#bib.bib23)) are useful to gain
    vision on the possible types of failures based on expert knowledge, which helps
    designing the data analysis lifecycle, prioritising the failure types or anomalies
    to be detected.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The anomaly detection methods need preprocessed and some also depend on feature
    engineered data to work. Once worked on features, the next step is to select,
    train and optimise the right model for the use-case. Following PdM stages will
    be influenced and constrained by the selected AD method and use-case’s data. Table
    [1](#S2.T1 "Table 1 ‣ 2.2.3\. Anomaly detection ‣ 2.2\. Data-driven predictive
    maintenance stages ‣ 2\. Overview of predictive maintenance and deep learning
    ‣ Deep learning models for predictive maintenance: a survey, comparison, challenges
    and prospect") classifies and summarises the main data-driven anomaly detection
    techniques based on referenced SotA articles and the following review works (Wang
    et al., [2019a](#bib.bib173); Zhang et al., [2019c](#bib.bib201); Pimentel et al.,
    [2014](#bib.bib135); Carvalho et al., [2019](#bib.bib29)). Besides, two or more
    of these techniques can be combined to create an anomaly detection system that
    compensates the disadvantages of a single model.'
  prefs: []
  type: TYPE_NORMAL
- en: Table 1\. Summary of anomaly detection models classified by prevailing techniques.
    In the first column, Unsup refers to unsupervised, All refers to supervised, semi-supervised
    and unsupervised and and Combination refers to a combination of models respectively.
  prefs: []
  type: TYPE_NORMAL
- en: '| Based on and Type | What analyses | Normal data | Anomalies | Most common
    algorithms and categorised |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Density Unsup | Density in features space dimension | In high density | In
    low density | K nearest neighbors (k-NN) (Susto et al., [2015](#bib.bib164); Mathew
    et al., [2018](#bib.bib117); Costa and Nascimento, [2016](#bib.bib40); Perini,
    [2019](#bib.bib134)), local outlier factor (LOF) (Cerqueira et al., [2016](#bib.bib31);
    Diez-Olivan et al., [2017](#bib.bib44)), local correlation integral (LOCI) ¹¹1Methods
    that have been applied for AD in general but not specifically for PdM are mentioned
    but not referenced, relative density factor, density-based outlier score, reliability
    functions (Zhai et al., [2019](#bib.bib195); Okoh et al., [2017](#bib.bib129))
    |'
  prefs: []
  type: TYPE_TB
- en: '| Distance Unsup | Distance among data-points | Near from neighbors | Far from
    neighbors | Traditional threshold distance mahalanobis (Sanayha and Vateekul,
    [2017](#bib.bib151)) or euclidean (Durbhaka and Selvaraj, [2016](#bib.bib48)),
    rank based detection algorithm (RBDA), randomization and pruning based, data streams
    based |'
  prefs: []
  type: TYPE_TB
- en: '| Statistics All | Relation to distribution models fit to training data | Near
    to distribution models | Far from distribution models | Parametric: gaussian mixture
    models (GMM) with expectation maximisation (EM) (Amruthnath and Gupta, [2018](#bib.bib8)),
    control charts as exponentially weighted moving average (EWMA) (Castagliola et al.,
    [2011](#bib.bib30); Susto et al., [2012](#bib.bib163)). Non-Parametric: kernel
    density estimation (KDE): gaussian or KL-divergence (Zhao et al., [2010](#bib.bib209);
    Susto et al., [2012](#bib.bib163); Wen and Gao, [2018](#bib.bib179)), histogram-based
    outlier detection (HBOS) (Munir et al., [2017](#bib.bib121)), boxplot analysis
    (Cerqueira et al., [2016](#bib.bib31)), 3$\sigma$  (Able et al., [2016](#bib.bib2)).
    Entropy-based permutation entropy (Feng et al., [2012](#bib.bib52); Radhakrishnan
    and Kamarthi, [2016](#bib.bib142)), fuzzy entropy (Carlsson et al., [2016](#bib.bib28))
    and K-S test (Bolbolamiri et al., [2012](#bib.bib20)). |'
  prefs: []
  type: TYPE_TB
- en: '| Clustering Unsup | Relation to clusters created by unsupervised ML models
    | Belong to a large cluster or near one | Belong to a small cluster and far from
    large clusters | Partitioning clustering: partitioning around medoids (PAM), K-means
    (Diez-Olivan et al., [2017](#bib.bib44); Eke et al., [2017](#bib.bib49); Amruthnath
    and Gupta, [2018](#bib.bib8)). Hierarchical clustering: DB-Scan, agglomerative
    (Cerqueira et al., [2016](#bib.bib31)), attribute oriented induction (AOI) (Fernandez-Anakabe
    et al., [2019](#bib.bib53)). Grid-based: Dcluster. For high dimensional: D-Stream,
    fuzzy-rules based (Diez-Olivan et al., [2017](#bib.bib44)) |'
  prefs: []
  type: TYPE_TB
- en: '| Ensemble Combination | Combines dissimilar models. Robust | Combina-tion
    of models | Combination of models | Bagging or boosting based as random forest
    (RF) (Mathew et al., [2018](#bib.bib117); Costa and Nascimento, [2016](#bib.bib40);
    Canizo et al., [2017](#bib.bib27); Dos Santos et al., [2017](#bib.bib46)), extra
    gradient boosting (XGBoost) (Cerqueira et al., [2016](#bib.bib31)), adaboost (Mathew
    et al., [2018](#bib.bib117)) and isolation forest (IF) (Perini, [2019](#bib.bib134)),
    greedy ensemble, score normalization |'
  prefs: []
  type: TYPE_TB
- en: '| Learning All | Relation to models learned with training data | Near the known
    classes of the model | Far from the known classes of the model | Active learning.
    Transfer learning. Reinforcement learning. Projection-based: Subspace and compression
    reconstruction error measuring like PCA (Amruthnath and Gupta, [2018](#bib.bib8))
    and AE (Chen et al., [2017b](#bib.bib36)), correlation (Zhao et al., [2017a](#bib.bib206);
    Zugasti et al., [2018](#bib.bib215)) and tensor-based. State-space based (hidden
    state of observed data and time evolution): kalman filter (Vianna and Yoneyama,
    [2018](#bib.bib171)), hidden markov models (HMM) (Perini, [2019](#bib.bib134)),
    bayesian networks (BN) (Kolokas et al., [2018](#bib.bib79)) (dynamic BN, belief
    network), attention-based NN and RNN (GRU, LSTM). Graph-based: capture interdependiencies.
    OCC: OCSVM (Zhou et al., [2014](#bib.bib211)), BN. Prediction error-based regression:
    measure deviation (autoregressive integrated moving average (ARIMA) (Sanayha and
    Vateekul, [2017](#bib.bib151)), RNN as LSTM (Yuan et al., [2019](#bib.bib192))).
    Classification: normal and abnormal data in training using interpretable models:
    linear regression (Mathew et al., [2018](#bib.bib117)), logistic regression (Mathew
    et al., [2018](#bib.bib117); Costa and Nascimento, [2016](#bib.bib40)), decision
    tree (DT) (Costa and Nascimento, [2016](#bib.bib40); Jegadeeshwaran and Sugumaran,
    [2015](#bib.bib72)). ML classification techniques as SVM (Costa and Nascimento,
    [2016](#bib.bib40); Jegadeeshwaran and Sugumaran, [2015](#bib.bib72); Susto et al.,
    [2015](#bib.bib164)) and feedforward NN (Rad et al., [2011](#bib.bib141)). Generative
    methods: GAN (Lee et al., [2017](#bib.bib89)), VAE (Xu et al., [2018a](#bib.bib188)).
    |'
  prefs: []
  type: TYPE_TB
- en: 2.2.4\. Diagnosis
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Once an anomaly has been detected, the next stage consists of diagnosing whether
    this anomaly belongs to a faulty working condition and can evolve into a future
    failure or, in contrary, there is no risk of failure. The last case indicates
    that the anomaly detection model has not worked properly and therefore it may
    need to be reevaluated or retrained. The diagnosis is usually based on root cause
    analysis (RCA) techniques, which aim to identify the true cause of a problem.
  prefs: []
  type: TYPE_NORMAL
- en: 'The diagnosis algorithm has to be suitable for the problem being addressed.
    There are several approaches to tackle this step, which depend on the implemented
    AD method and training data characteristics: multi-class classification, binary
    classification, one-class classification and clustering. Concretely these are
    chosen if the dataset has multiple failure types, failure and non failure observations,
    only observations of one class or unsupervised, respectively. There is another
    technique that commonly complements RCA: anomaly deviation quantification by health
    index (HI). It aims to measure assets’ damage by comparing current working data
    with historical data in a supervised or unsupervised way. It can either indicate
    a percentage of deviation with regard to normal working data, or show degradation
    level in a numerical scale, where the higher the value the more damaged the component
    is, where minimum value means no damage, maximum is fully damaged or failure and
    intermediate values indicate different degrees of degradation (Mike Sondalini,
    [2019](#bib.bib120)).'
  prefs: []
  type: TYPE_NORMAL
- en: The diagnosis step is easier when there is more information about the dataset
    and its labels. The main statistical and machine learning techniques for diagnosis
    are described in the following list, ordered by increasing difficulty. They are
    divided according to the anomaly detection technique used in the previous stage,
    which depends on data characteristics.
  prefs: []
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'After multi-class classification for anomaly detection: diagnosis is performed
    based on previous failure data knowledge of the estimated class, so the link of
    data to failure type is directly obtained from model (Bakar et al., [2013](#bib.bib15);
    Boutros and Liang, [2011](#bib.bib22)). Once the possible failure type has been
    detected, semi-quantitative and qualitative approaches can be used by harnessing
    expert knowledge to evaluate its potential consequences, using tools such as FMEA
    (Cortes et al., [2016](#bib.bib39)) or Ishikawa diagram (Pradhan et al., [2007](#bib.bib138)).
    In addition, interpreting directly explainable models (Ansari et al., [2020](#bib.bib10);
    Ademujimi et al., [2017](#bib.bib3)) or using explainability on less interpretable
    models such as SVM (Demetgul, [2013](#bib.bib41)) can also help to perform this
    task.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'After binary classification for anomaly detection: clustering with extracted
    features can be performed to group data by similarity and try to differentiate
    unlabeled failure types (Yuwono et al., [2016](#bib.bib194)). These diagnosis
    techniques can also be based on statistical performance analysis (Murugan and
    Ramasamy, [2015](#bib.bib123)), supported on trend analysis and definition of
    thresholds to differentiate failure types by similarity or distance.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'After one-class classification or clustering for anomaly detection: these techniques
    use a threshold in distance to the classified class or clusters density respectively
    to categorise anomalies. Diagnosis for these models usually consists of precomputing
    metrics from data like health index and monitoring their evolution, instead of
    monitoring input data evolution. The diagnosis can be performed using a clustering
    algorithm in these metrics to analyse the intra-cluster and inter-cluster relations.
    Domain knowledge is essential to tie unsupervisedly discovered relations to physical
    meaning of monitored assets. This novel knowledge is useful for interpreting unsupervised
    models’ output to discover novel failure types, using models as K-means (Adhikari
    et al., [2018](#bib.bib4)) or HMM with IF-ELSE rules (Wu et al., [2018](#bib.bib185)).
    Log data can also be used for this clustering purpose and tag maintenance data
    (Sharp et al., [2017](#bib.bib160)) to perform RCA.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 2.2.5\. Prognosis
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Once an anomaly is detected and diagnosed, the degradation evolution can be
    monitored based on that moment’s working conditions and machine state, focusing
    on the most influential features for AD and diagnosis stages that can track failures.
    This step is usually carried out by remaining useful life models that estimate
    the remaining time or cycles until a failure occurs when there is enough historical
    data of that failure type. Conversely, if there is not enough degradation data,
    the only way to estimate degradation is by tracking the evolution of HI or the
    distance between novel working states and the known good working states. Both
    aforementioned models can also provide a confidence bound. The data-driven models
    for prognosis can be classified into 4 groups regarding their underlying method.
    The following list summarises the most common techniques categorised by groups
    to prognosticate degradation:'
  prefs: []
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Similarity-based: compare current behavior with past run-to-failure behavior
    for prognosis (Adhikari et al., [2018](#bib.bib4); Ramasso, [2014](#bib.bib143)).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Statistical: rely on historical statistics to estimate degradation, for example
    monitoring life usage in combination with mean-time-to-failure (Baptista et al.,
    [2018](#bib.bib17)) or survival models (Zhang and Zhang, [2015](#bib.bib204))
    to estimate the expected duration.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Time series analysis: ARIMA (Kanawaday and Sane, [2018](#bib.bib74); Adhikari
    et al., [2018](#bib.bib4); Baptista et al., [2018](#bib.bib17)) based on previous
    values, kalman filter to model hidden state of time-related noisy data (Vianna
    and Yoneyama, [2018](#bib.bib171)) and fourier and genetic programming to generate
    a polynomial function by optimising a fitness function (Garg et al., [2015](#bib.bib56)).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Learning:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: –
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Classification: diagnose the data to a known failure type or similar working
    data and then prognosticate a degradation according to the historical data of
    this class. Despite any classifier can be used for this purpose, the following
    ones are widely used in literature: feed-forward NN (Rad et al., [2011](#bib.bib141)),
    SVM (Rad et al., [2011](#bib.bib141)), BN (Lee, [2019](#bib.bib86); Lee and Pan,
    [2017](#bib.bib87); Ansari et al., [2020](#bib.bib10)), HMM (Zhang et al., [2005](#bib.bib202)),
    fuzzy logic based (Zio and Di Maio, [2010](#bib.bib212)) and RF (Gutschi et al.,
    [2019](#bib.bib63); Baptista et al., [2018](#bib.bib17)).'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: –
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Regression: directly estimate HI, anomaly deviation or RUL from the input data.
    Common SotA algorithms are below: linear function is the simplest method (Sharp
    et al., [2017](#bib.bib160)); nonlinear functions (Liao et al., [2006](#bib.bib97);
    Zhang and Zhang, [2015](#bib.bib204)) can model non-linear relations; support
    vector regressor (SVR) (Benkedjouh et al., [2013](#bib.bib18); Baptista et al.,
    [2018](#bib.bib17)) works like SVM adapted for regression; relevance vector regression
    (RVR) is based on bayesian regression (Adhikari et al., [2018](#bib.bib4)); CNN
    models features’ time-based relationships (Babu et al., [2016](#bib.bib14)); wiener
    processes model degradation by a real valued continuous-time stochastic processes
    (Si et al., [2013](#bib.bib161)); recurrent neural networks like LSTM and GRU
    (Yuan et al., [2016](#bib.bib193)) retain relevant past information for prognosis
    at each observation.'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 2.2.6\. Mitigation
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Once an anomaly is detected, diagnosed its cause and prognosticated its remaining
    life, there is enough information to perform maintenance actions to mitigate failures
    in early phases and thus prevent assets deriving into failure. This stage consists
    of designing and performing the steps necessary to restore assets to correct working
    condition before failures occur, which also reduces implementation and downtime
    costs.
  prefs: []
  type: TYPE_NORMAL
- en: Mitigation is performed by maintenance technicians who are in charge of creating
    and implementing a mitigation plan as part of the maintenance management and manufacturing
    operation management processes. Data-driven PdM models should generate assistance
    information, providing domain technicians with statistics (Murugan and Ramasamy,
    [2015](#bib.bib123)) and prescriptions (Ansari et al., [2020](#bib.bib10)). Therefore,
    a more advanced mitigation is accomplished by the combination of domain knowledge
    and data-driven information about assets’ health and expected degradation (Liu
    et al., [2012](#bib.bib106)).
  prefs: []
  type: TYPE_NORMAL
- en: 2.3\. Deep learning techniques
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This section presents deep learning background and introduces its most common
    architectures applied to the field of PdM. Nowadays, deep learning models outperform
    statistical and traditional ML models in many fields including PdM, when enough
    historical data exist. The deep learning (DL) term refers to artificial neural
    networks (ANN), a machine learning technique inspired on brain functioning, that
    go beyond shallow 1- and 2-hidden layer networks (Neapolitan and Neapolitan, [2018](#bib.bib126)).
  prefs: []
  type: TYPE_NORMAL
- en: ANNs are formed by neurons that compute linear regressions of inputs with weights
    and then compute non-linear activation functions such as sigmoid, rectified linear
    unit (reLU) or tan-h to produce outputs. The network’s parameters are commonly
    initialised randomly and they are then adjusted to map input data to output data
    given the training dataset. This learning process takes place by running gradient
    descend algorithm combined with backpropagation algorithm. These enable to calculate
    the adjustments of each neuron with respect to the error produced by the network
    to reduce it, where the error is calculated based on the user defined cost function.
    Hornik in the article (Liu, [2001](#bib.bib104)) justifies that ANNs of at least
    two hidden layers with enough training data are capable of modelling any function
    or behaviour, creating the universal approximator.
  prefs: []
  type: TYPE_NORMAL
- en: 'The book by Goodfellow et al. (Goodfellow et al., [2016](#bib.bib59)) provides
    exhaustive background on DL and it is considered as reference book by many researchers
    in the field. Concretely, the book introduces machine learning and deep learning
    mathematical background. Afterwards, it focuses on DL optimisation, regularisation,
    different type of architectures, their mathematical definition and common applications.
    A simpler yet powerful overview of the field is done by Litjens et al. in the
    survey of DL applied to medicine (Litjens et al., [2017](#bib.bib103)), which
    is further complemented with a visual scheme collecting the main architectures.
    Another survey specifically focused on DL architectures, applications, frameworks,
    SotA and historical works, trends and challenges is the one by Pouyanfar et al.
    (Pouyanfar et al., [2018](#bib.bib136)). Additionally, a reference book of practical
    DL applications is presented by Geron (Géron, [2017](#bib.bib57)), which is based
    on the following tools: Scikit-Learn ²²2https://scikit-learn.org, Keras ³³3https://keras.io,
    and TensorFlow ⁴⁴4https://www.tensorflow.org.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The most common DL techniques related to the field of PdM are summarised in
    the following paragraphs. Most of them are based on the feed forward scheme but
    each one has its own characteristics:'
  prefs: []
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Feed-forward/MLP (Werbos, [2005](#bib.bib183)) is the first, most common and
    simplest architecture. It is formed by stacked neurons creating layers, where
    all the neurons of a layer are connected to all the neurons of the next layer
    by feeding their output to others’ input. However, there are no connections to
    neurons of previous layers or among neurons of the same layer. The nomenclature
    for layers is the following: an input layer, hidden layers and an output layer.
    The neural network is fed with observations pairing input features and target
    features, which are used to learn their relation by minimising the error produced
    by the network by mapping input data to output.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Convolutional neural network (CNN) (LeCun et al., [1989](#bib.bib85)) is a type
    of feedforward network that maintains neurons’ neighborhood by applying convolutional
    filters. It is inspired by the animal visual cortex and has applications in image
    and signal recognition, recommendation systems and NLP among others. The convolutional
    layer is usually linear and is followed by the application of an activation function
    to produce non-linear output. After that, a max or average pooling layer can be
    used to reduce the dimension. Finally, most architectures have a flatten step
    to obtain representative features of input data that can be used with other ML
    or DL networks to perform typical ML tasks. The convolutions’ weights are shared,
    making them easier to train.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recurrent neural network (RNN) (Robinson and Fallside, [1987](#bib.bib147))
    models temporal data by saving the state derived from previous inputs of the network.
    The back-propagation through time algorithm (Werbos, [1988](#bib.bib182)) is an
    adaptation of traditional backpropagation for temporal data used to propagate
    network’s error to previous time instances. However, this propagation can result
    into vanishing or exploding gradient problem (Hochreiter, [1991](#bib.bib66)),
    making this networks forget long-term relations. To solve this problem, specific
    RNN architectures were created based on forget gates, like long-short term memory
    (LSTM) (Hochreiter and Schmidhuber, [1997](#bib.bib67)) and gated recurrent unit
    (GRU) (Cho et al., [2014](#bib.bib37)).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deep belief network (DBN) (Hinton and Salakhutdinov, [2006](#bib.bib65)) and
    restricted boltzmann machine (RBM) (Scholar and Smolensky, [1986](#bib.bib153)).
    RBM is a bipartite, fully-connected, undirected graph consisting of a visible
    layer and a hidden layer. It is a type of stochastic ANN that can learn probability
    distribution over the data. It can be trained in supervised or unsupervised ways
    and its main applications are on dimensionality reduction and classification.
    Accordingly, DBN is an ANN where every two consecutive layers are treated as RBMs.
    It is trained in unsupervised way to reduce dimensionality. Then, it can be retrained
    with classified data to perform classification.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Autoencoder (AE) (Ballard, [1987](#bib.bib16)) is based on singular value decomposition
    concept (Golub and Reinsch, [1970](#bib.bib58)) to extract the non-linear features
    that best represent the input data in a smaller space. It consists of two parts:
    an encoder that maps input data to the encoded, latent space, and the decoder,
    which projects latent space data to the reconstructed space that has the same
    dimension as input data. The network is trained to minimise the reconstruction
    error, which is the loss between input and output. Autoencoders can be classified
    according to their latent space dimensionality in undercomplete and overcomplete,
    which respectively correspond to a latent space smaller, and bigger or equal to
    the input dimension. These simple architectures are extended and adapted to fit
    different tasks and problems. Vanilla autoencoders are the simplest autoencoders,
    which belong to the undercomplete type. The following variations are obtained
    by applying regularisation and modifying AE types. One of these adaptations is
    the denoising autoencoder (DAE) (Le Cun and Fogelman-Soulié, [1987](#bib.bib83)),
    used for corrupt data reconstruction. It is a type of overcomplete AE where learning
    is controlled to avoid ”identity function”. It is fed with data pairs of noisy
    input and its denoised output and trained to reduce the loss between them. Another
    modification is the sparse autoencoder (SAE) (Makhzani and Frey, [2013](#bib.bib113)),
    an AE restricted in the learning phase based on a sparse penalty constraint, which
    is based on the concept of KL-Divergence. This algorithm aims to make each neuron
    sparse, discovering the structure information from the data easier than vanilla
    AE and being more useful for practical applications (Sun et al., [2018](#bib.bib162)).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Generative models: variational autoenconder (VAE) (Kingma and Welling, [2014](#bib.bib77))
    and generative adversarial network (GAN) (Goodfellow et al., [2014](#bib.bib60)).
    Both models were designed to work in unsupervised way. VAE is a generative and
    therefore non-deterministic modification of the vanilla AE where the latent space
    is continuous. Usually, its latent space distribution is gaussian, from where
    the decoder reconstructs the original signal based on random sampling and interpolation.
    It has applications on estimating the data distribution, learning a representation
    of data samples and generating synthetic samples among others. GAN is another
    type of generative neural network that consists of two parts: generator and discriminator.
    The generator is trained to generate an output that belongs to a specific data
    distribution using as input a representation vector. The discriminator is trained
    to classify its input data whether it belongs to a specific data distribution
    or not. The generator’s output is connected to discriminator’s input and they
    are trained together, adversely. Generator’s objective is to bias discriminator
    by generating outputs from random input and trying to make the discriminator classify
    it as it belongs to the specific trained distribution. The role of the discriminator
    is to distinguish between synthetic, generated data, from non-synthetic, real
    data from trained distribution. They are trained together so that each part learns
    from the other, competing to bias the other part, similar to game theory. GANs
    can be extended to other ML tasks such as supervised or reinforcement learning.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: •
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Self organising map (SOM) (Kohonen, [1990](#bib.bib78)) is an ANN-based unsupervised
    way to organise the internal representations of data. It uses competitive learning,
    in contrast to typical ANNs that use backpropagation and gradient-descend, to
    create a new space called map that is typically 2 dimensional. It is based on
    neighborhood functions to preserve the topological properties of the input space
    into the new space, represented in cells. It has applications on clustering, among
    others.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 3\. Deep learning for predictive maintenance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This section collects, summarises, classifies and compares the reference DL
    techniques for PdM, analysing the most relevant works and applications. It contains
    accurate DL models that achieve SotA results on reviewed articles, surveys and
    reviews of the field. Even though most articles combine several techniques and
    perform more than one PdM stage in the same architecture, this section classifies
    in its five first subsections the works by their principal DL technique to perform
    each stage of Section [2.2](#S2.SS2 "2.2\. Data-driven predictive maintenance
    stages ‣ 2\. Overview of predictive maintenance and deep learning ‣ Deep learning
    models for predictive maintenance: a survey, comparison, challenges and prospect");
    including the previous stage feature engineering and excluding preprocessing given
    the latter’s explanation on previous section is also valid for DL. This classification
    enables the analysis and comparison of DL techniques by stages. The sixth subsection
    presents works that successfully combine the aforementioned techniques to create
    more complete architectures that fulfil one or more PdM stages, to give examples
    of ways to combine techniques that can be infinite. Finally, last subsection gathers
    the most relevant information contained in similar works to this survey, discussing
    related reviews and surveys.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The SotA works can be classified regarding their underlying ML task and algorithms
    used to address it, which are directly related to the use-case and its data requirements.
    Binary classification is used when training data contains labelled failure and
    non-failure observations. Multi-class classification is used in the same case
    as binary classification, but there is more than one type of failure classified
    and therefore there are at least three classes: one represents non-failure and
    then one for each type of failure. One-class classification (OCC) is used when
    the training dataset only contains non-failure data, which usually consists of
    collecting machine data in early working states or when technicians assure the
    asset is working correctly. Finally, unsupervised techniques are used when training
    datasets’ observations are unlabelled and therefore there is no knowledge of which
    observations belong to failure and non-failure classes. Unsupervised techniques
    can also be used as one class classifiers. Additionally, there are a few works
    on other machine learning and deep learning topics such as active learning, reinforcement
    learning and transfer learning.'
  prefs: []
  type: TYPE_NORMAL
- en: 3.1\. Feature engineering
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The deep learning algorithms used in PdM are capable of performing feature
    engineering automatically, obtaining a subset of derived features that fit specifically
    for the task. Therefore, these techniques remove the dependence on manual and
    feature engineering process. Table [2](#S3.T2 "Table 2 ‣ 3.1\. Feature engineering
    ‣ 3\. Deep learning for predictive maintenance ‣ Deep learning models for predictive
    maintenance: a survey, comparison, challenges and prospect") shows common deep
    learning techniques used for feature engineering. These techniques are integrated
    with machine learning and deep learning models to create architectures that perform
    PdM stages.'
  prefs: []
  type: TYPE_NORMAL
- en: Table 2\. Deep learning techniques for automatic feature engineering and projection.
    They are based on input signals relations and temporal context.
  prefs: []
  type: TYPE_NORMAL
- en: '| Algo-rithm | How it works | Strengths | Limitations | Applica-tions | Ref
    |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Feed-forward | Add deep layers with less dimensions | Reduce dimension to
    lower feature space. Simplest NN architecture | Does not model the features by
    neighborhood neither temporal relations. | Engine health monitoring, vibration
    monitoring | (Yildirim and Kurt, [2016](#bib.bib190); Rad et al., [2011](#bib.bib141);
    Al-Raheem and Abdul-Karem, [2011](#bib.bib6)) |'
  prefs: []
  type: TYPE_TB
- en: '| RBM | Automatic feature extraction. Models data probability by minimising
    Contrastive Divergence. One-way training, reconstructing input from output. |
    Keep spatial representation in new space. Not much training time. | Not keeping
    data variance in new space. Difficulty on modelling complex data since only one
    layer. | Bearing degradation, factory PLC sensors | (Liao et al., [2016](#bib.bib98);
    Hwang et al., [2018](#bib.bib70)) |'
  prefs: []
  type: TYPE_TB
- en: '| DBN | Automatic feature extraction using stacked RBMs with greedy training.
    Can be used for HI construction. | Competitive SotA results. Can model time-dependencies
    using sliding windows. | Very slow and inefficient training. Not modelling long-term
    dependencies. | Bearings vibration, aviation engine, wind turbine | (Wang et al.,
    [2017b](#bib.bib177); Deutsch and He, [2017](#bib.bib42); Peng et al., [2019](#bib.bib132);
    Yang et al., [2018](#bib.bib189); Shao et al., [2017b](#bib.bib159)) |'
  prefs: []
  type: TYPE_TB
- en: '| SOM | Data mapping to a specified dimension | Non-linear mapping of complex
    data to a lower dimension. Maintains feature distribution in the new space. Can
    be combined with other techniques for RCA (i.e. 5-whys (Chemweno et al., [2016](#bib.bib34)))
    | Difficult to link latent variables with physical meaning. More complex than
    other techniques. Fixed number of clusters | Turbofan, pneumatic actuator, thermal
    power plant, bearing degradation | (Lacaille et al., [2015](#bib.bib81); Prabakaran
    et al., [2014](#bib.bib137); Chemweno et al., [2016](#bib.bib34); Liao et al.,
    [2016](#bib.bib98)) |'
  prefs: []
  type: TYPE_TB
- en: '| AEs | Dimensionality reduction in latent space keeping maximum input data
    variance. Non-linear FE and HI calculation. | Automatic FE of raw sensor data
    achieve similar results to traditional features. Traditional features can also
    be input. No need of classification or failure data. Allows online CM. | Extracted
    features not specific for the task. Needs more resources: computational and training
    data. Loses temporal relations if input data are raw sensors data. Can lead to
    overfitting | Bearing vibration, satellite data, PHM2012 Predictor Challenge |
    (Sakurada and Yairi, [2014](#bib.bib150); Chen et al., [2017b](#bib.bib36); Ahmed
    et al., [2018](#bib.bib5); Hong and Yin, [2018](#bib.bib68); Perini, [2019](#bib.bib134))
    |'
  prefs: []
  type: TYPE_TB
- en: '| CNN | Automatic feature extraction. Univariate or multivariate convolutions
    of input. Models sequential data. Used with sliding windows. Combined with pooling
    methods to reduce dimension | Simple yet effective. Faster than traditional ML
    models in production. Takes advantage of neighborhoods. Less training time and
    data by weight-sharing. Can outperform LSTM. Dropout can prevent overfitting |
    Slower training due to high number of weights. Data analysis in chuncks, not modelling
    long-term dependencies. | Bearing, electric motor, turbofan | (Cabezas Rodríguez,
    [2019](#bib.bib25); Li et al., [2018a](#bib.bib94); Guo et al., [2016a](#bib.bib62);
    Liu et al., [2017](#bib.bib105); Wang et al., [2017a](#bib.bib176); Babu et al.,
    [2016](#bib.bib14); Munir et al., [2019](#bib.bib122); Li et al., [2020](#bib.bib93))
    |'
  prefs: []
  type: TYPE_TB
- en: '| RNNs | Regression. Model time-series and sequential data by propagating state
    information through time. | Model temporal relationships of EOC data. Special
    architectures as LSTM and GRU can model medium-term dependencies | RNNs suffer
    vanishing gradient problem, even special architectures cannot model very long-term
    dependencies. Need more resources. | Aero engine, hydropower plant | (Yuan et al.,
    [2016](#bib.bib193); Bruneo and De Vita, [2019](#bib.bib24); Aydin and Guldamlasioglu,
    [2017](#bib.bib12); Yuan et al., [2019](#bib.bib192)) |'
  prefs: []
  type: TYPE_TB
- en: 3.2\. Anomaly detection
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The deep learning-based AD algorithms can be classified in three groups, as
    stated in the introduction of this section, regarding the characteristics of training
    data. The main architectures have been summarised in Figure [5](#footnote5 "footnote
    5 ‣ Figure 2 ‣ 3.2\. Anomaly detection ‣ 3\. Deep learning for predictive maintenance
    ‣ Deep learning models for predictive maintenance: a survey, comparison, challenges
    and prospect").'
  prefs: []
  type: TYPE_NORMAL
- en: '![Refer to caption](img/b82b42a31b7697dc6f5e19c00001d65d.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2\. Diagram of the main deep learning techniques for anomaly detection
    applied to predictive maintenance and time-series, classified by machine learning
    task⁵⁵5In this work, the term traditional features refers to handcrafted and automatic
    feature extraction techniques such as statistical or ML-based features, excluding
    DL-based features..
  prefs: []
  type: TYPE_NORMAL
- en: Those algorithms are summarised, compared and their main applications are referenced
    in the following tables. On one hand, the anomaly detection algorithms based on
    binary and multi-class classification approaches (Rad et al., [2011](#bib.bib141);
    Al-Raheem and Abdul-Karem, [2011](#bib.bib6)) rely on training data classified
    as correct and failure. These commonly used feature extraction techniques either
    traditional or deep learning followed by a flatten process, and then have several
    fully-connected layers of decreasing dimension until the output layer. The output
    layer usually uses the softmax activation function to output the probability of
    failure and not failure. In the case of binary classification, there are one or
    two neurons indicating the probability of failure and normal working condition.
    Similarly, in multi-class classification there are N+1 number of neurons, where
    there is one neuron to indicate the probability of not failure and each of remaining
    N indicate the probability of each type of failure. On the other hand, Table LABEL:tab:AD_oneclass_unsup
    contains algorithms that address AD problem based on one-class classification
    or unsupervised approaches, using only training data classified as correct or
    not classified.
  prefs: []
  type: TYPE_NORMAL
- en: 'Table 3\. Anomaly detection methods that use training data classified as correct
    or not classified: one-class classification and unsupervised.'
  prefs: []
  type: TYPE_NORMAL
- en: '| Algo-rithm | How it works | Strengths | Limitations | Applica-tions | Ref
    |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '|   |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '|   |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Autoencoders |'
  prefs: []
  type: TYPE_TB
- en: '| Vani-lla AE | Threshold in reconstruction error. Data is considered when
    it surpasses the threshold. | Automatic feature engineering of raw sensor data
    or traditional features. Minimise variance loss in latent space. No need of classification
    or failure data. Allows online CM | Extracted features not specific for the task.
    Needs more resources: computational and training data. Loses temporal relations
    if input data are raw sensors data. Can lead to overfitting | Bearing vibration,
    satellite data, PHM2012 Predictor Challenge | (Sakurada and Yairi, [2014](#bib.bib150);
    Chen et al., [2017b](#bib.bib36); Hong and Yin, [2018](#bib.bib68); Perini, [2019](#bib.bib134);
    Reddy et al., [2016](#bib.bib145)) |'
  prefs: []
  type: TYPE_TB
- en: '| Stack-ed AE | Stack more than one AE after another | Perform slightly better
    than vanilla AE | Needs more resources than vanilla AE | Bearing vibration | (Tao
    et al., [2015](#bib.bib165); Roy et al., [2019](#bib.bib148); Galloway et al.,
    [2016](#bib.bib54)) |'
  prefs: []
  type: TYPE_TB
- en: '| SAE | AE constrained in training with sparsity to keeping neurons’ activations
    low | Same as AE plus prevent overfitting by forcing all neurons to learn | More
    complex networks and need more resources than vanilla AE | Bearing vibration,
    turbine vibration | (Lu et al., [2017](#bib.bib109); Chen et al., [2017a](#bib.bib35);
    Galloway et al., [2016](#bib.bib54); Ahmed et al., [2018](#bib.bib5)) |'
  prefs: []
  type: TYPE_TB
- en: '| DAE | AE designed for noisy data | Outperform vanilla AE with noisy data.
    Works slightly better stacking several DAEs | More complex networks and need more
    resources than vanilla AE; stacked DAE needs even more | Bearing vibration | (Lu
    et al., [2017](#bib.bib109); Xia et al., [2017](#bib.bib186)) |'
  prefs: []
  type: TYPE_TB
- en: '| Generative |'
  prefs: []
  type: TYPE_TB
- en: '| VAE | AE that maps input data to posterior distribution | Learns posterior
    distribution from noisy distribution, generating data non-deterministically |
    Difficulty on implementation. Loses temporal relations if input data are raw sensors
    data. | Ball screw, electrostatic coalescer, web traffic | (Wen and Gao, [2018](#bib.bib179);
    Lygren et al., [2019](#bib.bib112); Xu et al., [2018a](#bib.bib188)) |'
  prefs: []
  type: TYPE_TB
- en: '| GAN | Used for data augmentation and AD in 2 ways: using discriminator and
    using residuals | Good data augmentation with small imbalance ratio. AD outperform
    unsupervised SotA methods | Not working well with big imbalance ratio, complex
    and need more resources. Outperformed by simpler methods as CNN (Cabezas Rodríguez,
    [2019](#bib.bib25)) | Induction motor, bearing multisensor | (Cabezas Rodríguez,
    [2019](#bib.bib25); Lee et al., [2017](#bib.bib89)) |'
  prefs: []
  type: TYPE_TB
- en: '| One-Class Classifiers |'
  prefs: []
  type: TYPE_TB
- en: '| OC-NN | Train AE and freeze Encoder for OCC, similar to OC-SVM loss function
    | Automatic feature extraction | Slower than traditional OCCs. Extracted features
    are not focused on the problem | General AD | (Chalapathy et al., [2018](#bib.bib33))
    |'
  prefs: []
  type: TYPE_TB
- en: '| Recurrent Neural Networks |'
  prefs: []
  type: TYPE_TB
- en: '| Vani-lla RNN | Regression, AD tracking error between predicted and real behavior
    or HI difference. | Model temporal relationships of time-series data. Self-learning.
    | Suffers vanishing gradient problem; therefore cannot model medium and long-term
    dependencies. Need more resources than feedforward AE or CNN for training. | Activity
    recognition | (Arifoglu and Bouchachia, [2017](#bib.bib11)) |'
  prefs: []
  type: TYPE_TB
- en: '| LSTM | Same as vanilla RNN but changing neurons architecture to LSTMs | Same
    as vanilla RNN, however these can model longer time dependencies than vanilla
    | Even if handle better the vanishing gradient problem than vanilla, have difficulty
    on modelling long-term dependencies. Long training and computational requirements
    | Aircraft data, activity recognition | (Nanduri and Sherry, [2016](#bib.bib124);
    Guo et al., [2016b](#bib.bib61); Arifoglu and Bouchachia, [2017](#bib.bib11))
    |'
  prefs: []
  type: TYPE_TB
- en: '| GRU | Same as vanilla RNN but changing neurons architecture to GRUs | Same
    as LSTM plus easier to train | Same as LSTM but obtain a little worse results
    | Aircraft data, activity recognition | (Nanduri and Sherry, [2016](#bib.bib124);
    Arifoglu and Bouchachia, [2017](#bib.bib11)) |'
  prefs: []
  type: TYPE_TB
- en: 3.3\. Diagnosis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The diagnosis steps depends on the information and type of AD model used for
    the previous stage, given PdM is an incremental process where each stage is complemented
    by previous stages. In the case of multi-class classifier, the type of failure
    related to the detected anomaly is already known, which enables a straightforward
    diagnosis and comparison with historical data (Rad et al., [2011](#bib.bib141);
    Al-Raheem and Abdul-Karem, [2011](#bib.bib6)). Nonetheless, most PdM architectures
    implement binary classifier, one-class classifier or unsupervised models, which
    lack of failure type information. Therefore, these can only perform diagnosis
    by grouping the detected anomalies among them by similarity, which is done using
    clustering models (Xu et al., [2018b](#bib.bib187); Aytekin et al., [2018](#bib.bib13);
    Zong et al., [2018](#bib.bib213); Amarbayasgalan et al., [2018](#bib.bib7)) and
    SOM (Li et al., [2018b](#bib.bib96); Rustum and Forrest, [2018](#bib.bib149);
    Schwartz et al., [2020](#bib.bib154); Hao et al., [2017](#bib.bib64)). The features
    used for this stage are similar to the ones for AD, which can be based either
    on traditional or deep learning techniques.
  prefs: []
  type: TYPE_NORMAL
- en: 3.4\. Prognosis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The deep learning based models for PdM prognosis are focused on fitting a regression
    model to prognosticate either the remaining useful life (RUL) of the diagnosed
    failure or the health degradation when there is no historical data of that type.
    The RUL is commonly measured in time or number of cycles and the health degradation
    is tracked using anomaly deviation quantification by health indexes. The most
    common algorithms are summarised and compared in Table [4](#S3.T4 "Table 4 ‣ 3.4\.
    Prognosis ‣ 3\. Deep learning for predictive maintenance ‣ Deep learning models
    for predictive maintenance: a survey, comparison, challenges and prospect"). Their
    input can be the information generated in previous stages and traditional or deep
    learning features. There are many other algorithms that use DL features or traditional
    features combined with fully-connected network as last layer to perform prognosis,
    but these are presented in the combination Section 3.6, while this section focuses
    on the most common and simple SotA techniques that only use DL for prognosis.'
  prefs: []
  type: TYPE_NORMAL
- en: Table 4\. Summary of DL based prognosis works for PdM. Unsup and sup in algorithm
    column refer to unsupervised and supervised respectively.
  prefs: []
  type: TYPE_NORMAL
- en: '| Algo-rithm | How it works | Strengths | Limitations | Applica-tions | Ref
    |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Vanilla RNN Unsup and sup | Regression, predicting features’ and HI’s evolution
    or predicting remaining cycles or time. | Model temporal relationships of time-series
    data. Possibility of self-learning | Suffers vanishing gradient problem; therefore
    cannot model medium and long-term dependencies. High training and computational
    requirements | Aero engine | (Yuan et al., [2016](#bib.bib193)) |'
  prefs: []
  type: TYPE_TB
- en: '| LSTM Unsup and sup | Same as vanilla RNN but changing the neurons architecture
    to LSTMs | Same as vanilla RNN, however these can model longer time dependencies
    than vanilla. Outperform vanilla RNN | Even if handle better the vanishing gradient
    problem than vanilla, have difficulty on modelling long-term dependencies. High
    training and computational requirements | Aero engine, rolling bearing, lithium
    batteries | (Niu, [2017](#bib.bib127); Yuan et al., [2016](#bib.bib193); Zhang
    et al., [2019d](#bib.bib196), [2018](#bib.bib203)) |'
  prefs: []
  type: TYPE_TB
- en: '| GRU Unsup and sup | Same as vanilla RNN but changing the neurons architecture
    to GRUs | Same as LSTM plus easier to train | Same as LSTM but obtain a little
    worse results | Aero engine, lithium batteries | (Yuan et al., [2016](#bib.bib193))
    |'
  prefs: []
  type: TYPE_TB
- en: 3.5\. Mitigation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The research methodology followed to create the current publication, showed
    no DL-based mitigation publications. Several possible reasons for this fact are
    described bellow. The majority of DL works are focused on optimising a single
    performance metric for the ML task to be solved, like maximising accuracy or F1
    score on classification, and minimising errors like MAE or RMSE on regressions.
    These works’ solutions are usually compared in simulated reference datasets, looking
    for the architecture that outperforms the rest on the aforementioned metrics.
    Nonetheless, deep learning models are the hardest ML type to understand given
    their higher complexity that makes them more accurate at modelling high dimensionality
    complex data, and therefore they fail to meet the industrial explanation facility
    requirement.
  prefs: []
  type: TYPE_NORMAL
- en: In order to address this problem, they should provide mitigation advice or at
    least explanations about the reasons for making predictions, which could be supported
    on the emerging field explainable artificial intelligence (XAI). Furthermore,
    the final and most ambitious step in this PdM stage should be the automatising
    of recommendations for domain technicians to integrate PdM in the maintenance
    plan, by optimising industrial maintenance process via maintenance operation management.
    Finally, the reasons for existing few real application publications are presented
    bellow. Industrial companies avoid publishing their data or implementation details
    to protect their intellectual property and know-how from competence. Moreover,
    many data-driven research publications lack of domain technician feedback so they
    tackle the problem only relying on data-driven techniques, without embracing domain
    knowledge.
  prefs: []
  type: TYPE_NORMAL
- en: 3.6\. Combination of models and remarkable works
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The DL techniques already presented throughout current section are the basic
    elements and architectures used for PdM. It is worth highlighting there are infinite
    possible architectures by combining these techniques among them, or used together
    with other data-driven or expert-knowledge based techniques. The combination and
    adaptation of models for the problem being addressed results into more accurate
    models that fulfil its requirements. Table [5](#S3.T5 "Table 5 ‣ 3.6\. Combination
    of models and remarkable works ‣ 3\. Deep learning for predictive maintenance
    ‣ Deep learning models for predictive maintenance: a survey, comparison, challenges
    and prospect") summarises how these models are commonly combined in SotA architectures,
    presenting their strengths and limitations.'
  prefs: []
  type: TYPE_NORMAL
- en: Table 5\. Possible combination of deep learning techniques for PdM architectures.
  prefs: []
  type: TYPE_NORMAL
- en: '| Algorithm | How they work | Strengths | Limitations |'
  prefs: []
  type: TYPE_TB
- en: '| Traditional and DL features combined with DL models |'
  prefs: []
  type: TYPE_TB
- en: '| Traditional and DL-based FE with AE | Combine traditional and DL FE methods
    with already presented autoencoder architectures in the same model | Outperform
    traditional ML and simple DL architectures. No need of handcrafted features. Automatic
    FE. Can model time-series dependencies using CNN, LSTM and GRU by context extraction
    | Understanding deep features is not straightforward. Slower and more complex
    than simple ANN models |'
  prefs: []
  type: TYPE_TB
- en: '| Traditional and DL-based FE with DBN | DL and traditional FE methods with
    DBN stacked to other models | Same as above | Same as above |'
  prefs: []
  type: TYPE_TB
- en: '| Hybrid: combination of features and models |'
  prefs: []
  type: TYPE_TB
- en: '| DL FE techniques combination | Combine CNN, LSTM, other DL FE techniques
    and traditional features to extract more complex features | Automatic dimension
    reduction. Outperform other FE techniques. Model temporal relations and neighbors.
    With bidirectional RNNs, future context is available | More complex and need more
    resources than traditional ML and simple DL models. Bidirectional RNN cannot be
    done online |'
  prefs: []
  type: TYPE_TB
- en: Moreover, Table LABEL:tab:combination_DL_alg_for_PdM_relevant_works_summary
    contains relevant works of the aforementioned types, which merge traditional FE
    or deep learning FE with traditional data-driven or deep learning models. This
    collection of works shows that combination of techniques can address all PdM stages
    using supervised or unsupervised approaches.
  prefs: []
  type: TYPE_NORMAL
- en: 'Table 6\. Combination of deep learning techniques for PdM: relevant works summary.'
  prefs: []
  type: TYPE_NORMAL
- en: '| Architecture | How it works | Strengths | Limitations | Applications and
    refs |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Autoencoders |'
  prefs: []
  type: TYPE_TB
- en: '| AE with extreme learning machine (ELM). | Unsupervised AD tracking error
    of ELM for OCC, trained with normal data. | Two steps training. Easy to train.
    | Unable to model non-linear or complex relations in ELM. | Power plant (Michau
    et al., [2020](#bib.bib119)), machine lifetime estimation (Bose et al., [2019](#bib.bib21)).
    |'
  prefs: []
  type: TYPE_TB
- en: '| Stacked SAE | Unsupervised FE adding noise | No need of preprocessing. Robust
    to noise. Severity identification. | Difficult optimisation of deep architecture
    | Rolling bearing (Chen et al., [2017a](#bib.bib35)) |'
  prefs: []
  type: TYPE_TB
- en: '| Stacked CNN-based AE | Unsupervised FE modelling temporal relations in sliding
    window | Model temporality using neighbours. | Only short temporal relations |
    Gearbox vibration (Cabrera et al., [2017](#bib.bib26)) |'
  prefs: []
  type: TYPE_TB
- en: '| AE with LSTM | Unsupervised FE modelling temporal relations | Model temporality
    | Higher computational requirements | Aviation (Huang et al., [2019](#bib.bib69)),
    turbofan and milling machine (Malhotra et al., [2016](#bib.bib114)), solar energy,
    electrocardiogram (Pereira, [2018](#bib.bib133)) and manufacturing (Lindemann
    et al., [2019](#bib.bib101)) |'
  prefs: []
  type: TYPE_TB
- en: '| VAE with RNN, GRU or LSTM | Unsupervised generative FE modelling temporal
    relations and reducing to latent gaussian distribution | Model temporality. Regularised
    latent space | High computational requirements | Motor vibration(Huang et al.,
    [2019](#bib.bib69)), turbofan (Yoon et al., [2017](#bib.bib191)), sensors (Zhang
    and Chen, [2019](#bib.bib197)) |'
  prefs: []
  type: TYPE_TB
- en: '|   |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '|   |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Restricted boltzmann machines and deep belief networks |'
  prefs: []
  type: TYPE_TB
- en: '| DBN | Unsupervised FE by hierarchical representations | Fault classification
    from frequency distribution | Need preprocessing. Tendency to overfitting. Not
    modelling temporal relations | Induction motors fault simulator (Shao et al.,
    [2017b](#bib.bib159)) |'
  prefs: []
  type: TYPE_TB
- en: '| Regularised RBM + SOM + RUL | Probabilty modelling, health assesment and
    RUL prognosis using distance | RBM regularisation improve FE for RUL | Single
    RBM, can be improved by multiple of these layers. | Rotating systems (Liao et al.,
    [2016](#bib.bib98)) |'
  prefs: []
  type: TYPE_TB
- en: '| Image generation + DBN + MLP/FDA/SOM | Supervised or unsupervised FE modelling
    from vibration image data | Model temporality in an image. Combine with image
    processing methods | Difficulty on extracting clusters’ meaning, relying on domain
    knowledge. | Journal bearing (Oh et al., [2018](#bib.bib128)) |'
  prefs: []
  type: TYPE_TB
- en: '|   |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '|   |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Hybrid: combination of features and models |'
  prefs: []
  type: TYPE_TB
- en: '| Bidirectional LSTM | Unsupervised FE modelling temporal relations | Health
    estimation and then RUL mapping. More robust. Future context is available. | Need
    all signal to be processed: no streaming. More complex than simple LSTM. | Turbofan
    (Elsheikh et al., [2019](#bib.bib51)) |'
  prefs: []
  type: TYPE_TB
- en: '| AE + Convolutional DBN + exponential moving average (EMA) | Unsupervised
    probability modelling by automatic FE, modelling temporal relations. Training
    in steps | Model temporality. More stable than traditional ML and simple DL. Each
    model complement others weaknesses | Each part trained independently, not for
    problem. EMA only model shorter term temporal relations. | Electric locomotive
    bearing fault (Shao et al., [2018](#bib.bib157)) |'
  prefs: []
  type: TYPE_TB
- en: '| CNN and bidirectional LSTM based AE + fully connected + linear regression
    | Unsupervised FE modelling temporal relations | Raw sensor data modelling. Model
    long-term temporal dependencies | Sliding window needs complete window. Higher
    complexity combining DL techniques | Milling machine (Zhao et al., [2017b](#bib.bib208))
    |'
  prefs: []
  type: TYPE_TB
- en: '| Traditional FE + bidirectional GRU combined with ML models | Unsupervised
    FE modelling temporal relations | Same as above | Same as above | Aviation bearing
    fault detection, gear fault diagnosis and tool wear prediction (Wang et al., [2017c](#bib.bib175))
    |'
  prefs: []
  type: TYPE_TB
- en: The rest of this subsection summarises the contributions and strengths of relevant
    analysed works. One interesting article was published by Shao et al. (Shao et al.,
    [2017a](#bib.bib158)), where a methodology of AE optimisation for rotating machinery
    fault diagnosis is presented. Firstly, they create a new loss function based on
    maximum correntropy to enhance feature learning. Secondly, they optimise model’s
    key parameters to adapt it to signal features. This model is applied to fault
    diagnosis of gearbox and roller bearing. Another relevant publication is by Lu
    et al. who use growing SOM (Lu et al., [2018](#bib.bib108)), a extension of SOM
    algorithm that does not need specification of map dimension. It has been applied
    to simulated test cases with application in PdM.
  prefs: []
  type: TYPE_NORMAL
- en: Guo et al. (Guo et al., [2016b](#bib.bib61)) propose a model based on LSTM and
    EWMA control chart for change point detection that is suitable for online training.
    An additional interesting work is presented by Lejon et al. (Lejon et al., [2018](#bib.bib90)),
    who use ML techniques to detect anomalies in hot stamping machine by non-ML experts.
    They aim to detect anomalous strokes, where the machine is not working properly.
    They present the problem that most of the collected data corresponds to press
    strokes of products without defects and that all the data is unlabelled. This
    data comes from sensors that measure pressures, positions and temperature. The
    algorithms they benchmarked are AE, OCSVM and IF, where AE outperforms the rest
    achieving the least number of false positive instances. As the authors conclude,
    the obtained results show the potential of ML in this field in transient and non-stationary
    signals when fault characteristics are unknown, adding that AEs fulfill the requirements
    of low implementation cost and close to real-time operation that will lead to
    more informed and effective decisions.
  prefs: []
  type: TYPE_NORMAL
- en: As previously mentioned in this article, the possibility of model combination
    is infinite. For instance, Li et al. in the work (Luo et al., [2018](#bib.bib111))
    combine a GAN structure with LSTM neurons, two widely used DL techniques that
    achieve SotA results. Additionally, DL techniques can be combined with other computing
    techniques as Unal et al. do in (Unal et al., [2014](#bib.bib168)), combining
    a feed forward network with Genetic Algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: 'The last highlighted article that combines DL models is by Zhang et al. (Zhang
    et al., [2019b](#bib.bib200)), one of the most complete unsupervised PdM works.
    They build a model that uses correlation of sensor signals in the form of signature
    matrices as input that is fed into an AE that uses CNN and LSTM with attention
    for AD, partial RCA and RUL. The strengths of this work are the following: they
    show that correlation is a good descriptor for time-series signals, attention
    mechanism using LSTMs gives temporal context and the use of anomaly score as HI
    is useful for RCA, mapping the detected failures to the input sensors that originate
    them. Conversely, the RCA they do is not complete since they only correlate failures
    to input sensors but are not able to link them to physical meaning. Moreover,
    the lack of pooling layers together with the combination of DL techniques results
    in a complex model that is computationally expensive, needs more time and data
    for training and its decisions are hard to explain.'
  prefs: []
  type: TYPE_NORMAL
- en: The following publications use other ML tasks combined with DL models for PdM,
    and other DL techniques. Wen et al. (Wen et al., [2019](#bib.bib180)) use transfer
    learning with a SAE for motor vibration AD, outperforming DBNs. The article by
    Wen et al. (Wen and Keyes, [2019](#bib.bib181)) proposes a transfer learning based
    framework inspired in U-Net that is pretrained with univariate time-series synthetic
    data. The aim of this network is to be adaptable to other univariate or multivariate
    anomaly detection problems by fine-tuning.
  prefs: []
  type: TYPE_NORMAL
- en: Martinez et al. (Martínez-Arellano and Ratchev, [2019](#bib.bib116)) present
    a bayesian and CNN based DL classifier for AD. They first use a small labelled
    dataset to train the model. Then, the model is used to classify the remaining
    data and then, it uses uncertainty modelling to analyse the observations that
    cannot be correctly classified due to high entropy. Finally, it selects the top
    100 with highest entropy to query an domain knowledge technician, asking him/her
    to label them in order to retrain the model with this new data. This procedure
    is followed until the model obtains a good accuracy. This work is an example of
    how to use two interesting techniques in the field of PdM to address the problem
    of lacking labelled data by querying domain technicians, showing them the instances
    from which the model can learn the most. Concretely, the aforementioned techniques
    belong to semi-supervised classification type using active learning. Similarly,
    the review by Khan et al. (Khan and Yairi, [2018](#bib.bib76)) mentions that expert
    knowledge can help troubleshooting the model and, if domain technicians are available,
    the model could learn from them using a ML training technique called active learning
    where the model queries them in the learning stage. Moreover, Kateris et al. present
    the work (Kateris et al., [2014](#bib.bib75)) where they use SOM as OCC model
    for AD together with active learning, to progressively learn different stages
    of faults.
  prefs: []
  type: TYPE_NORMAL
- en: Another interesting technique with PdM applications is deep reinforcement learning.
    The publication by Zhang et al. (Zhang et al., [2019a](#bib.bib198)) uses it for
    HI learning, outperforming feed-forward networks but underperforming CNN and LSTM
    for AD and RUL. This technique consists of transferring the knowledge adquired
    from one dataset to another one. The procedure consists of reusing a part or the
    whole pretrained model adapting it to new’s requirements, which sometimes requires
    retraining the model but this needs less data and time.
  prefs: []
  type: TYPE_NORMAL
- en: 3.7\. Related review works summary
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This subsection summarises the most relevant information of the review works
    related to this survey, highlighting their main contributions, detected challenges
    and gaps in the SotA works and their conclusions.
  prefs: []
  type: TYPE_NORMAL
- en: 'The survey by Chalapathy and Chawla (Chalapathy and Chawla, [2019](#bib.bib32))
    analyses the SotA DL approaches to address anomaly detection. The work by Rieger
    et al. (Rieger et al., [2019](#bib.bib146)) makes a qualitative review on the
    SotA fast DL models applied for PdM in industrial internet of things (IIoT) environments.
    They argue that real-time processing is essential for IoT applications, meaning
    that a high latency system can lead to unintentional reactive maintenance due
    to insufficient time to plan maintenance. Moreover, they highlight how DL models
    can be optimised. They state that weight-sharing on RNNs enables parallel learning,
    which can help learning these type of nets that achieve SotA results in most PdM
    applications. Accordingly, they also justify the use of max-pooling layers when
    dealing with CNNs to eliminate redundant processing and thus optimise them. There
    are two DL reviews applied to fields that can be extrapolated to PdM: DL models
    for time series classification by Fawaz et al. (Ismail Fawaz et al., [2019](#bib.bib71))
    and DL to model sensor data (Wang et al., [2019b](#bib.bib174)).'
  prefs: []
  type: TYPE_NORMAL
- en: The review by Zhao et al. (Zhao et al., [2019](#bib.bib207)) explains there
    are algorithms that use traditional and hand-crafted features whereas others use
    DL features for the problem, and presents the most common FE methods for DL based
    PdM systems. They state that both aforementioned features work properly in DL
    models, supported on their SotA revision. Many of these works use techniques to
    boost model performance as data-augmentation, model design and optimisation for
    the problem, adopting architectures that already work in the SotA. They also adapt
    the learning function and apply regularisations and tweak the number of neurons,
    connections, apply transfer learning or stack models in order to enhance model
    generalisation and prevent overfitting. The advantage of traditional and hand-crafted
    features is they are not problem specific, being applicable to other problems.
    Moreover, they are easy to understand by expert-knowledge technicians given that
    they are based on mathematical equations. However, as they are not problem specific,
    in some cases DL-based FE techniques perform better since these are learned specifically
    for the problem and directly from the data. However, they are not as intuitive
    as aforementioned features, meaning that technicians can have problems trying
    to understand how they work.
  prefs: []
  type: TYPE_NORMAL
- en: 'The article by Zhao et al. (Zhao et al., [2019](#bib.bib207)) also summarises
    the information already stated throughout this survey: DL models can achieve SotA
    results, pre-training in AEs can boost their performance, denoising models are
    beneficial for PdM because of the nature of sensor data and that CNN and LSTM
    variants can achieve SotA results in the field of PdM using model-optimisation,
    depending on the dataset’s scale. In addition, domain knowledge can help in FE
    and model optimisation. Conversely, it is difficult to understand DL models even
    if there are some visualisation techniques because they are black-box models.
    Transfer learning could be used when having little training data, and PdM belongs
    to a imbalaced class problem because faulty data is scarce or missing.'
  prefs: []
  type: TYPE_NORMAL
- en: The survey by Zhang et al. (Zhang et al., [2019c](#bib.bib201)) compares the
    accuracy obtained by ANN, Deep ANN and AE in different datasets, which allows
    comparisons, however these comparisons are done with models applied to different
    datasets and therefore they are not fair. Nonetheless, they show high accuracy
    results, most of them between 95% and 100%, emphasising that DL models can obtain
    promising results. They state that deeper models and higher dimensional feature
    vectors result in higher accuracy models but sufficient data is needed. With the
    increase of computational power and data growth in the field of PdM, research
    on this area tends to focus on data-driven techniques and specifically DL models.
    However, DL models lack of the explainability and interpretability of taken decisions.
  prefs: []
  type: TYPE_NORMAL
- en: The review by Khan et al. (Khan and Yairi, [2018](#bib.bib76)) states that the
    developed DL architectures are application or equipment specific and therefore
    there is no clear way to select, design or implement those architectures; the
    researches do not tend to justify the decision of selecting one architecture over
    another that also works for the problem, for instance selecting CNN versus LSTM
    for RUL. Its authors also argue that SotA algorithms as the ones presented throughout
    this section all have shown to be working correctly and are not different from
    one another.
  prefs: []
  type: TYPE_NORMAL
- en: Even if this section has been focused on DL models for PdM, we have seen that
    they are often integrated with traditional models and/or traditionally FE features,
    such as time and frequency domains, feature extraction based on expert knowledge
    or mathematical equations.
  prefs: []
  type: TYPE_NORMAL
- en: 'As the authors Khan et al. state in (Khan and Yairi, [2018](#bib.bib76)), there
    is a lack of understanding of a problem when building DL models. They also argue
    that VAE is ideal for modelling complex systems, achieving high prediction accuracy
    without health status information. The algorithms that analyse the data maintaining
    its time-series relationship by analysing the variables together, at the same
    time, are the most successful: no matter if using sliding window, CNN or LSTM
    techniques. Most of SotA algorithms focus on AD, whereas they can also be adapted
    to perform RUL by a regression or RNN, where the majority use LSTMs. Regressions
    commonly use features learned for the used AD models, or even use traditional
    and hand-crafted features. Generative models like GAN do not work as good as expected.
    However, CNN works well while needing less data and computing effort. This means
    that even DL models can achieve similar accuracy using traditional features or
    deep features extracted from the data unsupervisedly.'
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Comparison of state-of-the-art results
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 4.1\. Benchmark datasets
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The review made by Khan et al. (Khan and Yairi, [2018](#bib.bib76)) states that
    one of the problems of PdM proposals is the lack of benchmarking among them. There
    are some public PdM databases among the prognosis datasets released by the Nasa
    (NASA, [2020](#bib.bib125)) belonging to the scope of predictive maintenance,
    which are presented in the following paragraphs.
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Milling dataset (NASA, [2020](#bib.bib125)) gathers acoustic emission, vibration
    and current sensor data under different operating conditions with the purpose
    of analysing the wear of the milling insert. Regarding PdM stages, it allows the
    application of AD, RCA and RUL.
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Bearing dataset (NASA, [2020](#bib.bib125)) gathers vibration data from
    4 accelerometers that monitor bearings under constant pressure until failure,
    obtaining a run-to-failure dataset where all failures occur after exceeding their
    design life of 100 million revolutions. Its possible PdM applications are AD and
    RUL estimation.
  prefs: []
  type: TYPE_NORMAL
- en: 6\. Turbofan engine degradation simulation dataset (NASA, [2020](#bib.bib125))
    contains run-to-failure data from engine sensors. Each instance starts at a random
    point of engine life where it works correctly, and monitors its evolution until
    an anomaly happens and afterwards reaches the failure state. The engines are working
    under different operational conditions and develop different failure modes. Its
    possible PdM applications are AD, RCA and RUL.
  prefs: []
  type: TYPE_NORMAL
- en: 10\. Femto bearing dataset (NASA, [2020](#bib.bib125)) is a bearing monitoring
    dataset inside the Pronostia competition that contains run-to-failure and sudden
    failure data. The used sensors are thermocouples gathering temperature data and
    accelerometers that monitor vibrations in the horizontal and vertical axis. Its
    possible PdM applications are AD, RCA and RUL.
  prefs: []
  type: TYPE_NORMAL
- en: Industrial companies are reluctant to publish their own datasets because they
    tend to trade secret their data and knowledge in order to protect themselves from
    their competence. The dataset that approximates most to companies data is the
    one published by Semeion research center named Steel plates faults dataset (Lichman,
    [2013](#bib.bib100)), where steel plate faults are classified into 7 categories.
  prefs: []
  type: TYPE_NORMAL
- en: 4.2\. Data-driven technique’s results comparison
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This subsection compares different relevant data-driven works for PdM application
    turbofan dataset introduced in previous subsection, which is generated using the
    Commercial modular aero-propulsion system simulation (C-MAPPS). The reasons for
    choosing this dataset are that it is one of the reference datasets of PdM, it
    enables the application of all PdM steps and it is one of the most used dataset
    for model ranking.
  prefs: []
  type: TYPE_NORMAL
- en: The dataset lacks of the RUL label, which is the target column. Hence, many
    works assume it to be constant in the initial period of time where the system
    works in correct conditions and degrades linearly after exceeding the changepoint
    or initial anomalous point. The constant value in initial period is a parameter
    denominated as $R_{max}$, which is set to values near 130 for many state-of-the-art
    works, enabling a fair comparison of their results.
  prefs: []
  type: TYPE_NORMAL
- en: 'The most common metrics to evaluate models’ performance are the following ones
    (Babu et al., [2016](#bib.bib14)): root mean square error (RMSE) in Equation [1](#S4.E1
    "In 4.2\. Data-driven technique’s results comparison ‣ 4\. Comparison of state-of-the-art
    results ‣ Deep learning models for predictive maintenance: a survey, comparison,
    challenges and prospect"), and score function that penalises late predictions
    in Equation [2](#S4.E2 "In 4.2\. Data-driven technique’s results comparison ‣
    4\. Comparison of state-of-the-art results ‣ Deep learning models for predictive
    maintenance: a survey, comparison, challenges and prospect"), which was used in
    the PHM 2008 data challenge (Saxena et al., [2008](#bib.bib152)). In previous
    equations, $N$ is the number of engines in test set, S is the computed $score$,
    and $h=(EstimatedRUL-TrueRUL)$. Table [7](#S4.T7 "Table 7 ‣ 4.2\. Data-driven
    technique’s results comparison ‣ 4\. Comparison of state-of-the-art results ‣
    Deep learning models for predictive maintenance: a survey, comparison, challenges
    and prospect") gathers state-of-the-art results for the last years on the four
    subsets of the dataset.'
  prefs: []
  type: TYPE_NORMAL
- en: '| (1) |  | $\displaystyle RMSE=\sqrt{\frac{1}{N}\sum_{i=1}^{N}h_{i}^{2}}$ |  |'
  prefs: []
  type: TYPE_TB
- en: '| (2) |  | $\displaystyle S=\left\{\begin{array}[]{cc}\sum\nolimits_{i=1}^{N}\left(e^{-\frac{h_{i}}{13}}-1\right)&amp;{}for~{}~{}h_{i}<0\\
    \sum\nolimits_{i=1}^{N}\left(e^{\frac{h_{i}}{10}}-1\right)&amp;{}for~{}~{}h_{i}\geq
    0\end{array}\right.$ |  |'
  prefs: []
  type: TYPE_TB
- en: Table 7\. State-of-the-art results on four turbofan dataset subsets since 2014\.
    The lower the metric, the better the model is considered to perform on average.
    Best results are highlighted in bold.
  prefs: []
  type: TYPE_NORMAL
- en: '| Reference | Year | $R_{max}$ | Architecture | FD001 RMSE | FD002 RMSE | FD003
    RMSE | FD004 RMSE | FD001 Score | FD002 Score | FD003 Score | FD004 Score |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Ramasso et al. (Ramasso and Saxena, [2014](#bib.bib144)) | 2014 | 135 | RULCLIPPER
    | 13.3 | 22.9 | 16.0 | 24.3 | 216 | 2796 | 317 | 3132 |'
  prefs: []
  type: TYPE_TB
- en: '| Babu et al. (Babu et al., [2016](#bib.bib14)) | 2016 | 130 | MLP | 37.6 |
    80.0 | 37.4 | 77.4 | 17972 | 7802800 | 17409 | 5616600 |'
  prefs: []
  type: TYPE_TB
- en: '| SVR | 21.0 | 42.0 | 21.0 | 45.3 | 1381 | 589900 | 1598 | 371140 |'
  prefs: []
  type: TYPE_TB
- en: '| RVR | 23.8 | 31.3 | 22.4 | 34.3 | 1504 | 17423 | 1431 | 26509 |'
  prefs: []
  type: TYPE_TB
- en: '| DCNN | 18.4 | 30.3 | 19.8 | 29.2 | 1287 | 13570 | 1596 | 7886 |'
  prefs: []
  type: TYPE_TB
- en: '| Zhang et al. (Zhang et al., [2017](#bib.bib199)) | 2017 | 130 | MODBNE |
    15.0 | 25.1 | 12.5 | 28.7 | 334 | 5585 | 422 | 6558 |'
  prefs: []
  type: TYPE_TB
- en: '| Zheng et al. (Zheng et al., [2017](#bib.bib210)) | 2017 | 130 | LSTM + FFNN
    | 16.1 | 24.5 | 16.2 | 28.2 | 338 | 4450 | 852 | 5550 |'
  prefs: []
  type: TYPE_TB
- en: '| Li et al. (Li et al., [2018a](#bib.bib94)) | 2018 | 125 | CNN + FFNN | 12.6
    | 22.4 | 12.6 | 23.3 | 273 | 10412 | 284 | 12466 |'
  prefs: []
  type: TYPE_TB
- en: '| Ellefsen et al. (Listou Ellefsen et al., [2019](#bib.bib102)) | 2019 | 115-135
    | RBM + LSTM | 12.6 | 22.7 | 12.1 | 22.7 | 231 | 3366 | 251 | 2840 |'
  prefs: []
  type: TYPE_TB
- en: '| Da Costa et al. (Kakati et al., [2019](#bib.bib73)) | 2019 | 125 | LSTM+attention
    | 14.0 | 17.7 | 12.7 | 20.2 | 320 | 2102 | 223 | 3100 |'
  prefs: []
  type: TYPE_TB
- en: 'Results comparison of Table [7](#S4.T7 "Table 7 ‣ 4.2\. Data-driven technique’s
    results comparison ‣ 4\. Comparison of state-of-the-art results ‣ Deep learning
    models for predictive maintenance: a survey, comparison, challenges and prospect")
    does not show only model’s performance, but also the combination of preprocessing
    and feature engineering techniques. Therefore, results show the performance of
    the whole data process applied to the dataset until prediction. Nonetheless, the
    table shows that deep learning based architectures are the ones that achieve state-of-the-art
    results in recent years. Concretely, these architectures are composed of combination
    of different DL techniques.'
  prefs: []
  type: TYPE_NORMAL
- en: 5\. Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This section analyses deep learning architectures’ suitability in the field
    of PdM. It is the result of comparing reviewed articles’ trends, results and conclusions
    with PdM data characteristics and industrial requirements.
  prefs: []
  type: TYPE_NORMAL
- en: 5.1\. Comparison and suitability of deep learning in predictive maintenance
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Physical and knowledge-based models for PdM were widely used 15 years ago but
    they are less common nowadays due to the difficulty or impossibility of modelling
    complex systems. In fact, data-driven statistical and machine learning publications
    started to gain popularity in this field since they learn system’s behaviour from
    the data directly and therefore needed little domain knowledge. Conversely, in
    later years, due to the emergence of I4.0, the increment of computational power
    and the automatising of machine and asset data collection, the data-driven publication
    trend has moved towards deep learning based schemes.
  prefs: []
  type: TYPE_NORMAL
- en: There are several reasons for deep learning being a hot research topic in predictive
    maintenance field. They usually achieve higher accuracy than traditional data-driven
    techniques. They can dispense with expert knowledge feature engineering given
    their capacity of extracting automatic features for the problem being addressed.
    In addition, they can model time-series data using attention or time context.
    The application of DL models is also widely researched in other fields such as
    image processing and seq2seq. Nonetheless, their two major drawbacks are high
    training data requirements and difficulty on model explainability. Conversely,
    these models must be modified and adapted for industrial and PdM data characteristics
    and requirements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Therefore, the model type choice for PdM application should be done carefully,
    after analysing each use case’s needs. Maybe, its requirements are not satisfied
    by that moment’s machine learning research trend, which is currently deep learning,
    and other type of models are more appropriate. For instance, statistical, machine
    learning and deep learning models have their own peculiarities. They are all able
    to fulfill the following PdM desirable characteristics from the list (Venkatasubramanian
    et al., [2003](#bib.bib170)) by creating specific architectures: quick detection
    and diagnosis, isolability, novelty identifiability, classification error estimation,
    adaptability, and real-time computation and multiple fault identifiability. However,
    the main differences among these type of models are summarised in Table [8](#S5.T8
    "Table 8 ‣ 5.1\. Comparison and suitability of deep learning in predictive maintenance
    ‣ 5\. Discussion ‣ Deep learning models for predictive maintenance: a survey,
    comparison, challenges and prospect"). Hence, the election of one group over the
    rest and even deciding the final architecture requires a thorough analysis and
    comparison to determine the one that suits both: use case and its data requirements.'
  prefs: []
  type: TYPE_NORMAL
- en: Table 8\. Differences of statistical, machine learning and deep learning architectures
    for predictive maintenance.
  prefs: []
  type: TYPE_NORMAL
- en: '| Characteristic | Statistical | Machine learning | Deep learning |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Amount of data for training | Small | Medium | High |'
  prefs: []
  type: TYPE_TB
- en: '| Training time | Small | Medium | High |'
  prefs: []
  type: TYPE_TB
- en: '| Complexity | Small | Medium | High |'
  prefs: []
  type: TYPE_TB
- en: '| Explanation facility | High | Medium (grey models) | Low |'
  prefs: []
  type: TYPE_TB
- en: '| Low (blackbox models) |'
  prefs: []
  type: TYPE_TB
- en: '| Accuracy | Low | Medium | High |'
  prefs: []
  type: TYPE_TB
- en: 'In the end, most deep learning architectures are either based on traditional
    data-driven concepts or are combined with them in order to fill their gaps. Therefore,
    DL models could be a piece inside a PdM architecture that combines other kind
    of models presented in Table [8](#S5.T8 "Table 8 ‣ 5.1\. Comparison and suitability
    of deep learning in predictive maintenance ‣ 5\. Discussion ‣ Deep learning models
    for predictive maintenance: a survey, comparison, challenges and prospect"). This
    could compensate the drawback of some models with others by a fusion that meets
    PdM needs better.'
  prefs: []
  type: TYPE_NORMAL
- en: 5.2\. Automatic development of deep learning models for predictive maintenance
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Even though deep learning models can achieve SotA results in PdM datasets,
    their design, development and optimisation relies on publications, data scientists
    previous knowledge and trial and error testing. These are some of their biggest
    challenges: architecture type and structure choice, number of hidden layers and
    neurons, activation functions, regularisation terms to prevent overfitting and
    learning parameters optimisation.'
  prefs: []
  type: TYPE_NORMAL
- en: For the above-stated reasons, the whole process of DL model creation is not
    as automatic as believed. Moreover, in order to obtain competitive results, many
    authors preprocess and feature engineer the raw EOC signals. This can boost model
    performance but at the same time remove relevant information that could be learnt
    automatically using more complex architectures. In addition, these steps are commonly
    performed by data scientists. Usually, domain knowledge is not embedded, so models
    are expected to learn all the non-linear relations from the data. Conversely,
    this information could help in architecture’s dimensionality reduction, resulting
    in simpler, more accurate and as a result explainable models. Other byproduct
    benefits are less training data requirements, less training time and higher generalisation
    to avoiding overfitting.
  prefs: []
  type: TYPE_NORMAL
- en: 5.3\. Application of deep learning research in industrial processes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There are many works that apply deep learning for predictive maintenance in
    the literature. Most SotA deep learning techniques tackle PdM unsupervisedly given
    the difficulty to obtain failure data in industrial companies. This is the reason
    for AEs, RBMs and generative models having so much repercussion in the field.
    The following paragraphs summarise common techniques and how they meet industrial
    requirements.
  prefs: []
  type: TYPE_NORMAL
- en: Regarding SotA, there are many DL proposals for AD and RUL. Most of them tend
    to combine different algorithms to create a more complex model that contains advantages
    of the techniques that compromise it. The most common combination for PdM sensor
    modelling in unsupervised way is CNNs with LSTMs in an AE or derived architecture.
    Similarly, supervised approaches usually use CNNs and LSTMs in a ANN that outputs
    probability of failure types or regressions. However, techniques fusion augments
    model complexity.
  prefs: []
  type: TYPE_NORMAL
- en: Regarding the diagnosis step, it is easy to perform RCA with supervised models
    given that, when the training data contains the label, failure or not or even
    the type of failure, the model can directly map the new data with the corresponding
    failure type automatically. However, in companies that lack this type of data,
    they can only model normality by OCC models or even use unsupervised approach
    to model unlabelled data. There is a gap in these latter models since they are
    unable to perform complete RCA given the impossibility to classify unspecified
    failure types. One underlying reason could be the lack of collaboration between
    data scientists and expert-knowledge technicians. Therefore, this gap could be
    filled by applying explainable artificial intelligence (XAI) techniques to facilitate
    the communication, understanding and guidance of DL models. XAI is a promising
    emergent field with few publications in the field of PdM.
  prefs: []
  type: TYPE_NORMAL
- en: 'Deep learning models also fail to propose mitigation actions since, as mentioned
    before, they should work together with domain technicians knowledge and many works
    do not, tackling the problem in a purely data-scientific way and forgetting about
    the underlying process working knowledge. For this reason, even if many models
    are accurate, they can not meet industrial and real PdM requirements. They present
    complex schemes with many hidden layers even if Venkatasubramanian et al. (Venkatasubramanian
    et al., [2003](#bib.bib170)) state that understandability is one desired characteristic
    for PdM models. Without it, industrial companies may not deploy a deep learning
    models to production as domain technicians would be unable to understand their
    predictions and therefore trust them. Once again, the application of XAI techniques
    together with expert knowledge could overcome the problem by enabling to: understand
    the predictions, map detected failures to real physical root cause and even propose
    mitigation actions giving data-driven advice to help in maintenance management
    (MM) and manufacturing operation management (MOM) decision making.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The majority of reviewed works were created and tested in research environments
    but not transferred or tested in industrial companies. Even if there are some
    models trained with real industrial process data, the majority use reference datasets
    that have been preprocessed and specifically prepared for the task, such as the
    ones presented in Section [4](#S4 "4\. Comparison of state-of-the-art results
    ‣ Deep learning models for predictive maintenance: a survey, comparison, challenges
    and prospect") that are generated in simulation or testing environments. However
    these are unable to adapt to industrial companies’ requirements presented by Venkatasubramanian
    et al. in article (Venkatasubramanian et al., [2003](#bib.bib170)) that still
    prevail nowadays. Lejon et al. in the work (Lejon et al., [2018](#bib.bib90))
    consolidate the aforementioned needs by stating that industrial data is unlabelled
    and mostly correspond to non-anomalous process conditions. With regard to PdM
    architectures, the work by Khan et al. (Khan and Yairi, [2018](#bib.bib76)) seems
    to be the one that summarises and could better fit the requirements of the companies,
    even though it lacks of specification on how to address PdM in real companies.'
  prefs: []
  type: TYPE_NORMAL
- en: All in all, we have seen that industrial companies need PdM models to be accurate,
    easy to understand, process data on streaming and adapted to process data characteristics.
    Their data is mostly collected in unsupervised way, or only non-failure data is
    available. Moreover, it is collected under different EOC. Conversely, there is
    a gap in the published data-driven models because available unsupervised and OCC
    proposals are unable to link novel detected failures to their physical meaning.
    The main reason is that these models ignore expert knowledge. In addition, there
    are few research publications on the application of XAI techniques in PdM, which
    could provide solutions for the main presented gaps.
  prefs: []
  type: TYPE_NORMAL
- en: 6\. Conclusions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The majority of industrial companies that rely on corrective and periodical
    maintenance strategies can optimise costs by integrating automatic data-driven
    predictive maintenance models. These models monitor machine and component states,
    whose research has evolved from statistical to more complex machine learning techniques.
    Nowadays, their main research focuses on deep learning models.
  prefs: []
  type: TYPE_NORMAL
- en: The main objective of this survey is to analyse the state-of-the-art deep learning
    techniques implementation in the field of predictive maintenance. For that purpose,
    several analysis and research are reviewed throughout the work, which are summarised
    in this paragraph. In the beginning, the most relevant factors and characteristics
    of industrial and PdM datasets are presented. Secondly, the steps necessary to
    perform PdM are presented in a methodological way. Afterwards, statistical and
    traditional machine learning techniques for PdM are reviewed, in order to gain
    knowledge on baseline models in which some deep learning implementations are based.
    Thenceforth, a thorough review on deep learning state-of-the-art works is performed,
    classifying the works by their underlying technique, data typology and compared
    among them; which enables methods’ comparison in a structured way. Related reviews
    on DL for PdM are also analysed, highlighting their main conclusions. Thereafter,
    a summary on the main public PdM datasets is presented and SotA results are compared
    on turbofan engine degradation simulation dataset. Moreover, the suitability and
    impact of deep learning in the field of predictive maintenance is presented, together
    with the comparison with other data-driven methods. In addition, the systematisation
    of deep learning models development for predictive maintenance is discussed. Finally,
    the application of these models in real industrial use-cases is argued, analysing
    their applicability beyond public benchmark datasets and research environments.
  prefs: []
  type: TYPE_NORMAL
- en: As stated before, industrial companies that want to optimise their maintenance
    operations should transition towards predictive maintenance. However, this automatising
    should be embraced from simpler to more complex models, always choosing the ones
    that could better fit their specific needs. Both domain experts and data scientists
    should collaborate in the development and validation of a PdM structure. This
    hybrid model could benefit from the advantages of both domain knowledge-based
    and data-driven approaches, resulting in an accurate yet interpretable model.
    Explainable machine learning applied to deep learning could be an alternative
    to white-box and grey box models, which are more interpretable and less accurate.
    These new models may achieve a trade-off between accuracy and explainability,
    integrating with domain knowledge technicians, which can use them as a tool to
    perform PdM and gain knowledge from the data while contrasting with theoretical
    background and domain expertise.
  prefs: []
  type: TYPE_NORMAL
- en: Industrial companies nowadays have collected much data by monitoring assets
    under normal working condition and little to none failure data. Therefore, unsupervised
    and one-class classification algorithms research is relevant for predictive maintenance
    field. Concretely, architectures like autoencoders or deep belief networks with
    LSTMs or CNNs are one of the most researched type of architecture that enable
    unsupervised time-series data modelling. Nonetheless, the design and optimisation
    of DL architectures is mainly guided by previous experience and trial and error.
  prefs: []
  type: TYPE_NORMAL
- en: To sum up, deep learning models have gained popularity in PdM due to their high
    accuracy, achieving state-of-the-art results when trained with enough data. However,
    many works do not address other relevant aspects for PdM models such as interpretability,
    real time execution, novelty detection or uncertainty modelling, given that mainly
    laboratory datasets have been used. These aspects are fundamental to transfer
    any machine learning model to real, industrial use cases, and run in production.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: (1)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Able et al. (2016) Charles M. Able, Alan H. Baydush, Callistus Nguyen, Jacob
    Gersh, Alois Ndlovu, Igor Rebo, Jeremy Booth, Mario Perez, Benjamin Sintay, and
    Michael T. Munley. 2016. A model for preemptive maintenance of medical linear
    accelerators-predictive maintenance. *Radiation Oncology* 11, 1 (2016), 36. [https://doi.org/10.1186/s13014-016-0602-1](https://doi.org/10.1186/s13014-016-0602-1)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ademujimi et al. (2017) Toyosi Toriola Ademujimi, Michael P. Brundage, and Vittaldas V.
    Prabhu. 2017. A Review of Current Machine Learning Techniques Used in Manufacturing
    Diagnosis. In *IFIP Advances in Information and Communication Technology*, Hermann
    Lödding, Ralph Riedel, Klaus-Dieter Thoben, Gregor von Cieminski, and Dimitris
    Kiritsis (Eds.), Vol. 513\. Springer International Publishing, Cham, 407–415.
    [https://doi.org/10.1007/978-3-319-66923-6_48](https://doi.org/10.1007/978-3-319-66923-6_48)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adhikari et al. (2018) Partha Adhikari, Harsha Gururaja Rao, and Dipl.-Ing Matthias
    Buderath. 2018. Machine Learning based Data Driven Diagnostics & Prognostics Framework
    for Aircraft Predictive Maintenance. *10th International Symposium on NDT in Aerospace,
    October 24-26, 2018, Dresden, Germany* Ml (2018), 1–15. [https://www.ndt.net/article/aero2018/papers/We.5.B.3.pdf](https://www.ndt.net/article/aero2018/papers/We.5.B.3.pdf)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ahmed et al. (2018) H. O.A. Ahmed, M. L.D. Wong, and A. K. Nandi. 2018. Intelligent
    condition monitoring method for bearing faults from highly compressed measurements
    using sparse over-complete features. *Mechanical Systems and Signal Processing*
    99 (2018), 459–477. [https://doi.org/10.1016/j.ymssp.2017.06.027](https://doi.org/10.1016/j.ymssp.2017.06.027)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Al-Raheem and Abdul-Karem (2011) Khalid F Al-Raheem and Waleed Abdul-Karem.
    2011. Rolling bearing fault diagnostics using artificial neural networks based
    on Laplace wavelet analysis. *International Journal of Engineering, Science and
    Technology* 2, 6 (2011). [https://doi.org/10.4314/ijest.v2i6.63730](https://doi.org/10.4314/ijest.v2i6.63730)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amarbayasgalan et al. (2018) Tsatsral Amarbayasgalan, Bilguun Jargalsaikhan,
    and Keun Ho Ryu. 2018. Unsupervised novelty detection using deep autoencoders
    with density based clustering. *Applied Sciences (Switzerland)* 8, 9 (2018), 1468.
    [https://doi.org/10.3390/app8091468](https://doi.org/10.3390/app8091468)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amruthnath and Gupta (2018) Nagdev Amruthnath and Tarun Gupta. 2018. A research
    study on unsupervised machine learning algorithms for early fault detection in
    predictive maintenance. In *2018 5th International Conference on Industrial Engineering
    and Applications, ICIEA 2018*. IEEE, 355–361. [https://doi.org/10.1109/IEA.2018.8387124](https://doi.org/10.1109/IEA.2018.8387124)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: and Saxena (2013) Vimal and Saxena. 2013. Assessment of Gearbox Fault DetectionUsing
    Vibration Signal Analysis and Acoustic Emission Technique. *IOSR Journal of Mechanical
    and Civil Engineering* 7, 4 (2013), 52–60. [https://doi.org/10.9790/1684-0745260](https://doi.org/10.9790/1684-0745260)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ansari et al. (2020) Fazel Ansari, Robert Glawar, and Wilfried Sihn. 2020. Prescriptive
    Maintenance of CPPS by Integrating Multimodal Data with Dynamic Bayesian Networks.
    In *Machine Learning for Cyber Physical Systems*, Jürgen Beyerer, Alexander Maier,
    and Oliver Niggemann (Eds.). Springer Berlin Heidelberg, Berlin, Heidelberg, 1–8.
    [https://doi.org/10.1007/978-3-662-59084-3_1](https://doi.org/10.1007/978-3-662-59084-3_1)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arifoglu and Bouchachia (2017) Damla Arifoglu and Abdelhamid Bouchachia. 2017.
    Activity Recognition and Abnormal Behaviour Detection with Recurrent Neural Networks.
    *Procedia Computer Science* 110 (2017), 86–93. [https://doi.org/10.1016/j.procs.2017.06.121](https://doi.org/10.1016/j.procs.2017.06.121)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aydin and Guldamlasioglu (2017) Olgun Aydin and Seren Guldamlasioglu. 2017.
    Using LSTM networks to predict engine condition on large scale data processing
    framework. In *2017 4th International Conference on Electrical and Electronics
    Engineering, ICEEE 2017*. IEEE, 281–285. [https://doi.org/10.1109/ICEEE2.2017.7935834](https://doi.org/10.1109/ICEEE2.2017.7935834)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aytekin et al. (2018) Caglar Aytekin, Xingyang Ni, Francesco Cricri, and Emre
    Aksu. 2018. Clustering and Unsupervised Anomaly Detection with l2 Normalized Deep
    Auto-Encoder Representations. In *Proceedings of the International Joint Conference
    on Neural Networks*, Vol. 2018-July. IEEE, 1–6. [https://doi.org/10.1109/IJCNN.2018.8489068](https://doi.org/10.1109/IJCNN.2018.8489068)
    arXiv:1802.00187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Babu et al. (2016) Giduthuri Sateesh Babu, Peilin Zhao, and Xiao Li Li. 2016.
    Deep convolutional neural network based regression approach for estimation of
    remaining useful life. In *Lecture Notes in Computer Science (including subseries
    Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)*,
    Shamkant B Navathe, Weili Wu, Shashi Shekhar, Xiaoyong Du, X Sean Wang, and Hui
    Xiong (Eds.), Vol. 9642. Springer International Publishing, Cham, 214–228. [https://doi.org/10.1007/978-3-319-32025-0_14](https://doi.org/10.1007/978-3-319-32025-0_14)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bakar et al. (2013) A. H.A. Bakar, H. A. Illias, M. K. Othman, and H. Mokhlis.
    2013. Identification of failure root causes using condition based monitoring data
    on a 33 kV switchgear. *International Journal of Electrical Power and Energy Systems*
    47, 1 (2013), 305–312. [https://doi.org/10.1016/j.ijepes.2012.11.007](https://doi.org/10.1016/j.ijepes.2012.11.007)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ballard (1987) Dana H Ballard. 1987. Modular Learning in Neural Networks. In
    *Aaai*. 279–284.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Baptista et al. (2018) Marcia Baptista, Shankar Sankararaman, Ivo P. de Medeiros,
    Cairo Nascimento, Helmut Prendinger, and Elsa M.P. Henriques. 2018. Forecasting
    fault events for predictive maintenance using data-driven techniques and ARMA
    modeling. *Computers and Industrial Engineering* 115 (2018), 41–53. [https://doi.org/10.1016/j.cie.2017.10.033](https://doi.org/10.1016/j.cie.2017.10.033)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Benkedjouh et al. (2013) T. Benkedjouh, K. Medjaher, N. Zerhouni, and S. Rechak.
    2013. Remaining useful life estimation based on nonlinear feature reduction and
    support vector regression. *Engineering Applications of Artificial Intelligence*
    26, 7 (2013), 1751–1760. [https://doi.org/10.1016/j.engappai.2013.02.006](https://doi.org/10.1016/j.engappai.2013.02.006)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blancke et al. (2018) Olivier Blancke, Dragan Komljenovic, Antoine Tahan, Amélie
    Combette, Normand Amyot, Mélanie Lévesque, Claude Hudon, and Noureddine Zerhouni.
    2018. A Predictive Maintenance Approach for Complex Equipment Based on Petri Net
    Failure Mechanism Propagation Model. In *Proceedings of the European Conference
    of the PHM Society*, Vol. 4. [https://phmpapers.org/index.php/phme/article/view/434](https://phmpapers.org/index.php/phme/article/view/434)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bolbolamiri et al. (2012) Najmeh Bolbolamiri, Maryam Setayesh Sanai, and Ahmad
    Mirabadi. 2012. Time-Domain Stator Current Condition Monitoring : Analyzing Point
    Failures Detection by Kolmogorov-Smirnov ( K-S ) Test. *International Journal
    of Electrical, Computer, Energetic, Electronic and Communication Engineering*
    6, 6 (2012), 587–592.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bose et al. (2019) Sumon Kumar Bose, Bapi Kar, Mohendra Roy, Pradeep Kumar
    Gopalakrishnan, and Arindam Basu. 2019. AdepoS: Anomaly detection based power
    saving for predictive maintenance using edge computing. In *Proceedings of the
    Asia and South Pacific Design Automation Conference, ASP-DAC*. ACM, 597–602. [https://doi.org/10.1145/3287624.3287716](https://doi.org/10.1145/3287624.3287716)
    arXiv:1811.00873'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Boutros and Liang (2011) Tony Boutros and Ming Liang. 2011. Detection and diagnosis
    of bearing and cutting tool faults using hidden Markov models. *Mechanical Systems
    and Signal Processing* 25, 6 (2011), 2102–2124. [https://doi.org/10.1016/j.ymssp.2011.01.013](https://doi.org/10.1016/j.ymssp.2011.01.013)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bromley and Bottomley (1994) R. C. Bromley and E. Bottomley. 1994. Failure modes,
    effects and criticality analysis (FMECA). *IEE Colloquium (Digest)* 52 (1994).
    [https://doi.org/10.1002/9781118312575.ch12](https://doi.org/10.1002/9781118312575.ch12)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bruneo and De Vita (2019) Dario Bruneo and Fabrizio De Vita. 2019. On the use
    of LSTM networks for predictive maintenance in smart industries. In *Proceedings
    - 2019 IEEE International Conference on Smart Computing, SMARTCOMP 2019*. IEEE,
    241–248. [https://doi.org/10.1109/SMARTCOMP.2019.00059](https://doi.org/10.1109/SMARTCOMP.2019.00059)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cabezas Rodríguez (2019) Juan Pablo Cabezas Rodríguez. 2019. Generative Adversarial
    Network Based Model for Multi-Domain. *Universidad de Chile* (2019).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cabrera et al. (2017) Diego Cabrera, Fernando Sancho, Chuan Li, Mariela Cerrada,
    René Vinicio Sánchez, Fannia Pacheco, and José Valente de Oliveira. 2017. Automatic
    feature extraction of time-series applied to fault severity assessment of helical
    gearbox in stationary and non-stationary speed operation. *Applied Soft Computing
    Journal* 58 (2017), 53–64. [https://doi.org/10.1016/j.asoc.2017.04.016](https://doi.org/10.1016/j.asoc.2017.04.016)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Canizo et al. (2017) Mikel Canizo, Enrique Onieva, Angel Conde, Santiago Charramendieta,
    and Salvador Trujillo. 2017. Real-time predictive maintenance for wind turbines
    using Big Data frameworks. In *2017 IEEE International Conference on Prognostics
    and Health Management, ICPHM 2017*. 70–77. [https://doi.org/10.1109/ICPHM.2017.7998308](https://doi.org/10.1109/ICPHM.2017.7998308)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Carlsson et al. (2016) Christer Carlsson, Markku Heikkilä, and József Mezei.
    2016. *Fuzzy entropy used for predictive analytics*. Vol. 341. Springer International
    Publishing, Cham, 187–209. [https://doi.org/10.1007/978-3-319-31093-0_9](https://doi.org/10.1007/978-3-319-31093-0_9)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Carvalho et al. (2019) Thyago P. Carvalho, Fabrízzio A.A.M.N. Soares, Roberto
    Vita, Roberto da P. Francisco, João P. Basto, and Symone G.S. Alcalá. 2019. A
    systematic literature review of machine learning methods applied to predictive
    maintenance. *Computers and Industrial Engineering* 137 (2019), 106024. [https://doi.org/10.1016/j.cie.2019.106024](https://doi.org/10.1016/j.cie.2019.106024)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Castagliola et al. (2011) Philippe Castagliola, Giovanni Celano, and Stelios
    Psarakis. 2011. Monitoring the coefficient of variation using EWMA charts. *Journal
    of Quality Technology* 43, 3 (2011), 249–265. [https://doi.org/10.1080/00224065.2011.11917861](https://doi.org/10.1080/00224065.2011.11917861)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cerqueira et al. (2016) Vítor Cerqueira, Fábio Pinto, Claudio Sá, and Carlos
    Soares. 2016. Combining boosted trees with metafeature engineering for predictive
    maintenance. *Lecture Notes in Computer Science (including subseries Lecture Notes
    in Artificial Intelligence and Lecture Notes in Bioinformatics)* 9897 LNCS (2016),
    393–397. [https://doi.org/10.1007/978-3-319-46349-0_35](https://doi.org/10.1007/978-3-319-46349-0_35)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Chalapathy and Chawla (2019) Raghavendra Chalapathy and Sanjay Chawla. 2019.
    Deep Learning for Anomaly Detection: A Survey. *arXiv preprint* (2019). arXiv:1901.03407'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chalapathy et al. (2018) Raghavendra Chalapathy, Aditya Krishna Menon, and Sanjay
    Chawla. 2018. Anomaly Detection using One-Class Neural Networks. *arXiv preprint*
    (2018). arXiv:1802.06360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Chemweno et al. (2016) Peter Chemweno, Ido Morag, Mohammad Sheikhalishahi,
    Liliane Pintelon, Peter Muchiri, and James Wakiru. 2016. Development of a novel
    methodology for root cause analysis and selection of maintenance strategy for
    a thermal power plant: A data exploration approach. *Engineering Failure Analysis*
    66 (2016), 19–34. [https://doi.org/10.1016/j.engfailanal.2016.04.001](https://doi.org/10.1016/j.engfailanal.2016.04.001)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Chen et al. (2017a) Renxiang Chen, Siyang Chen, Miao He, David He, and Baoping
    Tang. 2017a. Rolling bearing fault severity identification using deep sparse auto-encoder
    network with noise added sample expansion. *Proceedings of the Institution of
    Mechanical Engineers, Part O: Journal of Risk and Reliability* 231, 6 (2017),
    666–679. [https://doi.org/10.1177/1748006X17726452](https://doi.org/10.1177/1748006X17726452)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chen et al. (2017b) Zhiqiang Chen, Shengcai Deng, Xudong Chen, Chuan Li, René Vinicio
    Sanchez, and Huafeng Qin. 2017b. Deep neural networks-based rolling bearing fault
    diagnosis. *Microelectronics Reliability* 75 (2017), 327–333. [https://doi.org/10.1016/j.microrel.2017.03.006](https://doi.org/10.1016/j.microrel.2017.03.006)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Cho et al. (2014) Kyunghyun Cho, Bart van Merriënboer, Dzmitry Bahdanau, and
    Yoshua Bengio. 2014. On the Properties of Neural Machine Translation: Encoder–Decoder
    Approaches. In *Proceedings of SSST-8, Eighth Workshop on Syntax, Semantics and
    Structure in Statistical Translation*. Association for Computational Linguistics,
    Doha, Qatar, 103–111. [https://doi.org/10.3115/v1/W14-4012](https://doi.org/10.3115/v1/W14-4012)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Colemen et al. (2017) Chris Colemen, Satish Damodaran, Mahesh Chandramoulin,
    and Ed Deuel. 2017. Making maintenance smarter. *Deloitte University Press* (2017),
    1–21.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Cortes et al. (2016) Hector Cortes, Joanna Daaboul, Julien Le Duigou, and Benoît
    Eynard. 2016. Strategic Lean Management: Integration of operational Performance
    Indicators for strategic Lean management. *IFAC-PapersOnLine* 49, 12 (2016), 65–70.
    [https://doi.org/10.1016/j.ifacol.2016.07.551](https://doi.org/10.1016/j.ifacol.2016.07.551)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Costa and Nascimento (2016) Camila Ferreira Costa and Mario A. Nascimento.
    2016. IDA 2016 industrial challenge: Using machine learning for predicting failures.
    In *Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial
    Intelligence and Lecture Notes in Bioinformatics)*, Henrik Boström, Arno Knobbe,
    Carlos Soares, and Panagiotis Papapetrou (Eds.), Vol. 9897 LNCS. Springer International
    Publishing, Cham, 381–386. [https://doi.org/10.1007/978-3-319-46349-0_33](https://doi.org/10.1007/978-3-319-46349-0_33)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Demetgul (2013) M. Demetgul. 2013. Fault diagnosis on production systems with
    support vector machine and decision trees algorithms. *International Journal of
    Advanced Manufacturing Technology* 67, 9-12 (2013), 2183–2194. [https://doi.org/10.1007/s00170-012-4639-5](https://doi.org/10.1007/s00170-012-4639-5)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deutsch and He (2017) Jason Deutsch and David He. 2017. Using Deep Learning-Based
    Approach to Predict Remaining Useful Life of Rotating Components. *IEEE Transactions
    on Systems, Man, and Cybernetics: Systems* 48, 1 (2017), 11–20. [https://doi.org/10.1109/TSMC.2017.2697842](https://doi.org/10.1109/TSMC.2017.2697842)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Dhillon (2002) Balbir S Dhillon. 2002. *Engineering maintenance: a modern approach*.
    cRc press. 1–224 pages.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Diez-Olivan et al. (2017) Alberto Diez-Olivan, Jose A. Pagan, Ricardo Sanz,
    and Basilio Sierra. 2017. Data-driven prognostics using a combination of constrained
    K-means clustering, fuzzy modeling and LOF-based score. *Neurocomputing* 241 (2017),
    97–107. [https://doi.org/10.1016/j.neucom.2017.02.024](https://doi.org/10.1016/j.neucom.2017.02.024)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Don Sanger (2017) Don Sanger. 2017. Reactive, Preventive & Predictive Maintenance
    — IVC Technologies. [https://ivctechnologies.com/2017/08/29/reactive-preventive-predictive-maintenance/](https://ivctechnologies.com/2017/08/29/reactive-preventive-predictive-maintenance/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dos Santos et al. (2017) Tiago Dos Santos, Fernando J.T.E. Ferreira, Joao Moura
    Pires, and Carlos Damasio. 2017. Stator winding short-circuit fault diagnosis
    in induction motors using random forest. In *2017 IEEE International Electric
    Machines and Drives Conference, IEMDC 2017*. 1–8. [https://doi.org/10.1109/IEMDC.2017.8002350](https://doi.org/10.1109/IEMDC.2017.8002350)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Drinkwater et al. (2009) Bruce W. Drinkwater, Jie Zhang, Katherine J. Kirk,
    Jocelyn Elgoyhen, and Rob S. Dwyer-Joyce. 2009. Ultrasonic measurement of rolling
    bearing lubrication using piezoelectric thin films. *Journal of Tribology* 131,
    1 (2009), 1–8. [https://doi.org/10.1115/1.3002324](https://doi.org/10.1115/1.3002324)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Durbhaka and Selvaraj (2016) Gopi Krishna Durbhaka and Barani Selvaraj. 2016.
    Predictive maintenance for wind turbine diagnostics using vibration signal analysis
    based on collaborative recommendation approach. In *2016 International Conference
    on Advances in Computing, Communications and Informatics, ICACCI 2016*. 1839–1842.
    [https://doi.org/10.1109/ICACCI.2016.7732316](https://doi.org/10.1109/ICACCI.2016.7732316)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eke et al. (2017) Samuel Eke, Thomas Aka-Ngnui, Guy Clerc, and Issouf Fofana.
    2017. Characterization of the operating periods of a power transformer by clustering
    the dissolved gas data. In *Proceedings of the 2017 IEEE 11th International Symposium
    on Diagnostics for Electrical Machines, Power Electronics and Drives, SDEMPED
    2017*, Vol. 2017-January. 298–303. [https://doi.org/10.1109/DEMPED.2017.8062371](https://doi.org/10.1109/DEMPED.2017.8062371)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elnasharty et al. (2011) I. Y. Elnasharty, A. K. Kassem, M. Sabsabi, and M. A.
    Harith. 2011. Diagnosis of lubricating oil by evaluating cyanide and carbon molecular
    emission lines in laser induced breakdown spectra. *Spectrochimica Acta - Part
    B Atomic Spectroscopy* 66, 8 (2011), 588–593. [https://doi.org/10.1016/j.sab.2011.06.001](https://doi.org/10.1016/j.sab.2011.06.001)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elsheikh et al. (2019) Ahmed Elsheikh, Soumaya Yacout, and Mohamed Salah Ouali.
    2019. Bidirectional handshaking LSTM for remaining useful life prediction. *Neurocomputing*
    323 (2019), 148–156. [https://doi.org/10.1016/j.neucom.2018.09.076](https://doi.org/10.1016/j.neucom.2018.09.076)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Feng et al. (2012) Fuzhou Feng, Guoqiang Rao, Pengcheng Jiang, and Aiwei Si.
    2012. Research on early fault diagnosis for rolling bearing based on permutation
    entropy algorithm. In *Proceedings of IEEE 2012 Prognostics and System Health
    Management Conference, PHM-2012*. 1–5. [https://doi.org/10.1109/PHM.2012.6228833](https://doi.org/10.1109/PHM.2012.6228833)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fernandez-Anakabe et al. (2019) Javier Fernandez-Anakabe, Ekhi Zugasti Uriguen,
    and Urko Zurutuza Ortega. 2019. An Attribute Oriented Induction based Methodology
    for Data Driven Predictive Maintenance. *arXiv preprint* (2019). arXiv:1912.00662
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Galloway et al. (2016) Grant S Galloway, Victoria M Catterson, Thomas Fay, Andrew
    Robb, and Craig Love. 2016. Diagnosis of Tidal Turbine Vibration Data through
    Deep Neural Networks. *Proceedings of the Third European Conference of the Prognostics
    and Health Management Society 2016* (2016), 172–180. [https://strathprints.strath.ac.uk/57127/](https://strathprints.strath.ac.uk/57127/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'García Márquez et al. (2012) Fausto Pedro García Márquez, Andrew Mark Tobias,
    Jesús María Pinar Pérez, and Mayorkinos Papaelias. 2012. Condition monitoring
    of wind turbines: Techniques and methods. *Renewable Energy* 46 (2012), 169–178.
    [https://doi.org/10.1016/j.renene.2012.03.003](https://doi.org/10.1016/j.renene.2012.03.003)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Garg et al. (2015) A. Garg, V. Vijayaraghavan, K. Tai, Pravin M. Singru, Vishal
    Jain, and Nikilesh Krishnakumar. 2015. Model development based on evolutionary
    framework for condition monitoring of a lathe machine. *Measurement: Journal of
    the International Measurement Confederation* 73 (2015), 95–110. [https://doi.org/10.1016/j.measurement.2015.04.025](https://doi.org/10.1016/j.measurement.2015.04.025)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Géron (2017) Aurélien Géron. 2017. *Hands-on machine learning with Scikit-Learn
    and TensorFlow : concepts, tools, and techniques to build intelligent systems*.
    O’Reilly Media. 572 pages.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Golub and Reinsch (1970) G. H. Golub and C. Reinsch. 1970. Singular value decomposition
    and least squares solutions. In *Numerische Mathematik*. Vol. 14\. Springer, 403–420.
    [https://doi.org/10.1007/BF02163027](https://doi.org/10.1007/BF02163027)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Goodfellow et al. (2016) Ian Goodfellow, Yoshua Bengio, and Aaron Courville.
    2016. *Deep Learning*. MIT Press. [http://www.deeplearningbook.org](http://www.deeplearningbook.org).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Goodfellow et al. (2014) Ian J. Goodfellow, Jean Pouget-Abadie, Mehdi Mirza,
    Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, and Yoshua Bengio.
    2014. Generative adversarial nets. In *Advances in Neural Information Processing
    Systems*, Vol. 3\. 2672–2680. [https://doi.org/10.3156/jsoft.29.5_177_2](https://doi.org/10.3156/jsoft.29.5_177_2)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guo et al. (2016b) Tian Guo, Zhao Xu, Xin Yao, Haifeng Chen, Karl Aberer, and
    Koichi Funaya. 2016b. Robust online time series prediction with recurrent neural
    networks. In *Proceedings - 3rd IEEE International Conference on Data Science
    and Advanced Analytics, DSAA 2016*. IEEE, 816–825. [https://doi.org/10.1109/DSAA.2016.92](https://doi.org/10.1109/DSAA.2016.92)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Guo et al. (2016a) Xiaojie Guo, Liang Chen, and Changqing Shen. 2016a. Hierarchical
    adaptive deep convolution neural network and its application to bearing fault
    diagnosis. *Measurement: Journal of the International Measurement Confederation*
    93 (2016), 490–502. [https://doi.org/10.1016/j.measurement.2016.07.054](https://doi.org/10.1016/j.measurement.2016.07.054)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gutschi et al. (2019) Clemens Gutschi, Nikolaus Furian, Josef Suschnigg, Dietmar
    Neubacher, and Siegfried Voessner. 2019. Log-based predictive maintenance in discrete
    parts manufacturing. *Procedia CIRP* 79 (2019), 528–533. [https://doi.org/10.1016/j.procir.2019.02.098](https://doi.org/10.1016/j.procir.2019.02.098)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hao et al. (2017) Liu Hao, Xiong Xin, Wang Xiaojing, Guo Jiayu, and Shen Jiexi.
    2017. Health Assessment of Rolling Bearing based on Self-organizing Map and Restricted
    Boltzmann Machine. *Journal of Mechanical Transmission* 6 (2017), 5.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hinton and Salakhutdinov (2006) G. E. Hinton and R. R. Salakhutdinov. 2006.
    Reducing the dimensionality of data with neural networks. *Science* 313, 5786
    (2006), 504–507. [https://doi.org/10.1126/science.1127647](https://doi.org/10.1126/science.1127647)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hochreiter (1991) Sepp Hochreiter. 1991. Untersuchungen zu dynamischen neuronalen
    Netzen. *Master’s thesis, Institut für Informatik, Technische Universität, Munchen*
    91, 1 (1991), 1–71. [http://people.idsia.ch/~juergen/SeppHochreiter1991ThesisAdvisorSchmidhuber.pdf](http://people.idsia.ch/~juergen/SeppHochreiter1991ThesisAdvisorSchmidhuber.pdf)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hochreiter and Schmidhuber (1997) Sepp Hochreiter and Jürgen Schmidhuber. 1997.
    Long short-term memory. *Neural computation* 9, 8 (1997), 1735–1780.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hong and Yin (2018) Sheng Hong and Jiawei Yin. 2018. Remaining useful life prediction
    of bearing based on deep perceptron neural networks. *ACM International Conference
    Proceeding Series* 48 (2018), 175–179. [https://doi.org/10.1145/3289430.3289438](https://doi.org/10.1145/3289430.3289438)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Huang et al. (2019) Yang Huang, Chiun Hsun Chen, and Chi Jui Huang. 2019. Motor
    fault detection and feature extraction using rnn-based variational autoencoder.
    *IEEE Access* 7 (2019), 139086–139096. [https://doi.org/10.1109/ACCESS.2019.2940769](https://doi.org/10.1109/ACCESS.2019.2940769)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hwang et al. (2018) Soonsung Hwang, Jongpil Jeong, and Youngbin Kang. 2018.
    SVM-RBM based predictive maintenance scheme for IoT-enabled smart factory. In
    *2018 13th International Conference on Digital Information Management, ICDIM 2018*.
    IEEE, 162–167. [https://doi.org/10.1109/ICDIM.2018.8847132](https://doi.org/10.1109/ICDIM.2018.8847132)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ismail Fawaz et al. (2019) Hassan Ismail Fawaz, Germain Forestier, Jonathan
    Weber, Lhassane Idoumghar, and Pierre Alain Muller. 2019. Deep learning for time
    series classification: a review. *Data Mining and Knowledge Discovery* 33, 4 (2019),
    917–963. [https://doi.org/10.1007/s10618-019-00619-1](https://doi.org/10.1007/s10618-019-00619-1)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jegadeeshwaran and Sugumaran (2015) R. Jegadeeshwaran and V. Sugumaran. 2015.
    Fault diagnosis of automobile hydraulic brake system using statistical features
    and support vector machines. *Mechanical Systems and Signal Processing* 52-53,
    1 (2015), 436–446. [https://doi.org/10.1016/j.ymssp.2014.08.007](https://doi.org/10.1016/j.ymssp.2014.08.007)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kakati et al. (2019) Pallabi Kakati, Devendra Dandotiya, and Bhaskar Pal. 2019.
    Remaining useful life predictions for turbofan engine degradation using online
    long short-term memory network. *ASME 2019 Gas Turbine India Conference, GTINDIA
    2019* 2 (2019), 34. [https://doi.org/10.1115/GTINDIA2019-2368](https://doi.org/10.1115/GTINDIA2019-2368)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kanawaday and Sane (2018) Ameeth Kanawaday and Aditya Sane. 2018. Machine learning
    for predictive maintenance of industrial machines using IoT sensor data. In *Proceedings
    of the IEEE International Conference on Software Engineering and Service Sciences,
    ICSESS*, Vol. 2017-November. 87–90. [https://doi.org/10.1109/ICSESS.2017.8342870](https://doi.org/10.1109/ICSESS.2017.8342870)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kateris et al. (2014) Dimitrios Kateris, Dimitrios Moshou, Xanthoula Eirini
    Pantazi, Ioannis Gravalos, Nader Sawalhi, and Spiros Loutridis. 2014. A machine
    learning approach for the condition monitoring of rotating machinery. *Journal
    of Mechanical Science and Technology* 28, 1 (2014), 61–71. [https://doi.org/10.1007/s12206-013-1102-y](https://doi.org/10.1007/s12206-013-1102-y)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Khan and Yairi (2018) Samir Khan and Takehisa Yairi. 2018. A review on the application
    of deep learning in system health management. *Mechanical Systems and Signal Processing*
    107 (2018), 241–265. [https://doi.org/10.1016/j.ymssp.2017.11.024](https://doi.org/10.1016/j.ymssp.2017.11.024)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kingma and Welling (2014) Diederik P. Kingma and Max Welling. 2014. Auto-encoding
    variational bayes. In *2nd International Conference on Learning Representations,
    ICLR 2014 - Conference Track Proceedings*, Vol. 1. arXiv:1312.6114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kohonen (1990) T Kohonen. 1990. The self-organizing map. *Proc. IEEE* 78, 9
    (1990), 1464–1480.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kolokas et al. (2018) N. Kolokas, T. Vafeiadis, D. Ioannidis, and D. Tzovaras.
    2018. Forecasting faults of industrial equipment using machine learning classifiers.
    In *2018 IEEE (SMC) International Conference on Innovations in Intelligent Systems
    and Applications, INISTA 2018*. 1–6. [https://doi.org/10.1109/INISTA.2018.8466309](https://doi.org/10.1109/INISTA.2018.8466309)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kroll et al. (2014) Björn Kroll, David Schaffranek, Sebastian Schriegel, and
    Oliver Niggemann. 2014. System modeling based on machine learning for anomaly
    detection and predictive maintenance in industrial plants. *19th IEEE International
    Conference on Emerging Technologies and Factory Automation, ETFA 2014* (2014).
    [https://doi.org/10.1109/ETFA.2014.7005202](https://doi.org/10.1109/ETFA.2014.7005202)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lacaille et al. (2015) J Lacaille, A Gouby, W Bense, T Rabenoro, and M Abdel-Sayed.
    2015. Turbofan engine monitoring with health state identification and remaining
    useful life anticipation. *International Journal of Condition Monitoring* 5, 2
    (2015), 8–16. [https://doi.org/10.1784/204764215815848375](https://doi.org/10.1784/204764215815848375)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lavi (2018) Yuval Lavi. 2018. The Rewards and Challenges of Predictive Maintenance.
    *InfoQ* (jul 2018). [https://www.infoq.com/articles/predictive-maintenance-industrial-iot/](https://www.infoq.com/articles/predictive-maintenance-industrial-iot/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Le Cun and Fogelman-Soulié (1987) Y. Le Cun and Françoise Fogelman-Soulié. 1987.
    Modèles connexionnistes de l’apprentissage. *Intellectica. Revue de l’Association
    pour la Recherche Cognitive* 2, 1 (1987), 114–143. [https://doi.org/10.3406/intel.1987.1804](https://doi.org/10.3406/intel.1987.1804)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lebold et al. (2002) Mitchell Lebold, Karl Reichard, Carl S Byington, and Rolf
    Orsagh. 2002. OSA-CBM architecture development with emphasis on XML implementations.
    In *Maintenance and Reliability Conference (MARCON)*. pp. 6–8. [http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.110.4066&rep=rep1&type=pdf](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.110.4066&rep=rep1&type=pdf)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: LeCun et al. (1989) Y. LeCun, B. Boser, J. S. Denker, D. Henderson, R. E. Howard,
    W. Hubbard, and L. D. Jackel. 1989. Backpropagation Applied to Handwritten Zip
    Code Recognition. *Neural Computation* 1, 4 (1989), 541–551. [https://doi.org/10.1162/neco.1989.1.4.541](https://doi.org/10.1162/neco.1989.1.4.541)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lee (2019) Dongjin Lee. 2019. Evaluating reliability of complex systems for
    Predictive maintenance. *arXiv preprint* (2019). arXiv:1902.03495
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lee and Pan (2017) Dongjin Lee and Rong Pan. 2017. Predictive maintenance of
    complex system with multi-level reliability structure. *International Journal
    of Production Research* 55, 16 (2017), 4785–4801. [https://doi.org/10.1080/00207543.2017.1299947](https://doi.org/10.1080/00207543.2017.1299947)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lee et al. (2006) Jay Lee, Jun Ni, Dragan Djurdjanovic, Hai Qiu, and Haitao
    Liao. 2006. Intelligent prognostics tools and e-maintenance. *Computers in Industry*
    57, 6 (2006), 476–489. [https://doi.org/10.1016/j.compind.2006.02.014](https://doi.org/10.1016/j.compind.2006.02.014)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Lee et al. (2017) Yong Oh Lee, Jun Jo, and Jongwoon Hwang. 2017. Application
    of deep neural network and generative adversarial network to industrial maintenance:
    A case study of induction motor fault detection. In *Proceedings - 2017 IEEE International
    Conference on Big Data, Big Data 2017*, Vol. 2018-January. IEEE, 3248–3253. [https://doi.org/10.1109/BigData.2017.8258307](https://doi.org/10.1109/BigData.2017.8258307)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Lejon et al. (2018) Erik Lejon, Petter Kyösti, and John Lindström. 2018. Machine
    learning for detection of anomalies in press-hardening: Selection of efficient
    methods. *Procedia CIRP* 72 (2018), 1079–1083. [https://doi.org/10.1016/j.procir.2018.03.221](https://doi.org/10.1016/j.procir.2018.03.221)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Li and Gao (2010) Dacheng Li and Jinji Gao. 2010. Study and application of Reliability-centered
    Maintenance considering Radical Maintenance. *Journal of Loss Prevention in the
    Process Industries* 23, 5 (2010), 622–629. [https://doi.org/10.1016/j.jlp.2010.06.008](https://doi.org/10.1016/j.jlp.2010.06.008)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Li et al. (2017) Ling Li, Min Liu, Weiming Shen, and Guoqing Cheng. 2017. An
    expert knowledge-based dynamic maintenance task assignment model using discrete
    stress-strength interference theory. *Knowledge-Based Systems* 131 (2017), 135–148.
    [https://doi.org/10.1016/j.knosys.2017.06.008](https://doi.org/10.1016/j.knosys.2017.06.008)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Li et al. (2020) Pin Li, Xiaodong Jia, Jianshe Feng, Feng Zhu, Marcella Miller,
    Liang Yu Chen, and Jay Lee. 2020. A novel scalable method for machine degradation
    assessment using deep convolutional neural network. *Measurement: Journal of the
    International Measurement Confederation* 151 (2020), 107106. [https://doi.org/10.1016/j.measurement.2019.107106](https://doi.org/10.1016/j.measurement.2019.107106)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Li et al. (2018a) Xiang Li, Qian Ding, and Jian Qiao Sun. 2018a. Remaining useful
    life estimation in prognostics using deep convolution neural networks. *Reliability
    Engineering and System Safety* 172 (2018), 1–11. [https://doi.org/10.1016/j.ress.2017.11.021](https://doi.org/10.1016/j.ress.2017.11.021)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Li et al. (2000) Y. Li, T. R. Kurfess, and S. Y. Liang. 2000. Stochastic prognostics
    for rolling element bearings. *Mechanical Systems and Signal Processing* 14, 5
    (2000), 747–762. [https://doi.org/10.1006/mssp.2000.1301](https://doi.org/10.1006/mssp.2000.1301)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Li et al. (2018b) Zefang Li, Huajing Fang, Ming Huang, Ying Wei, and Linlan
    Zhang. 2018b. Data-driven bearing fault identification using improved hidden Markov
    model and self-organizing map. *Computers and Industrial Engineering* 116 (2018),
    37–46. [https://doi.org/10.1016/j.cie.2017.12.002](https://doi.org/10.1016/j.cie.2017.12.002)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liao et al. (2006) Haitao Liao, Wenbiao Zhao, and Huairui Guo. 2006. Predicting
    remaining useful life of an individual unit using proportional hazards model and
    logistic regression model. In *Proceedings - Annual Reliability and Maintainability
    Symposium*. IEEE, 127–132. [https://doi.org/10.1109/RAMS.2006.1677362](https://doi.org/10.1109/RAMS.2006.1677362)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liao et al. (2016) Linxia Liao, Wenjing Jin, and Radu Pavel. 2016. Enhanced
    Restricted Boltzmann Machine with Prognosability Regularization for Prognostics
    and Health Assessment. *IEEE Transactions on Industrial Electronics* 63, 11 (2016),
    7076–7083. [https://doi.org/10.1109/TIE.2016.2586442](https://doi.org/10.1109/TIE.2016.2586442)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liao and Köttig (2016) Linxia Liao and Felix Köttig. 2016. A hybrid framework
    combining data-driven and model-based methods for system remaining useful life
    prediction. *Applied Soft Computing Journal* 44 (2016), 191–199. [https://doi.org/10.1016/j.asoc.2016.03.013](https://doi.org/10.1016/j.asoc.2016.03.013)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lichman (2013) M. Lichman. 2013. UCI Machine Learning Repository. [http://archive.ics.uci.edu/ml](http://archive.ics.uci.edu/ml)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lindemann et al. (2019) Benjamin Lindemann, Fabian Fesenmayr, Nasser Jazdi,
    and Michael Weyrich. 2019. Anomaly detection in discrete manufacturing using self-learning
    approaches. *Procedia CIRP* 79 (2019), 313–318. [https://doi.org/10.1016/j.procir.2019.02.073](https://doi.org/10.1016/j.procir.2019.02.073)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Listou Ellefsen et al. (2019) André Listou Ellefsen, Emil Bjørlykhaug, Vilmar
    Æsøy, Sergey Ushakov, and Houxiang Zhang. 2019. Remaining useful life predictions
    for turbofan engine degradation using semi-supervised deep architecture. *Reliability
    Engineering and System Safety* 183 (2019), 240–251. [https://doi.org/10.1016/j.ress.2018.11.027](https://doi.org/10.1016/j.ress.2018.11.027)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Litjens et al. (2017) Geert Litjens, Thijs Kooi, Babak Ehteshami Bejnordi, Arnaud
    Arindra Adiyoso Setio, Francesco Ciompi, Mohsen Ghafoorian, Jeroen A.W.M. van der
    Laak, Bram van Ginneken, and Clara I. Sánchez. 2017. A survey on deep learning
    in medical image analysis. *Medical Image Analysis* 42 (2017), 60–88. [https://doi.org/10.1016/j.media.2017.07.005](https://doi.org/10.1016/j.media.2017.07.005)
    arXiv:1702.05747
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liu (2001) Puyin Liu. 2001. Approximation capabilities of multilayer feedforward
    regular fuzzy neural networks. *Applied Mathematics* 16, 1 (2001), 45–57. [https://doi.org/10.1007/s11766-001-0036-9](https://doi.org/10.1007/s11766-001-0036-9)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Liu et al. (2017) Ruonan Liu, Guotao Meng, Boyuan Yang, Chuang Sun, and Xuefeng
    Chen. 2017. Dislocated Time Series Convolutional Neural Architecture: An Intelligent
    Fault Diagnosis Approach for Electric Machine. *IEEE Transactions on Industrial
    Informatics* 13, 3 (2017), 1310–1320. [https://doi.org/10.1109/TII.2016.2645238](https://doi.org/10.1109/TII.2016.2645238)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Liu et al. (2012) X. T. Liu, F. Z. Feng, and A. W. Si. 2012. Condition based
    monitoring, diagnosis and maintenance on operating equipments of a hydraulic generator
    unit. In *IOP Conference Series: Earth and Environmental Science*, Vol. 15\. IOP
    Publishing, 42014. [https://doi.org/10.1088/1755-1315/15/4/042014](https://doi.org/10.1088/1755-1315/15/4/042014)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Lo et al. (2018) Moustapha Lo, Nicolas Valot, Florence Maraninchi, and Pascal
    Raymond. 2018. Real-time on-Board Manycore Implementation of a Health Monitoring
    System: Lessons Learnt.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lu et al. (2018) Bo Lu, John Stuber, and Thomas F. Edgar. 2018. Data-driven
    adaptive multiple model system utilizing growing self-organizing maps. *Journal
    of Process Control* 67 (2018), 56–68. [https://doi.org/10.1016/j.jprocont.2017.06.006](https://doi.org/10.1016/j.jprocont.2017.06.006)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lu et al. (2017) Chen Lu, Zhen Ya Wang, Wei Li Qin, and Jian Ma. 2017. Fault
    diagnosis of rotary machinery components using a stacked denoising autoencoder-based
    health state identification. *Signal Processing* 130 (2017), 377–388. [https://doi.org/10.1016/j.sigpro.2016.07.028](https://doi.org/10.1016/j.sigpro.2016.07.028)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lukac (2016) Dusko Lukac. 2016. The fourth ICT-based industrial revolution ”industry
    4.0” - HMI and the case of CAE/CAD innovation with EPLAN P8\. In *2015 23rd Telecommunications
    Forum, TELFOR 2015*. IEEE, 835–838. [https://doi.org/10.1109/TELFOR.2015.7377595](https://doi.org/10.1109/TELFOR.2015.7377595)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luo et al. (2018) Yonghong Luo, Xiangrui Cai, Ying ZHANG, Jun Xu, and Yuan xiaojie.
    2018. Multivariate Time Series Imputation with Generative Adversarial Networks.
    In *Advances in Neural Information Processing Systems 31*, S. Bengio, H. Wallach,
    H. Larochelle, K. Grauman, N. Cesa-Bianchi, and R. Garnett (Eds.). Curran Associates,
    Inc., 1596–1607. [http://papers.nips.cc/paper/7432-multivariate-time-series-imputation-with-generative-adversarial-networks.pdf](http://papers.nips.cc/paper/7432-multivariate-time-series-imputation-with-generative-adversarial-networks.pdf)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Lygren et al. (2019) Sture Lygren, Marco Piantanida, and Alfonso Amendola.
    2019. Unsupervised, deep learning-based detection of failures in industrial equipments:
    The future of predictive maintenance. In *Society of Petroleum Engineers - Abu
    Dhabi International Petroleum Exhibition and Conference 2019, ADIP 2019*. Society
    of Petroleum Engineers. [https://doi.org/10.2118/197629-ms](https://doi.org/10.2118/197629-ms)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Makhzani and Frey (2013) Alireza Makhzani and Brendan Frey. 2013. K-sparse autoencoders.
    *arXiv preprint* (2013). arXiv:1312.5663
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Malhotra et al. (2016) Pankaj Malhotra, Vishnu TV, Anusha Ramakrishnan, Gaurangi
    Anand, Lovekesh Vig, Puneet Agarwal, and Gautam Shroff. 2016. Multi-Sensor Prognostics
    using an Unsupervised Health Index based on LSTM Encoder-Decoder. *arXiv preprint*
    (2016). arXiv:1608.06154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martinez et al. ([n.d.]) Julio Martinez, Christianne Dennison, and Zhengyi Lian.
    [n.d.]. Sequence Based Classification for Predictive Maintenance. ([n. d.]).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martínez-Arellano and Ratchev (2019) Giovanna Martínez-Arellano and Svetan Ratchev.
    2019. Towards an active learning approach to tool condition monitoring with bayesian
    deep learning. *Proceedings - European Council for Modelling and Simulation, ECMS*
    33, 1 (2019), 223–229. [https://doi.org/10.7148/2019-0223](https://doi.org/10.7148/2019-0223)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mathew et al. (2018) Vimala Mathew, Tom Toby, Vikram Singh, B. Maheswara Rao,
    and M. Goutham Kumar. 2018. Prediction of Remaining Useful Lifetime (RUL) of turbofan
    engine using machine learning. In *IEEE International Conference on Circuits and
    Systems, ICCS 2017*, Vol. 2018-January. IEEE, 306–311. [https://doi.org/10.1109/ICCS1.2017.8326010](https://doi.org/10.1109/ICCS1.2017.8326010)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mehrjou et al. (2011) Mohammad Rezazadeh Mehrjou, Norman Mariun, Mohammad Hamiruce
    Marhaban, and Norhisam Misron. 2011. Rotor fault condition monitoring techniques
    for squirrel-cage induction machine - A review. *Mechanical Systems and Signal
    Processing* 25, 8 (2011), 2827–2848. [https://doi.org/10.1016/j.ymssp.2011.05.007](https://doi.org/10.1016/j.ymssp.2011.05.007)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Michau et al. (2020) Gabriel Michau, Yang Hu, Thomas Palmé, and Olga Fink.
    2020. Feature learning for fault detection in high-dimensional condition monitoring
    signals. *Proceedings of the Institution of Mechanical Engineers, Part O: Journal
    of Risk and Reliability* 234, 1 (2020), 104–115. [https://doi.org/10.1177/1748006X19868335](https://doi.org/10.1177/1748006X19868335)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mike Sondalini (2019) Mike Sondalini. 2019. Plant and Equipment Health Measurement,
    Assessment and Management. [https://www.lifetime-reliability.com/cms/machinery-health-measurement/](https://www.lifetime-reliability.com/cms/machinery-health-measurement/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Munir et al. (2017) Mohsin Munir, Steffen Erkel, Andreas Dengel, and Sheraz
    Ahmed. 2017. Pattern-based contextual anomaly detection in HVAC systems. In *IEEE
    International Conference on Data Mining Workshops, ICDMW*, Vol. 2017-November.
    1066–1073. [https://doi.org/10.1109/ICDMW.2017.150](https://doi.org/10.1109/ICDMW.2017.150)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Munir et al. (2019) Mohsin Munir, Shoaib Ahmed Siddiqui, Andreas Dengel, and
    Sheraz Ahmed. 2019. DeepAnT: A Deep Learning Approach for Unsupervised Anomaly
    Detection in Time Series. *IEEE Access* 7 (2019), 1991–2005. [https://doi.org/10.1109/ACCESS.2018.2886457](https://doi.org/10.1109/ACCESS.2018.2886457)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Murugan and Ramasamy (2015) Raji Murugan and Raju Ramasamy. 2015. Failure analysis
    of power transformer for effective maintenance planning in electric utilities.
    *Engineering Failure Analysis* 55 (2015), 182–192. [https://doi.org/10.1016/j.engfailanal.2015.06.002](https://doi.org/10.1016/j.engfailanal.2015.06.002)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Nanduri and Sherry (2016) Anvardh Nanduri and Lance Sherry. 2016. Anomaly detection
    in aircraft data using Recurrent Neural Networks (RNN). In *ICNS 2016: Securing
    an Integrated CNS System to Meet Future Challenges*. IEE, 5C2—-1. [https://doi.org/10.1109/ICNSURV.2016.7486356](https://doi.org/10.1109/ICNSURV.2016.7486356)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NASA (2020) NASA. 2020. Prognostics Center - Data Repository. [https://ti.arc.nasa.gov/tech/dash/groups/pcoe/prognostic-data-repository/{#}femto](https://ti.arc.nasa.gov/tech/dash/groups/pcoe/prognostic-data-repository/%7B#%7Dfemto)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Neapolitan and Neapolitan (2018) Richard E. Neapolitan and Richard E. Neapolitan.
    2018. *Neural Networks and Deep Learning*. Determination Press. 389–411 pages.
    [https://doi.org/10.1201/b22400-15](https://doi.org/10.1201/b22400-15)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Niu (2017) Qiming Niu. 2017. Remaining useful life prediction of bearings based
    on health index recurrent neural network. *Boletin Tecnico/Technical Bulletin*
    55, 16 (2017), 585–590.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oh et al. (2018) Hyunseok Oh, Joon Ha Jung, Byung Chul Jeon, and Byeng Dong
    Youn. 2018. Scalable and Unsupervised Feature Engineering Using Vibration-Imaging
    and Deep Learning for Rotor System Diagnosis. *IEEE Transactions on Industrial
    Electronics* 65, 4 (2018), 3539–3549. [https://doi.org/10.1109/TIE.2017.2752151](https://doi.org/10.1109/TIE.2017.2752151)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Okoh et al. (2017) C. Okoh, R. Roy, and J. Mehnen. 2017. Predictive Maintenance
    Modelling for Through-Life Engineering Services. *Procedia CIRP* 59 (2017), 196–201.
    [https://doi.org/10.1016/j.procir.2016.09.033](https://doi.org/10.1016/j.procir.2016.09.033)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oppenheimer and Loparo (2002) Charles H. Oppenheimer and Kenneth A. Loparo.
    2002. Physically based diagnosis and prognosis of cracked rotor shafts. In *Component
    and Systems Diagnostics, Prognostics, and Health Management II*, Vol. 4733\. International
    Society for Optics and Photonics, 122–132. [https://doi.org/10.1117/12.475502](https://doi.org/10.1117/12.475502)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passarella (2018) Claudio Passarella. 2018. Failure modes and effects analysis.
    *Control* 31, 10 (2018), 72–73. [https://doi.org/10.1201/9781420039603.ch9](https://doi.org/10.1201/9781420039603.ch9)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peng et al. (2019) Kaixiang Peng, Ruihua Jiao, Jie Dong, and Yanting Pi. 2019.
    A deep belief network based health indicator construction and remaining useful
    life prediction using improved particle filter. *Neurocomputing* 361 (2019), 19–28.
    [https://doi.org/10.1016/j.neucom.2019.07.075](https://doi.org/10.1016/j.neucom.2019.07.075)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pereira (2018) João Pereira. 2018. *Unsupervised anomaly detection in time series
    data using deep learning*. Ph.D. Dissertation. Instituto Superior Técnico (IST),
    University of Lisbon.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Perini (2019) Lorenzo Perini. 2019. *Predictive Maintenance for off-road vehicles
    based on Hidden Markov Models and Autoencoders for trend Anomaly Detection.* Ph.D.
    Dissertation. Politecnico di Torino.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pimentel et al. (2014) Marco A.F. Pimentel, David A. Clifton, Lei Clifton, and
    Lionel Tarassenko. 2014. A review of novelty detection. *Signal Processing* 99
    (2014), 215–249. [https://doi.org/10.1016/j.sigpro.2013.12.026](https://doi.org/10.1016/j.sigpro.2013.12.026)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Pouyanfar et al. (2018) Samira Pouyanfar, Saad Sadiq, Yilin Yan, Haiman Tian,
    Yudong Tao, Maria Presa Reyes, Mei Ling Shyu, Shu Ching Chen, and S. S. Iyengar.
    2018. A survey on deep learning: Algorithms, techniques, and applications. *Comput.
    Surveys* 51, 5 (2018), 92. [https://doi.org/10.1145/3234150](https://doi.org/10.1145/3234150)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prabakaran et al. (2014) K Prabakaran, S Kaushik, and R Mouleeshuwarapprabu.
    2014. Radial Basis Neural Networks Based Fault Detection and Isolation Scheme
    for Pneumatic Actuator. *Journal of Engineering Computers & Applied Sciences*
    3, 9 (2014), 50–55.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pradhan et al. (2007) Satyabrata Pradhan, Rajveer Singh, Komal Kachru, and Srinivas
    Narasimhamurthy. 2007. A Bayesian network based approach for root-cause-analysis
    in manufacturing process. In *Proceedings - 2007 International Conference on Computational
    Intelligence and Security, CIS 2007*. IEEE, 10–14. [https://doi.org/10.1109/CIS.2007.7](https://doi.org/10.1109/CIS.2007.7)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Prajapati et al. (2012) Ashok Prajapati, James Bechtel, and Subramaniam Ganesan.
    2012. Condition based maintenance: A survey. *Journal of Quality in Maintenance
    Engineering* 18, 4 (2012), 384–400. [https://doi.org/10.1108/13552511211281552](https://doi.org/10.1108/13552511211281552)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pratama et al. (2018) Mahardhika Pratama, Eric Dimla, Tegoeh Tjahjowidodo, Witold
    Pedrycz, and Edwin Lughofer. 2018. Online Tool Condition Monitoring Based on Parsimonious
    Ensemble+. *IEEE Transactions on Cybernetics* (2018). [https://doi.org/10.1109/TCYB.2018.2871120](https://doi.org/10.1109/TCYB.2018.2871120)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rad et al. (2011) Mona Khatami Rad, Mohammadehsan Torabizadeh, and Amin Noshadi.
    2011. Artificial neural network-based fault diagnostics of an electric motor using
    vibration monitoring. In *Proceedings 2011 International Conference on Transportation,
    Mechanical, and Electrical Engineering, TMEE 2011*. IEEE, 1512–1516. [https://doi.org/10.1109/TMEE.2011.6199495](https://doi.org/10.1109/TMEE.2011.6199495)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Radhakrishnan and Kamarthi (2016) Srinivasan Radhakrishnan and Sagar Kamarthi.
    2016. Complexity-entropy feature plane for gear fault detection. In *Proceedings
    - 2016 IEEE International Conference on Big Data, Big Data 2016*. 2057–2061. [https://doi.org/10.1109/BigData.2016.7840830](https://doi.org/10.1109/BigData.2016.7840830)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ramasso (2014) Emmanuel Ramasso. 2014. Investigating computational geometry
    for failure prognostics in presence of imprecise health indicator: Results and
    comparisons on C-MAPPS datasets. In *2nd Europen confernce of the prognostics
    and health management society.*, Vol. 5\. 1–13. [https://archivesic.ccsd.cnrs.fr/UNIV-BM/hal-01144999](https://archivesic.ccsd.cnrs.fr/UNIV-BM/hal-01144999)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ramasso and Saxena (2014) Emmanuel Ramasso and Abhinav Saxena. 2014. Performance
    benchmarking and analysis of prognostic methods for CMAPSS datasets. *International
    Journal of Prognostics and Health Management* 5, 2 (2014), 1–15. [https://hal.archives-ouvertes.fr/hal-01324587](https://hal.archives-ouvertes.fr/hal-01324587)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Reddy et al. (2016) Kishore K. Reddy, Soumalya Sarkar, Vivek Venugopalan, and
    Michael Giering. 2016. Anomaly detection and fault disambiguation in large flight
    data: A multi-modal deep auto-encoder approach. In *Proceedings of the Annual
    Conference of the Prognostics and Health Management Society, PHM*, Vol. 2016-October.
    192–199.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Rieger et al. (2019) Thomas Rieger, Stefanie Regier, Ingo Stengel, and Nathan
    Clarke. 2019. Fast predictive maintenance in Industrial Internet of Things (IIoT)
    with Deep Learning (DL): A review. In *CEUR Workshop Proceedings*, Vol. 2348\.
    69–79.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robinson and Fallside (1987) A.J. Robinson and F. Fallside. 1987. *The utility
    driven dynamic error propagation network*. University of Cambridge Department
    of Engineering Cambridge.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roy et al. (2019) Mohendra Roy, Sumon Kumar Bose, Bapi Kar, Pradeep Kumar Gopalakrishnan,
    and Arindam Basu. 2019. A Stacked Autoencoder Neural Network based Automated Feature
    Extraction Method for Anomaly detection in On-line Condition Monitoring. In *Proceedings
    of the 2018 IEEE Symposium Series on Computational Intelligence, SSCI 2018*. IEEE,
    1501–1507. [https://doi.org/10.1109/SSCI.2018.8628810](https://doi.org/10.1109/SSCI.2018.8628810)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rustum and Forrest (2018) Rabee Rustum and Shaun Forrest. 2018. Fault Detection
    in the Activated Sludge Process using the Kohonen Self-Organising Map. In *8th
    International Conference on Urban Planning, Architecture, Civil and Environment
    Engineering. Dubai, UAE*. [https://doi.org/10.15242/heaig.h1217807](https://doi.org/10.15242/heaig.h1217807)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sakurada and Yairi (2014) Mayu Sakurada and Takehisa Yairi. 2014. Anomaly detection
    using autoencoders with nonlinear dimensionality reduction. In *ACM International
    Conference Proceeding Series*, Vol. 02-December-2014\. ACM, 4–11. [https://doi.org/10.1145/2689746.2689747](https://doi.org/10.1145/2689746.2689747)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Sanayha and Vateekul (2017) Manassakan Sanayha and Peerapon Vateekul. 2017.
    Fault detection for circulating water pump using time series forecasting and outlier
    detection. In *2017 9th International Conference on Knowledge and Smart Technology:
    Crunching Information of Everything, KST 2017*. 193–198. [https://doi.org/10.1109/KST.2017.7886095](https://doi.org/10.1109/KST.2017.7886095)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Saxena et al. (2008) Abhinav Saxena, Kai Goebel, Don Simon, and Neil Eklund.
    2008. Damage propagation modeling for aircraft engine run-to-failure simulation.
    *2008 International Conference on Prognostics and Health Management, PHM 2008*
    (2008). [https://doi.org/10.1109/PHM.2008.4711414](https://doi.org/10.1109/PHM.2008.4711414)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Scholar and Smolensky (1986) Cu Scholar and Paul Smolensky. 1986. Parallel
    distributed processing: Explorations in the microstructure of cognition. Information
    Processing in Dynamical Systems: Foundations of Harmony Theory. *MIT Press, Cambridge,
    MA, USA* 1, 667 (1986), 194–281. [https://pdfs.semanticscholar.org/3ceb/e856001031cfd22438b9f0c2cd6a29136b27.pdf?{_}ga=1.15022902.1038306691.1479690262](https://pdfs.semanticscholar.org/3ceb/e856001031cfd22438b9f0c2cd6a29136b27.pdf?%7B_%7Dga=1.15022902.1038306691.1479690262)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Schwartz et al. (2020) Sébastien Schwartz, Juan José Montero Jimenez, Michel
    Salaün, and Rob Vingerhoeds. 2020. A fault mode identification methodology based
    on self-organizing map. *Neural Computing and Applications* (2020), 1–19. [https://doi.org/10.1007/s00521-019-04692-x](https://doi.org/10.1007/s00521-019-04692-x)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Selcuk (2017) Sule Selcuk. 2017. Predictive maintenance, its implementation
    and latest trends. *Proceedings of the Institution of Mechanical Engineers, Part
    B: Journal of Engineering Manufacture* 231, 9 (2017), 1670–1679. [https://doi.org/10.1177/0954405415601640](https://doi.org/10.1177/0954405415601640)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Serradilla et al. (2020) Oscar Serradilla, Ekhi Zugasti, Carlos Cernuda, Aandoitz
    Aranburu, Julian Ramirez de Okariz, and Urko Zurutuza. 2020. Interpreting Remaining
    Useful Life estimations combining Explainable Artificial Intelligence and domain
    knowledge in industrial machinery. In *2020 IEEE International Conference on Fuzzy
    Systems, FUZZ-IEEE 2020*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shao et al. (2018) Haidong Shao, Hongkai Jiang, Haizhou Zhang, and Tianchen
    Liang. 2018. Electric Locomotive Bearing Fault Diagnosis Using a Novel Convolutional
    Deep Belief Network. *IEEE Transactions on Industrial Electronics* 65, 3 (2018),
    2727–2736. [https://doi.org/10.1109/TIE.2017.2745473](https://doi.org/10.1109/TIE.2017.2745473)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shao et al. (2017a) Haidong Shao, Hongkai Jiang, Huiwei Zhao, and Fuan Wang.
    2017a. A novel deep autoencoder feature learning method for rotating machinery
    fault diagnosis. *Mechanical Systems and Signal Processing* 95 (2017), 187–204.
    [https://doi.org/10.1016/j.ymssp.2017.03.034](https://doi.org/10.1016/j.ymssp.2017.03.034)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shao et al. (2017b) Si Yu Shao, Wen Jun Sun, Ru Qiang Yan, Peng Wang, and Robert X.
    Gao. 2017b. A Deep Learning Approach for Fault Diagnosis of Induction Motors in
    Manufacturing. *Chinese Journal of Mechanical Engineering (English Edition)* 30,
    6 (2017), 1347–1356. [https://doi.org/10.1007/s10033-017-0189-y](https://doi.org/10.1007/s10033-017-0189-y)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sharp et al. (2017) Michael Sharp, Thurston Sexton, and Michael P Brundage.
    2017. Toward semi-autonomous information. In *IFIP International Conference on
    Advances in Production Management Systems*. Springer, 425–432.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Si et al. (2013) Xiao Sheng Si, Wenbin Wang, Chang Hua Hu, Mao Yin Chen, and
    Dong Hua Zhou. 2013. A Wiener-process-based degradation model with a recursive
    filter algorithm for remaining useful life estimation. *Mechanical Systems and
    Signal Processing* 35, 1-2 (2013), 219–237. [https://doi.org/10.1016/j.ymssp.2012.08.016](https://doi.org/10.1016/j.ymssp.2012.08.016)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sun et al. (2018) Jiedi Sun, Changhong Yan, and Jiangtao Wen. 2018. Intelligent
    bearing fault diagnosis method combining compressed data acquisition and deep
    learning. *IEEE Transactions on Instrumentation and Measurement* 67, 1 (2018),
    185–195. [https://doi.org/10.1109/TIM.2017.2759418](https://doi.org/10.1109/TIM.2017.2759418)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Susto et al. (2012) Gian Antonio Susto, Alessandro Beghi, and Cristina De Luca.
    2012. A predictive maintenance system for epitaxy processes based on filtering
    and prediction techniques. *IEEE Transactions on Semiconductor Manufacturing*
    25, 4 (nov 2012), 638–649. [https://doi.org/10.1109/TSM.2012.2209131](https://doi.org/10.1109/TSM.2012.2209131)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Susto et al. (2015) Gian Antonio Susto, Andrea Schirru, Simone Pampuri, Seán
    McLoone, and Alessandro Beghi. 2015. Machine learning for predictive maintenance:
    A multiple classifier approach. *IEEE Transactions on Industrial Informatics*
    11, 3 (2015), 812–820. [https://doi.org/10.1109/TII.2014.2349359](https://doi.org/10.1109/TII.2014.2349359)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tao et al. (2015) Siqin Tao, Tao Zhang, Jun Yang, Xueqian Wang, and Weining
    Lu. 2015. Bearing fault diagnosis method based on stacked autoencoder and softmax
    regression. In *Chinese Control Conference, CCC*, Vol. 2015-September. IEEE, 6331–6335.
    [https://doi.org/10.1109/ChiCC.2015.7260634](https://doi.org/10.1109/ChiCC.2015.7260634)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tavner et al. (2008) Peter Tavner, Li Ran, Jim Penman, and Howard Sedding. 2008.
    Condition monitoring of rotating electrical machines. *Condition Monitoring of
    Rotating Electrical Machines* (2008), 1–250. [https://doi.org/10.1049/PBPO056E](https://doi.org/10.1049/PBPO056E)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: UESystems (2019) UESystems. 2019. Understanding the P-F curve and its impact
    on reliability centered maintenance. [http://www.uesystems.com/news/understanding-the-p-f-curve-and-its-impact-on-reliability-centered-maintenance](http://www.uesystems.com/news/understanding-the-p-f-curve-and-its-impact-on-reliability-centered-maintenance)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Unal et al. (2014) Muhammet Unal, Mustafa Onat, Mustafa Demetgul, and Haluk
    Kucuk. 2014. Fault diagnosis of rolling bearings using a genetic algorithm optimized
    neural network. *Measurement: Journal of the International Measurement Confederation*
    58 (2014), 187–196. [https://doi.org/10.1016/j.measurement.2014.08.041](https://doi.org/10.1016/j.measurement.2014.08.041)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: UNE-EN 13306 (2018) UNE-EN 13306. 2018. *Maintenance. Maintenance terminology*.
    Standard. Asociación Española de Normalización, Génova, Madrid.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Venkatasubramanian et al. (2003) Venkat Venkatasubramanian, Raghunathan Rengaswamy,
    Kewen Yin, and Surya N. Kavuri. 2003. A review of process fault detection and
    diagnosis part I: Quantitative model-based methods. *Computers and Chemical Engineering*
    27, 3 (2003), 293–311. [https://doi.org/10.1016/S0098-1354(02)00160-6](https://doi.org/10.1016/S0098-1354(02)00160-6)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vianna and Yoneyama (2018) Wlamir Olivares Loesch Vianna and Takashi Yoneyama.
    2018. Predictive Maintenance Optimization for Aircraft Redundant Systems Subjected
    to Multiple Wear Profiles. *IEEE Systems Journal* 12, 2 (2018), 1170–1181. [https://doi.org/10.1109/JSYST.2017.2667232](https://doi.org/10.1109/JSYST.2017.2667232)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vorne (2019) Vorne. 2019. What Is OEE (Overall Equipment Effectiveness). [https://www.oee.com/](https://www.oee.com/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Wang et al. (2019a) Hongzhi Wang, Mohamed Jaward Bah, and Mohamed Hammad. 2019a.
    Progress in Outlier Detection Techniques: A Survey. *IEEE Access* 7 (2019), 107964–108000.
    [https://doi.org/10.1109/ACCESS.2019.2932769](https://doi.org/10.1109/ACCESS.2019.2932769)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Wang et al. (2019b) Jindong Wang, Yiqiang Chen, Shuji Hao, Xiaohui Peng, and
    Lisha Hu. 2019b. Deep learning for sensor-based activity recognition: A survey.
    *Pattern Recognition Letters* 119 (2019), 3–11.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wang et al. (2017c) Jinjiang Wang, Rui Zhao, Dongzhe Wang, Ruqiang Yan, Kezhi
    Mao, and Fei Shen. 2017c. Machine health monitoring using local feature-based
    gated recurrent unit networks. *IEEE Transactions on Industrial Electronics* 65,
    2 (2017), 1539–1548. [https://doi.org/10.1109/TIE.2017.2733438](https://doi.org/10.1109/TIE.2017.2733438)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wang et al. (2017a) Peng Wang, Ananya, Ruqiang Yan, and Robert X. Gao. 2017a.
    Virtualization and deep recognition for system fault classification. *Journal
    of Manufacturing Systems* 44 (2017), 310–316. [https://doi.org/10.1016/j.jmsy.2017.04.012](https://doi.org/10.1016/j.jmsy.2017.04.012)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wang et al. (2017b) Xinqing Wang, Jie Huang, Guoting Ren, and Dong Wang. 2017b.
    A hydraulic fault diagnosis method based on sliding-window spectrum feature and
    deep belief network. *Journal of Vibroengineering* 19, 6 (2017), 4272–4284. [https://doi.org/10.21595/jve.2017.18549](https://doi.org/10.21595/jve.2017.18549)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Welz (2017) Zachary Allen Welz. 2017. *Integrating Disparate Nuclear Data Sources
    for Improved Predictive Maintenance Modeling : Maintenance-Based Prognostics for
    Long-Term Equipment Operation*. Ph.D. Dissertation. University of Tennessee. [https://trace.tennessee.edu/utk_graddiss/4667](https://trace.tennessee.edu/utk_graddiss/4667)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wen and Gao (2018) Juan Wen and Hongli Gao. 2018. Degradation assessment for
    the ball screw with variational autoencoder and kernel density estimation. *Advances
    in Mechanical Engineering* 10, 9 (2018). [https://doi.org/10.1177/1687814018797261](https://doi.org/10.1177/1687814018797261)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Wen et al. (2019) Long Wen, Liang Gao, and Xinyu Li. 2019. A new deep transfer
    learning based on sparse auto-encoder for fault diagnosis. *IEEE Transactions
    on Systems, Man, and Cybernetics: Systems* 49, 1 (2019), 136–144. [https://doi.org/10.1109/TSMC.2017.2754287](https://doi.org/10.1109/TSMC.2017.2754287)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wen and Keyes (2019) Tailai Wen and Roy Keyes. 2019. Time Series Anomaly Detection
    Using Convolutional Neural Networks and Transfer Learning. *arXiv preprint* (2019).
    arXiv:1905.13628
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Werbos (1988) Paul J. Werbos. 1988. Generalization of backpropagation with application
    to a recurrent gas market model. *Neural Networks* 1, 4 (1988), 339–356. [https://doi.org/10.1016/0893-6080(88)90007-X](https://doi.org/10.1016/0893-6080(88)90007-X)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Werbos (2005) Paul J. Werbos. 2005. Applications of advances in nonlinear sensitivity
    analysis. In *System Modeling and Optimization*. Springer, 762–770. [https://doi.org/10.1007/bfb0006203](https://doi.org/10.1007/bfb0006203)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Woldman et al. (2015) M. Woldman, T. Tinga, E. Van Der Heide, and M. A. Masen.
    2015. Abrasive wear based predictive maintenance for systems operating in sandy
    conditions. *Wear* 338-339 (2015), 316–324. [https://doi.org/10.1016/j.wear.2015.07.004](https://doi.org/10.1016/j.wear.2015.07.004)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wu et al. (2018) Zhenyu Wu, Hao Luo, Yunong Yang, Xinning Zhu, and Xiaofeng
    Qiu. 2018. An unsupervised degradation estimation framework for diagnostics and
    prognostics in cyber-physical system. In *IEEE World Forum on Internet of Things,
    WF-IoT 2018 - Proceedings*, Vol. 2018-January. 784–789. [https://doi.org/10.1109/WF-IoT.2018.8355191](https://doi.org/10.1109/WF-IoT.2018.8355191)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xia et al. (2017) Min Xia, Teng Li, Lizhi Liu, Lin Xu, and Clarence W. de Silva.
    2017. Intelligent fault diagnosis approach with unsupervised feature learning
    by stacked denoising autoencoder. *IET Science, Measurement and Technology* 11,
    6 (2017), 687–695. [https://doi.org/10.1049/iet-smt.2016.0423](https://doi.org/10.1049/iet-smt.2016.0423)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xu et al. (2018b) Fan Xu, Wai tai Peter Tse, and Yiu Lun Tse. 2018b. Roller
    bearing fault diagnosis using stacked denoising autoencoder in deep learning and
    Gath-Geva clustering algorithm without principal component analysis and data label.
    *Applied Soft Computing Journal* 73 (2018), 898–913. [https://doi.org/10.1016/j.asoc.2018.09.037](https://doi.org/10.1016/j.asoc.2018.09.037)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xu et al. (2018a) Haowen Xu, Yang Feng, Jie Chen, Zhaogang Wang, Honglin Qiao,
    Wenxiao Chen, Nengwen Zhao, Zeyan Li, Jiahao Bu, Zhihan Li, Ying Liu, Youjian
    Zhao, and Dan Pei. 2018a. Unsupervised Anomaly Detection via Variational Auto-Encoder
    for Seasonal KPIs in Web Applications. In *Proceedings of the 2018 World Wide
    Web Conference*. 187–196. [https://doi.org/10.1145/3178876.3185996](https://doi.org/10.1145/3178876.3185996)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yang et al. (2018) Wenguang Yang, Chao Liu, and Dongxiang Jiang. 2018. An unsupervised
    spatiotemporal graphical modeling approach for wind turbine condition monitoring.
    *Renewable Energy* 127 (2018), 230–241. [https://doi.org/10.1016/j.renene.2018.04.059](https://doi.org/10.1016/j.renene.2018.04.059)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yildirim and Kurt (2016) Mustagime Tulin Yildirim and Bulent Kurt. 2016. Engine
    health monitoring in an aircraft by using Levenberg-Marquardt Feedforward Neural
    Network and Radial Basis Function Network. In *Proceedings of the 2016 International
    Symposium on INnovations in Intelligent SysTems and Applications, INISTA 2016*.
    IEEE, 1–5. [https://doi.org/10.1109/INISTA.2016.7571847](https://doi.org/10.1109/INISTA.2016.7571847)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yoon et al. (2017) Andre S. Yoon, Taehoon Lee, Yongsub Lim, Deokwoo Jung, Philgyun
    Kang, Dongwon Kim, Keuntae Park, and Yongjin Choi. 2017. Semi-supervised Learning
    with Deep Generative Models for Asset Failure Prediction. *arXiv preprint* (2017).
    arXiv:1709.00845
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Yuan et al. (2019) Jin Yuan, Yi Wang, and Kesheng Wang. 2019. LSTM based prediction
    and time-temperature varying rate fusion for hydropower plant anomaly detection:
    A case study. In *Lecture Notes in Electrical Engineering*, Vol. 484\. Springer,
    86–94. [https://doi.org/10.1007/978-981-13-2375-1_13](https://doi.org/10.1007/978-981-13-2375-1_13)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuan et al. (2016) Mei Yuan, Yuting Wu, and Li Lin. 2016. Fault diagnosis and
    remaining useful life estimation of aero engine using LSTM neural network. In
    *AUS 2016 - 2016 IEEE/CSAA International Conference on Aircraft Utility Systems*.
    IEEE, 135–140. [https://doi.org/10.1109/AUS.2016.7748035](https://doi.org/10.1109/AUS.2016.7748035)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuwono et al. (2016) Mitchell Yuwono, Yong Qin, Jing Zhou, Ying Guo, Branko G.
    Celler, and Steven W. Su. 2016. Automatic bearing fault diagnosis using particle
    swarm clustering and Hidden Markov Model. *Engineering Applications of Artificial
    Intelligence* 47 (2016), 88–100. [https://doi.org/10.1016/j.engappai.2015.03.007](https://doi.org/10.1016/j.engappai.2015.03.007)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhai et al. (2019) Simon Zhai, Alexander Riess, and Gunther Reinhart. 2019.
    Formulation and solution for the predictive maintenance integrated job shop scheduling
    problem. In *2019 IEEE International Conference on Prognostics and Health Management,
    ICPHM 2019*. 1–8. [https://doi.org/10.1109/ICPHM.2019.8819397](https://doi.org/10.1109/ICPHM.2019.8819397)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhang et al. (2019d) Bin Zhang, Shaohui Zhang, and Weihua Li. 2019d. Bearing
    performance degradation assessment using long short-term memory recurrent network.
    *Computers in Industry* 106 (2019), 14–29. [https://doi.org/10.1016/j.compind.2018.12.016](https://doi.org/10.1016/j.compind.2018.12.016)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhang and Chen (2019) Chunkai Zhang and Yingyang Chen. 2019. Time Series Anomaly
    Detection with Variational Autoencoders. *arXiv preprint* (2019). arXiv:1907.01702
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhang et al. (2019a) Chi Zhang, Chetan Gupta, Ahmed Farahat, Kosta Ristovski,
    and Dipanjan Ghosh. 2019a. Equipment health indicator learning using deep reinforcement
    learning. In *Lecture Notes in Computer Science (including subseries Lecture Notes
    in Artificial Intelligence and Lecture Notes in Bioinformatics)*, Vol. 11053 LNAI.
    Springer, 488–504. [https://doi.org/10.1007/978-3-030-10997-4_30](https://doi.org/10.1007/978-3-030-10997-4_30)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhang et al. (2017) Chong Zhang, Pin Lim, A. K. Qin, and Kay Chen Tan. 2017.
    Multiobjective Deep Belief Networks Ensemble for Remaining Useful Life Estimation
    in Prognostics. *IEEE Transactions on Neural Networks and Learning Systems* 28,
    10 (2017), 2306–2318. [https://doi.org/10.1109/TNNLS.2016.2582798](https://doi.org/10.1109/TNNLS.2016.2582798)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhang et al. (2019b) Chuxu Zhang, Dongjin Song, Yuncong Chen, Xinyang Feng,
    Cristian Lumezanu, Wei Cheng, Jingchao Ni, Bo Zong, Haifeng Chen, and Nitesh V.
    Chawla. 2019b. A Deep Neural Network for Unsupervised Anomaly Detection and Diagnosis
    in Multivariate Time Series Data. In *Proceedings of the AAAI Conference on Artificial
    Intelligence*, Vol. 33\. 1409–1416. [https://doi.org/10.1609/aaai.v33i01.33011409](https://doi.org/10.1609/aaai.v33i01.33011409)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Zhang et al. (2019c) Weiting Zhang, Dong Yang, and Hongchao Wang. 2019c. Data-Driven
    Methods for Predictive Maintenance of Industrial Equipment: A Survey. *IEEE Systems
    Journal* 13, 3 (2019), 2213–2227. [https://doi.org/10.1109/JSYST.2019.2905565](https://doi.org/10.1109/JSYST.2019.2905565)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhang et al. (2005) Xiaodong Zhang, Roger Xu, Chiman Kwan, Steven Y. Liang,
    Qiulin Xie, and Leonard Haynes. 2005. An integrated approach to bearing fault
    diagnostics and prognostics. In *Proceedings of the American Control Conference*,
    Vol. 4\. IEEE, 2750–2755. [https://doi.org/10.1109/acc.2005.1470385](https://doi.org/10.1109/acc.2005.1470385)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhang et al. (2018) Yongzhi Zhang, Rui Xiong, Hongwen He, and Michael G. Pecht.
    2018. Long short-term memory recurrent neural network for remaining useful life
    prediction of lithium-ion batteries. *IEEE Transactions on Vehicular Technology*
    67, 7 (2018), 5695–5705. [https://doi.org/10.1109/TVT.2018.2805189](https://doi.org/10.1109/TVT.2018.2805189)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Zhang and Zhang (2015) Zhongju Zhang and Pengzhu Zhang. 2015. Seeing around
    the corner: an analytic approach for predictive maintenance using sensor data.
    *Journal of Management Analytics* 2, 4 (2015), 333–350. [https://doi.org/10.1080/23270012.2015.1086704](https://doi.org/10.1080/23270012.2015.1086704)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhao et al. (2013) Fuqiong Zhao, Zhigang Tian, and Yong Zeng. 2013. Uncertainty
    quantification in gear remaining useful life prediction through an integrated
    prognostics method. *IEEE Transactions on Reliability* 62, 1 (2013), 146–159.
    [https://doi.org/10.1109/TR.2013.2241216](https://doi.org/10.1109/TR.2013.2241216)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhao et al. (2017a) Pushe Zhao, Masaru Kurihara, Junichi Tanaka, Tojiro Noda,
    Shigeyoshi Chikuma, and Tadashi Suzuki. 2017a. Advanced correlation-based anomaly
    detection method for predictive maintenance. In *2017 IEEE International Conference
    on Prognostics and Health Management, ICPHM 2017*. IEEE, 78–83. [https://doi.org/10.1109/ICPHM.2017.7998309](https://doi.org/10.1109/ICPHM.2017.7998309)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhao et al. (2019) Rui Zhao, Ruqiang Yan, Zhenghua Chen, Kezhi Mao, Peng Wang,
    and Robert X. Gao. 2019. Deep learning and its applications to machine health
    monitoring. *Mechanical Systems and Signal Processing* 115 (2019), 213–237. [https://doi.org/10.1016/j.ymssp.2018.05.050](https://doi.org/10.1016/j.ymssp.2018.05.050)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhao et al. (2017b) Rui Zhao, Ruqiang Yan, Jinjiang Wang, and Kezhi Mao. 2017b.
    Learning to monitor machine health with convolutional Bi-directional LSTM networks.
    *Sensors (Switzerland)* 17, 2 (2017), 273. [https://doi.org/10.3390/s17020273](https://doi.org/10.3390/s17020273)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhao et al. (2010) Zhen Zhao, Fu Li Wang, Ming Xing Jia, and Shu Wang. 2010.
    Predictive maintenance policy based on process data. *Chemometrics and Intelligent
    Laboratory Systems* 103, 2 (2010), 137–143. [https://doi.org/10.1016/j.chemolab.2010.06.009](https://doi.org/10.1016/j.chemolab.2010.06.009)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zheng et al. (2017) Shuai Zheng, Kosta Ristovski, Ahmed Farahat, and Chetan
    Gupta. 2017. Long Short-Term Memory Network for Remaining Useful Life estimation.
    In *2017 IEEE International Conference on Prognostics and Health Management, ICPHM
    2017*. IEEE, 88–95. [https://doi.org/10.1109/ICPHM.2017.7998311](https://doi.org/10.1109/ICPHM.2017.7998311)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhou et al. (2014) Zhenghua Zhou, Jianwei Zhao, and Feilong Cao. 2014. A novel
    approach for fault diagnosis of induction motor with invariant character vectors.
    *Information Sciences* 281 (2014), 496–506. [https://doi.org/10.1016/j.ins.2014.05.046](https://doi.org/10.1016/j.ins.2014.05.046)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zio and Di Maio (2010) Enrico Zio and Francesco Di Maio. 2010. A data-driven
    fuzzy approach for predicting the remaining useful life in dynamic failure scenarios
    of a nuclear system. *Reliability Engineering & System Safety* 95, 1 (2010), 49–57.
    [https://doi.org/10.1016/j.ress.2009.08.001](https://doi.org/10.1016/j.ress.2009.08.001)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zong et al. (2018) Bo Zong, Qi Song, Martin Renqiang Min, Wei Cheng, Cristian
    Lumezanu, Daeki Cho, and Haifeng Chen. 2018. Deep autoencoding Gaussian mixture
    model for unsupervised anomaly detection. *6th International Conference on Learning
    Representations, ICLR 2018 - Conference Track Proceedings* (2018).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zugasti et al. (2012) E. Zugasti, P. Arrillaga, J. Anduaga, M. A. Arregui, and
    F. Martínez. 2012. Sensor fault identification on laboratory tower. *Proceedings
    of the 6th European Workshop - Structural Health Monitoring 2012, EWSHM 2012*
    2 (2012), 1093–1100.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Zugasti et al. (2018) Ekhi Zugasti, Mikel Iturbe, Inaki Garitano, and Urko
    Zurutuza. 2018. Null is not always empty: Monitoring the null space for field-level
    anomaly detection in industrial IoT environments. *2018 Global Internet of Things
    Summit, GIoTS 2018* (2018). [https://doi.org/10.1109/GIOTS.2018.8534574](https://doi.org/10.1109/GIOTS.2018.8534574)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
